    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/100_doors)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (18 fixes)
warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:20:55
   |
20 |             is_open[door as usize] = i8::from(is_open[door as usize] == 0);
   |                                                       ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:55
   |
20 |             is_open[door as usize] = i8::from(is_open[door as usize] == 0);
   |                                                       ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:20:21
   |
20 |             is_open[door as usize] = i8::from(is_open[door as usize] == 0);
   |                     ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:21
   |
20 |             is_open[door as usize] = i8::from(is_open[door as usize] == 0);
   |                     ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:21:13
   |
21 |             door += pass.wrapping_add(1);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:24:9
   |
24 |         pass;
   |         -^^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:28:30
   |
28 |         if i32::from(is_open[door as usize]) != 0_i32 {
   |                              ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:30
   |
28 |         if i32::from(is_open[door as usize]) != 0_i32 {
   |                              ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:29:45
   |
29 |             println!("door #{} is open\0.", door + 1_i32)
   |                                             ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:31:47
   |
31 |             println!("door #{} is closed\0.", door + 1_i32)
   |                                               ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:34:9
   |
34 |         door;
   |         -^^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:24:9
   |
24 |         pass;
   |         ^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:34:9
   |
34 |         door;
   |         ^^^^^

warning: `c2rust_out` (bin "main" test) generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.55s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/100_prisoners)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:35:5
   |
35 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:29:25
   |
29 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/15_puzzle_game)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/2048)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/21_game)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:36:5
   |
36 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:30:25
   |
30 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

error[E0277]: no implementation for `{integer} & &bool`
   --> src/main.rs:143:32
    |
143 |                 || move_0 != 0 & &(move_0 < 1 || move_0 > 3 || total + move_0 > 21))
    |                                ^ no implementation for `{integer} & &bool`
    |
    = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `{integer}`
    = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
              <&'a i128 as std::ops::BitAnd<i128>>
              <&'a i16 as std::ops::BitAnd<i16>>
              <&'a i32 as std::ops::BitAnd<i32>>
              <&'a i64 as std::ops::BitAnd<i64>>
              <&'a i8 as std::ops::BitAnd<i8>>
              <&'a isize as std::ops::BitAnd<isize>>
              <&'a u128 as std::ops::BitAnd<u128>>
              <&'a u16 as std::ops::BitAnd<u16>>
            and 40 others

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to 2 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to 2 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/24_game)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/4_rings_puzzle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/99_bottles_of_beer)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (7 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:16:149
   |
16 | ...d pass it around, {} bottles of beer on the wall.\n\n", n, n, n - 1_i32);
   |                                                                  ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:18:9
   |
18 |         n;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:18:9
   |
18 |         n;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 4 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 4 warnings (4 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.54s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/9_billion_names_of_God_the_integer)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (9 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:17:26
   |
17 |         let mut d: i32 = n - k * (3 * k.wrapping_sub(1)) / 2;
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:26:9
   |
26 |         k;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:34:15
   |
34 |     while idx[at as usize] != 0_i32 {
   |               ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:15
   |
34 |     while idx[at as usize] != 0_i32 {
   |               ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:36:21
   |
36 |         if i == idx[at as usize] {
   |                     ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:21
   |
36 |         if i == idx[at as usize] {
   |                     ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:38:13
   |
38 |             at;
   |             -^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:41:9
   |
41 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:26:9
   |
26 |         k;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:38:13
   |
38 |             at;
   |             ^^^

warning: path statement with no effect
  --> src/main.rs:41:9
   |
41 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 12 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.55s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/abbreviations_automatic)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (37 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:38:1
   |
38 | / pub struct _IO_FILE {
39 | |     pub _flags: i32,
40 | |     pub _IO_read_ptr: *mut i8,
41 | |     pub _IO_read_end: *mut i8,
...  |
67 | |     pub _unused2: [i8; 20],
68 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
38 + #[non_exhaustive]
39 | pub struct _IO_FILE {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:79:26
   |
79 |         while i32::from(*buffer.offset(i as isize)) != 0_i32 {
   |                          ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:80:27
   |
80 |             if i32::from(*buffer.offset(i as isize)) == ' ' as i32 {
   |                           ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:85:34
   |
85 |             } else if i32::from(*buffer.offset(i as isize)) == '\n' as i32
   |                                  ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:86:31
   |
86 |                 || i32::from(*buffer.offset(i as isize)) == '\r' as i32
   |                               ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:93:49
   |
93 |                 days[d as usize][j as usize] = *buffer.offset(i as isize);
   |                                                 ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:107:23
    |
107 |         if i32::from(*buffer.offset(i as isize)) == '\0' as i32 {
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:40
   |
79 |         while i32::from(*buffer.offset(i as isize)) != 0_i32 {
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:41
   |
80 |             if i32::from(*buffer.offset(i as isize)) == ' ' as i32 {
   |                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:57
   |
80 |             if i32::from(*buffer.offset(i as isize)) == ' ' as i32 {
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:48
   |
81 |                 days[d as usize][j as usize] = '\0' as i8;
   |                                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:81:22
   |
81 |                 days[d as usize][j as usize] = '\0' as i8;
   |                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:22
   |
81 |                 days[d as usize][j as usize] = '\0' as i8;
   |                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:81:34
   |
81 |                 days[d as usize][j as usize] = '\0' as i8;
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:34
   |
81 |                 days[d as usize][j as usize] = '\0' as i8;
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:83:17
   |
83 |                 d;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:48
   |
85 |             } else if i32::from(*buffer.offset(i as isize)) == '\n' as i32
   |                                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:64
   |
85 |             } else if i32::from(*buffer.offset(i as isize)) == '\n' as i32
   |                                                                ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:45
   |
86 |                 || i32::from(*buffer.offset(i as isize)) == '\r' as i32
   |                                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:61
   |
86 |                 || i32::from(*buffer.offset(i as isize)) == '\r' as i32
   |                                                             ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:48
   |
88 |                 days[d as usize][j as usize] = '\0' as i8;
   |                                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:88:22
   |
88 |                 days[d as usize][j as usize] = '\0' as i8;
   |                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:22
   |
88 |                 days[d as usize][j as usize] = '\0' as i8;
   |                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:88:34
   |
88 |                 days[d as usize][j as usize] = '\0' as i8;
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:34
   |
88 |                 days[d as usize][j as usize] = '\0' as i8;
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:90:17
   |
90 |                 d;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:63
   |
93 |                 days[d as usize][j as usize] = *buffer.offset(i as isize);
   |                                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:93:22
   |
93 |                 days[d as usize][j as usize] = *buffer.offset(i as isize);
   |                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:22
   |
93 |                 days[d as usize][j as usize] = *buffer.offset(i as isize);
   |                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:93:34
   |
93 |                 days[d as usize][j as usize] = *buffer.offset(i as isize);
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:34
   |
93 |                 days[d as usize][j as usize] = *buffer.offset(i as isize);
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:95:17
   |
95 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:21
   |
99 |                     (b"There aren't 7 days in line %d\n\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:105:13
    |
105 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:37
    |
107 |         if i32::from(*buffer.offset(i as isize)) == '\0' as i32 {
    |                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:53
    |
107 |         if i32::from(*buffer.offset(i as isize)) == '\0' as i32 {
    |                                                     ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:44
    |
108 |             days[d as usize][j as usize] = '\0' as i8;
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:108:18
    |
108 |             days[d as usize][j as usize] = '\0' as i8;
    |                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:18
    |
108 |             days[d as usize][j as usize] = '\0' as i8;
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:108:30
    |
108 |             days[d as usize][j as usize] = '\0' as i8;
    |                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:30
    |
108 |             days[d as usize][j as usize] = '\0' as i8;
    |                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:110:13
    |
110 |             d;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:17
    |
114 |                 (b"There aren't 7 days in line %d\n\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:136:47
    |
136 | ...                   if i32::from(days[d1 as usize][i as usize])
    |                                         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:47
    |
136 | ...                   if i32::from(days[d1 as usize][i as usize])
    |                                         ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:136:60
    |
136 | ...                   if i32::from(days[d1 as usize][i as usize])
    |                                                      ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:60
    |
136 | ...                   if i32::from(days[d1 as usize][i as usize])
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:137:51
    |
137 | ...                   != i32::from(days[d2 as usize][i as usize])
    |                                         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:51
    |
137 | ...                   != i32::from(days[d2 as usize][i as usize])
    |                                         ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:137:64
    |
137 | ...                   != i32::from(days[d2 as usize][i as usize])
    |                                                      ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:64
    |
137 | ...                   != i32::from(days[d2 as usize][i as usize])
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:143:33
    |
143 | ...                   i;
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:151:25
    |
151 |                         d2;
    |                         ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:154:21
    |
154 |                     d1;
    |                     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:164:62
    |
164 | ...                   build_str_from_raw_ptr((days[i as usize]).as_mut_ptr().cast::<u8>())
    |                                                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:164:62
    |
164 | ...                   build_str_from_raw_ptr((days[i as usize]).as_mut_ptr().cast::<u8>())
    |                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:167:29
    |
167 | ...                   i;
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:174:17
    |
174 |                 len;
    |                 ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:189:13
    |
189 |             (b"days_of_week.txt\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:13
    |
190 |             (b"r\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:200:17
    |
200 |                 ::core::mem::size_of::<[i8; 1024]>() as i32,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
200 |                 i32::try_from(::core::mem::size_of::<[i8; 1024]>()),
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:200:17
    |
200 |                 ::core::mem::size_of::<[i8; 1024]>() as i32,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: casting `u64` to `i32` may truncate the value
   --> src/main.rs:203:19
    |
203 |             len = strlen(buffer.as_mut_ptr()) as i32;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
203 |             len = i32::try_from(strlen(buffer.as_mut_ptr()));
    |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:203:19
    |
203 |             len = strlen(buffer.as_mut_ptr()) as i32;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:204:49
    |
204 |             if len == 0_i32 || i32::from(buffer[(len.wrapping_sub(1i32)) as usize]) == '\0' as i32 {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:204:49
    |
204 |             if len == 0_i32 || i32::from(buffer[(len.wrapping_sub(1i32)) as usize]) == '\0' as i32 {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:204:88
    |
204 |             if len == 0_i32 || i32::from(buffer[(len.wrapping_sub(1i32)) as usize]) == '\0' as i32 {
    |                                                                                        ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:83:17
   |
83 |                 d;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:90:17
   |
90 |                 d;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:95:17
   |
95 |                 j;
   |                 ^^

warning: path statement with no effect
   --> src/main.rs:105:13
    |
105 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:110:13
    |
110 |             d;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:143:33
    |
143 | ...                   i;
    |                       ^^

warning: path statement with no effect
   --> src/main.rs:151:25
    |
151 |                         d2;
    |                         ^^^

warning: path statement with no effect
   --> src/main.rs:154:21
    |
154 |                     d1;
    |                     ^^^

warning: path statement with no effect
   --> src/main.rs:167:29
    |
167 | ...                   i;
    |                       ^^

warning: path statement with no effect
   --> src/main.rs:174:17
    |
174 |                 len;
    |                 ^^^^

warning: `c2rust_out` (bin "main") generated 78 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 78 warnings (78 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.73s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/abbreviations_easy)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/abbreviations_simple)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/ABC_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/abelian_sandpile_model)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (76 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:42:1
   |
42 | / pub struct _IO_FILE {
43 | |     pub _flags: i32,
44 | |     pub _IO_read_ptr: *mut i8,
45 | |     pub _IO_read_end: *mut i8,
...  |
71 | |     pub _unused2: [i8; 20],
72 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
42 + #[non_exhaustive]
43 | pub struct _IO_FILE {
   |

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:104:20
    |
104 |             malloc((sandPileEdge as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
    |                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:20
    |
104 |             malloc((sandPileEdge as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
    |                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:49
    |
107 |             let fresh0 = &mut (*sandPile.offset(i as isize));
    |                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:108:30
    |
108 |             *fresh0 = calloc(sandPileEdge as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
    |                              ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:30
    |
108 |             *fresh0 = calloc(sandPileEdge as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
    |                              ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:110:13
    |
110 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:28
    |
112 |         *(*sandPile.offset((sandPileEdge.wrapping_div(2i32)) as isize))
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:21
    |
113 |             .offset((sandPileEdge.wrapping_div(2i32)) as isize) = centerPileHeight;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:119:51
    |
119 |                 print!("{:3}", *(*sandPile.offset(i as isize)).offset(j as isize));
    |                                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:119:71
    |
119 |                 print!("{:3}", *(*sandPile.offset(i as isize)).offset(j as isize));
    |                                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:121:17
    |
121 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:125:13
    |
125 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:43
    |
137 |                     if *(*sandPile.offset(i as isize)).offset(j as isize) >= 4_i32 {
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:63
    |
137 |                     if *(*sandPile.offset(i as isize)).offset(j as isize) >= 4_i32 {
    |                                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:140:29
    |
140 | / ...                   *(*sandPile.offset((i.wrapping_sub(1i32)) as isize))
141 | | ...                       .offset(j as isize) += 1_i32;
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:140:48
    |
140 | ...                   *(*sandPile.offset((i.wrapping_sub(1i32)) as isize))
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:41
    |
141 | ...                   .offset(j as isize) += 1_i32;
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:142:51
    |
142 | ...                   if *(*sandPile.offset((i.wrapping_sub(1i32)) as isize))
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:143:41
    |
143 | ...                   .offset(j as isize)
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:151:29
    |
151 | / ...                   *(*sandPile.offset((i.wrapping_add(1i32)) as isize))
152 | | ...                       .offset(j as isize) += 1_i32;
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:151:48
    |
151 | ...                   *(*sandPile.offset((i.wrapping_add(1i32)) as isize))
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:41
    |
152 | ...                   .offset(j as isize) += 1_i32;
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:51
    |
153 | ...                   if *(*sandPile.offset((i.wrapping_add(1i32)) as isize))
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:154:41
    |
154 | ...                   .offset(j as isize)
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:162:29
    |
162 | / ...                   *(*sandPile.offset(i as isize))
163 | | ...                       .offset((j.wrapping_sub(1i32)) as isize) += 1_i32;
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:48
    |
162 | ...                   *(*sandPile.offset(i as isize))
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:163:41
    |
163 | ...                   .offset((j.wrapping_sub(1i32)) as isize) += 1_i32;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:164:51
    |
164 | ...                   if *(*sandPile.offset(i as isize))
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:165:41
    |
165 | ...                   .offset((j.wrapping_sub(1i32)) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:173:29
    |
173 | / ...                   *(*sandPile.offset(i as isize))
174 | | ...                       .offset((j.wrapping_add(1i32)) as isize) += 1_i32;
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:173:48
    |
173 | ...                   *(*sandPile.offset(i as isize))
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:174:41
    |
174 | ...                   .offset((j.wrapping_add(1i32)) as isize) += 1_i32;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:175:51
    |
175 | ...                   if *(*sandPile.offset(i as isize))
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:41
    |
176 | ...                   .offset((j.wrapping_add(1i32)) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:182:25
    |
182 | /                         *(*sandPile.offset(i as isize)).offset(j as isize) -=
183 | |                             top + down + left.wrapping_add(right);
    | |_________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:182:44
    |
182 |                         *(*sandPile.offset(i as isize)).offset(j as isize) -=
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:182:64
    |
182 |                         *(*sandPile.offset(i as isize)).offset(j as isize) -=
    |                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:184:47
    |
184 |                         if *(*sandPile.offset(i as isize)).offset(j as isize) >= 4_i32 {
    |                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:184:67
    |
184 |                         if *(*sandPile.offset(i as isize)).offset(j as isize) >= 4_i32 {
    |                                                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:189:21
    |
189 |                     j;
    |                     -^
    |                     |
    |                     help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:192:17
    |
192 |                 i;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:200:51
    |
200 |                 print!("{:3}", *(*sandPile.offset(i as isize)).offset(j as isize));
    |                                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:200:71
    |
200 |                 print!("{:3}", *(*sandPile.offset(i as isize)).offset(j as isize));
    |                                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:202:17
    |
202 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:206:13
    |
206 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:214:26
    |
214 |         strcpy(fileName, (b"Final_Sand_Pile_\0" as *const u8).cast::<i8>());
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:216:26
    |
216 |         strcat(fileName, (b"_\0" as *const u8).cast::<i8>());
    |                          ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:218:26
    |
218 |         strcat(fileName, (b".ppm\0" as *const u8).cast::<i8>());
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:219:49
    |
219 |         let mut fp: *mut FILE = fopen(fileName, (b"wb\0" as *const u8).cast::<i8>());
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:222:13
    |
222 |             (b"P6\n%d %d\n255\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
   --> src/main.rs:231:21
    |
231 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
231 |                     u8::try_from((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32);
    |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/main.rs:231:21
    |
231 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:231:21
    |
231 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:231:21
    |
231 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:231:22
    |
231 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32) as u8;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:231:42
    |
231 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32) as u8;
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:231:62
    |
231 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + i) % 256i32) as u8;
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
   --> src/main.rs:233:21
    |
233 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
233 |                     u8::try_from((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32);
    |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/main.rs:233:21
    |
233 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:233:21
    |
233 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:233:21
    |
233 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32) as u8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:233:22
    |
233 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32) as u8;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:233:42
    |
233 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32) as u8;
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:233:62
    |
233 |                     ((*(*sandPile.offset(i as isize)).offset(j as isize) + j) % 256i32) as u8;
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
   --> src/main.rs:234:35
    |
234 |                   colour[2_usize] = ((*(*sandPile.offset(i as isize)).offset(j as isize)
    |  ___________________________________^
235 | |                     + i.wrapping_mul(j))
236 | |                     % 256i32) as u8;
    | |___________________________________^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
234 ~                 colour[2_usize] = u8::try_from((*(*sandPile.offset(i as isize)).offset(j as isize)
235 ~                     + i.wrapping_mul(j)) % 256i32);
    |

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/main.rs:234:35
    |
234 |                   colour[2_usize] = ((*(*sandPile.offset(i as isize)).offset(j as isize)
    |  ___________________________________^
235 | |                     + i.wrapping_mul(j))
236 | |                     % 256i32) as u8;
    | |___________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:234:35
    |
234 |                   colour[2_usize] = ((*(*sandPile.offset(i as isize)).offset(j as isize)
    |  ___________________________________^
235 | |                     + i.wrapping_mul(j))
236 | |                     % 256i32) as u8;
    | |___________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:234:35
    |
234 |                   colour[2_usize] = ((*(*sandPile.offset(i as isize)).offset(j as isize)
    |  ___________________________________^
235 | |                     + i.wrapping_mul(j))
236 | |                     % 256i32) as u8;
    | |_____________________________^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:234:36
    |
234 |                   colour[2_usize] = ((*(*sandPile.offset(i as isize)).offset(j as isize)
    |  ____________________________________^
235 | |                     + i.wrapping_mul(j))
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:234:56
    |
234 |                 colour[2_usize] = ((*(*sandPile.offset(i as isize)).offset(j as isize)
    |                                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:234:76
    |
234 |                 colour[2_usize] = ((*(*sandPile.offset(i as isize)).offset(j as isize)
    |                                                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:237:24
    |
237 |                 fwrite(colour.as_mut_ptr() as *const libc::c_void, 1, 3, fp);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:239:17
    |
239 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:242:13
    |
242 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: used `expect()` on a `Result` value
   --> src/main.rs:257:13
    |
257 | /             (::std::ffi::CString::new(arg))
258 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:253:1
    |
253 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:257:13
    |
257 | /             (::std::ffi::CString::new(arg))
258 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:263:33
    |
263 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
263 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:263:33
    |
263 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:263:33
    |
263 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:263:33
    |
263 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
   --> src/main.rs:110:13
    |
110 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:121:17
    |
121 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:125:13
    |
125 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:189:21
    |
189 |                     j;
    |                     ^^

warning: path statement with no effect
   --> src/main.rs:192:17
    |
192 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:202:17
    |
202 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:206:13
    |
206 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:239:17
    |
239 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:242:13
    |
242 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 90 warnings (2 duplicates)
warning: `c2rust_out` (bin "main" test) generated 91 warnings (89 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.02s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/abundant_deficient_and_perfect_number_classifications)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (23 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:24:16
   |
24 |             if i % j == 0_i32 {
   |                ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:24:16
   |
24 |             if i % j == 0_i32 {
   |                ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: statement with no effect
  --> src/main.rs:32:13
   |
32 |             j;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: `if` chain can be rewritten with `match`
  --> src/main.rs:34:9
   |
34 | /         if sum < i {
35 | |             count_list[0_usize] += 1_i32;
36 | |             count_list[0_usize];
37 | |         } else if sum > i {
...  |
42 | |             count_list[1_usize];
43 | |         }
   | |_________^
   |
   = help: consider rewriting the `if` chain to use `cmp` and `match`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain
   = note: `#[warn(clippy::comparison_chain)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:35:13
   |
35 |             count_list[0_usize] += 1_i32;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:36:13
   |
36 |             count_list[0_usize];
   |             -^^^^^^^^^^^^^^^^^^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:38:13
   |
38 |             count_list[2_usize] += 1_i32;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:39:13
   |
39 |             count_list[2_usize];
   |             -^^^^^^^^^^^^^^^^^^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:41:13
   |
41 |             count_list[1_usize] += 1_i32;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:42:13
   |
42 |             count_list[1_usize];
   |             -^^^^^^^^^^^^^^^^^^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:45:9
   |
45 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:32:13
   |
32 |             j;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:45:9
   |
45 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.18s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/abundant_odd_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:34:5
   |
34 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:21:30
   |
21 |         while f64::from(i) < sqrt(f64::from(n)) + 1_f64 {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:22:31
   |
22 |             if n.wrapping_rem(i) == 0 {
   |                               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:23:36
   |
23 |                 j = n.wrapping_div(i);
   |                                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:49:17
   |
49 |                 c;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:66:1
   |
66 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:70:13
   |
70 | /             (::std::ffi::CString::new(arg))
71 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:70:13
   |
70 | /             (::std::ffi::CString::new(arg))
71 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:77:16
   |
77 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
77 |         main_0(i32::try_from(args.len() - 1), args.as_mut_ptr().cast::<*const i8>()),
   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:77:16
   |
77 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:16
   |
77 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:77:16
   |
77 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:49:17
   |
49 |                 c;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 13 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.75s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/accumulator_factory)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:17:17
   |
17 |         _n = _n.wrapping_add(i);
   |                 ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/ackermann_function)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:29:19
   |
29 |         while n < 6_i32 - m {
   |                   ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:32:13
   |
32 |             n;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:35:9
   |
35 |         m;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:32:13
   |
32 |             n;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:35:9
   |
35 |         m;
   |         ^^

warning: `c2rust_out` (bin "main") generated 6 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 6 warnings (6 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.62s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/active_object)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:77:16
   |
77 |     (*x).v += ((*x).last_v + v) * (t - (*x).last_t) / 2 as f64;
   |                ^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:77:40
   |
77 |     (*x).v += ((*x).last_v + v) * (t - (*x).last_t) / 2 as f64;
   |                                        ^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:77:5
   |
77 |     (*x).v += ((*x).last_v + v) * (t - (*x).last_t) / 2 as f64;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:78:5
   |
78 |     (*x).last_t = t;
   |     ^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:101:5
    |
101 |     (*x).last_t = 0 as f64;
    |     ^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

For more information about this error, try `rustc --explain E0133`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to 5 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to 5 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/AKS_test_for_primes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/aliquot_sequence_classifications)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/almost_prime)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/amicable_pairs)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/anagrams)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/angle_difference_between_two_bearings)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (39 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:37:1
   |
37 | / pub struct _IO_FILE {
38 | |     pub _flags: i32,
39 | |     pub _IO_read_ptr: *mut i8,
40 | |     pub _IO_read_end: *mut i8,
...  |
66 | |     pub _unused2: [i8; 20],
67 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
37 + #[non_exhaustive]
38 | pub struct _IO_FILE {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:79:39
   |
79 |         let mut fp: *mut FILE = fopen(name, (b"r\0" as *const u8).cast::<i8>());
   |                                       ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:45
   |
79 |         let mut fp: *mut FILE = fopen(name, (b"r\0" as *const u8).cast::<i8>());
   |                                             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:13
   |
82 |             (b"%d\n\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:13
   |
83 |             &mut records as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:17
   |
89 |                 (b"%lf%lf\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:17
   |
90 |                 &mut b1 as *mut f64,
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:17
   |
91 |                 &mut b2 as *mut f64,
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:93:25
   |
93 |             diff = fmod(b2 - b1, 360.0f64);
   |                         ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:99:21
   |
99 |                     diff + 360_f64
   |                     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:106:21
    |
106 |                     diff - 360_f64
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: statement with no effect
   --> src/main.rs:112:13
    |
112 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: `if` chain can be rewritten with `match`
   --> src/main.rs:122:9
    |
122 | / ...   if argC < 2_i32 {
123 | | ...       print! ("Usage : {} <bearings separated by a space OR full file name which contains the bearing list>", build_str_from_raw_ptr ...
124 | | ...   } else if argC == 2_i32 {
125 | | ...       processFile(*argV.offset(1_isize));
...   |
152 | | ...       };
153 | | ...   }
    | |_______^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain
    = note: `#[warn(clippy::comparison_chain)]` on by default

warning: floating-point arithmetic detected
   --> src/main.rs:128:17
    |
128 |                 atof(*argV.offset(2_isize)) - atof(*argV.offset(1_isize)),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:136:21
    |
136 |                     diff + 360_f64
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:143:21
    |
143 |                     diff - 360_f64
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: used `expect()` on a `Result` value
   --> src/main.rs:162:13
    |
162 | /             (::std::ffi::CString::new(arg))
163 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:168:33
    |
168 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
168 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:168:33
    |
168 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:168:33
    |
168 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:168:33
    |
168 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
   --> src/main.rs:112:13
    |
112 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 23 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:158:1
    |
158 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:162:13
    |
162 | /             (::std::ffi::CString::new(arg))
163 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 24 warnings (23 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.06s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/A_plus_B)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (6 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:13
   |
20 |             (b"%d%d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:21:13
   |
21 |             &mut a as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:13
   |
22 |             &mut b as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:25:20
   |
25 |     println!("{}", a + b);
   |                    ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: `c2rust_out` (bin "main") generated 5 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 5 warnings (5 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.55s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/apply_a_callback_to_an_array)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (6 fixes)
warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:17:1
   |
17 | / pub extern "C" fn map(
18 | |     mut array: *mut i32,
19 | |     mut len: i32,
20 | | // SAFETY: machine generated unsafe code
21 | |     mut callback: Option<unsafe extern "C" fn(i32, i32) -> ()>,
22 | | ) {
   | |_^
   |
note: first possible panic found here
  --> src/main.rs:30:25
   |
30 |                 None => panic!("non-null function pointer"),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:29:52
   |
29 |                 Some(callback_m) => callback_m(i, *array.offset(i as isize)),
   |                                                    ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:65
   |
29 |                 Some(callback_m) => callback_m(i, *array.offset(i as isize)),
   |                                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:33:13
   |
33 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:14
   |
44 |         Some(callbackFunction as unsafe extern "C" fn(i32, i32) -> ()),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:33:13
   |
33 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 7 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 7 warnings (7 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.54s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/apply_a_digital_filter)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (55 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:43:1
   |
43 | / pub struct _IO_FILE {
44 | |     pub _flags: i32,
45 | |     pub _IO_read_ptr: *mut i8,
46 | |     pub _IO_read_end: *mut i8,
...  |
72 | |     pub _unused2: [i8; 20],
73 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
43 + #[non_exhaustive]
44 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:79:1
   |
79 | / pub struct vector {
80 | |     pub values: *mut libc::c_float,
81 | |     pub size: i32,
82 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
79 + #[non_exhaustive]
80 | pub struct vector {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:94:26
   |
94 |         while i32::from(*str.offset(i as isize)) != 0_i32 {
   |                          ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:97:27
   |
97 |             if i32::from(*str.offset(fresh0 as isize)) == ' ' as i32 {
   |                           ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:105:24
    |
105 |         token = strtok(str, (b" \0" as *const u8).cast::<i8>());
    |                        ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:94:37
   |
94 |         while i32::from(*str.offset(i as isize)) != 0_i32 {
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:38
   |
97 |             if i32::from(*str.offset(fresh0 as isize)) == ' ' as i32 {
   |                                      ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:59
   |
97 |             if i32::from(*str.offset(fresh0 as isize)) == ' ' as i32 {
   |                                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:99:17
   |
99 |                 count;
   |                 ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:103:20
    |
103 |             malloc((count as u64).wrapping_mul(::core::mem::size_of::<libc::c_float>() as u64)).cast::<f32>();
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:20
    |
103 |             malloc((count as u64).wrapping_mul(::core::mem::size_of::<libc::c_float>() as u64)).cast::<f32>();
    |                    ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:29
    |
105 |         token = strtok(str, (b" \0" as *const u8).cast::<i8>());
    |                             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
   --> src/main.rs:110:55
    |
110 |             *(coeff.values).offset(fresh1 as isize) = atof(token) as libc::c_float;
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:55
    |
110 |             *(coeff.values).offset(fresh1 as isize) = atof(token) as libc::c_float;
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:36
    |
110 |             *(coeff.values).offset(fresh1 as isize) = atof(token) as libc::c_float;
    |                                    ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:56
    |
111 |             token = strtok(std::ptr::null_mut::<i8>(), (b" \0" as *const u8).cast::<i8>());
    |                                                        ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:39
    |
141 |         let mut fp: *mut FILE = fopen(fileName, (b"r\0" as *const u8).cast::<i8>());
    |                                       ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:49
    |
141 |         let mut fp: *mut FILE = fopen(fileName, (b"r\0" as *const u8).cast::<i8>());
    |                                                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:150:13
    |
150 |             signal.size as u64,
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:150:13
    |
150 |             signal.size as u64,
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `f32` causes a loss of precision (`i32` is 32 bits wide, but `f32`'s mantissa is only 23 bits wide)
   --> src/main.rs:156:19
    |
156 |             sum = 0_i32 as libc::c_float;
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:156:19
    |
156 |             sum = 0_i32 as libc::c_float;
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:159:20
    |
159 |                 if i - j >= 0_i32 {
    |                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: floating-point arithmetic detected
   --> src/main.rs:160:21
    |
160 | /                     sum += *(coeff2.values).offset(j as isize)
161 | |                         * *(signal.values).offset((i - j) as isize);
    | |___________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:52
    |
160 |                     sum += *(coeff2.values).offset(j as isize)
    |                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:51
    |
161 |                         * *(signal.values).offset((i - j) as isize);
    |                                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:161:51
    |
161 |                         * *(signal.values).offset((i - j) as isize);
    |                                                   ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:164:17
    |
164 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:168:20
    |
168 |                 if i - j >= 0_i32 {
    |                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: floating-point arithmetic detected
   --> src/main.rs:169:21
    |
169 | /                     sum -= *(coeff1.values).offset(j as isize)
170 | |                         * *(filteredSignal.values).offset((i - j) as isize);
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:169:52
    |
169 |                     sum -= *(coeff1.values).offset(j as isize)
    |                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:170:59
    |
170 |                         * *(filteredSignal.values).offset((i - j) as isize);
    |                                                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:170:59
    |
170 |                         * *(filteredSignal.values).offset((i - j) as isize);
    |                                                           ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:173:17
    |
173 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
   --> src/main.rs:175:13
    |
175 |             sum /= *(coeff1.values).offset(0_isize);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:45
    |
176 |             *(filteredSignal.values).offset(i as isize) = sum;
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:178:13
    |
178 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:199:43
    |
199 |             let mut fp: *mut FILE = fopen(outputFile, (b"w\0" as *const u8).cast::<i8>());
    |                                           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:193:65
    |
193 |                 print!("{:.12}, ", f64::from(*(v.values).offset(i as isize)));
    |                                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:195:17
    |
195 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:199:55
    |
199 |             let mut fp: *mut FILE = fopen(outputFile, (b"w\0" as *const u8).cast::<i8>());
    |                                                       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:201:23
    |
201 |             while i < v.size - 1_i32 {
    |                       ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:204:21
    |
204 |                     (b"%.12f, \0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:205:50
    |
205 |                     f64::from(*(v.values).offset(i as isize)),
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:208:17
    |
208 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:212:17
    |
212 |                 (b"%.12f\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:213:46
    |
213 |                 f64::from(*(v.values).offset(i as isize)),
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:237:29
    |
237 |                 strcpy(str, (b"written to \0" as *const u8).cast::<i8>());
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:245:25
    |
245 |                         strcat(str, *argV.offset(2_isize)) as *const i8 as *mut u8
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:245:25
    |
245 |                         strcat(str, *argV.offset(2_isize)) as *const i8 as *mut u8
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:258:1
    |
258 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:262:13
    |
262 | /             (::std::ffi::CString::new(arg))
263 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:262:13
    |
262 | /             (::std::ffi::CString::new(arg))
263 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:268:33
    |
268 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
268 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:268:33
    |
268 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:268:33
    |
268 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:268:33
    |
268 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:99:17
   |
99 |                 count;
   |                 ^^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:164:17
    |
164 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:173:17
    |
173 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:178:13
    |
178 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:195:17
    |
195 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:208:17
    |
208 |                 i;
    |                 ^^

warning: `c2rust_out` (bin "main" test) generated 63 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 62 warnings (62 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.03s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/approximate_equility)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (11 fixes)
warning: floating-point arithmetic detected
  --> src/main.rs:19:14
   |
19 |         fabs(value - other) < epsilon
   |              ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:32:10
   |
32 |     test(10000000000000.001f64 / 10000.0f64, 1_000_000_000.000_000_1_f64);
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:37:14
   |
37 |         test(sqrt(2.0f64) * sqrt(2.0f64), 2.0f64);
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:38:14
   |
38 |         test(-sqrt(2.0f64) * sqrt(2.0f64), -2.0f64);
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: approximate value of `f64::consts::PI` found
  --> src/main.rs:40:10
   |
40 |     test(3.141_592_653_589_793_f64, 3.141_592_653_589_793_f64);
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using the constant directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
   = note: `#[warn(clippy::approx_constant)]` on by default

warning: approximate value of `f64::consts::PI` found
  --> src/main.rs:40:37
   |
40 |     test(3.141_592_653_589_793_f64, 3.141_592_653_589_793_f64);
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using the constant directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

warning: `c2rust_out` (bin "main") generated 7 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 7 warnings (7 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.59s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/arbitrary_precision_integers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:32:15
   |
32 |         len = strlen(s) as i32;
   |               ^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
32 |         len = i32::try_from(strlen(s));
   |               ~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:15
   |
32 |         len = strlen(s) as i32;
   |               ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:45
   |
37 |             build_str_from_raw_ptr(s.offset(len as isize).offset(-20_isize).cast::<u8>())
   |                                             ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main" test) generated 4 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 4 warnings (4 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.70s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/arithmetic_geometric_mean)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:29:21
   |
29 |             a1 = (a.wrapping_add(g)) / 2.0f64;
   |                     ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:30:25
   |
30 |             g1 = sqrt(a.wrapping_mul(g));
   |                         ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to 2 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to 2 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/arithmetic_mean)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (17 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:20:21
   |
20 |             sum += *v.offset(i as isize);
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:20:13
   |
20 |             sum += *v.offset(i as isize);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:30
   |
20 |             sum += *v.offset(i as isize);
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:22:13
   |
22 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:24:9
   |
24 |         sum / f64::from(len)
   |         ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: approximate value of `f64::consts::E` found
  --> src/main.rs:29:42
   |
29 |     let mut v: [f64; 5] = [1_f64, 2_f64, 2.718f64, 3_f64, 3.142f64];
   |                                          ^^^^^^^^
   |
   = help: consider using the constant directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
   = note: `#[warn(clippy::approx_constant)]` on by default

warning: approximate value of `f64::consts::PI` found
  --> src/main.rs:29:59
   |
29 |     let mut v: [f64; 5] = [1_f64, 2_f64, 2.718f64, 3_f64, 3.142f64];
   |                                                           ^^^^^^^^
   |
   = help: consider using the constant directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:38:34
   |
38 |                 print!(", {}", v[i as usize])
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:34
   |
38 |                 print!(", {}", v[i as usize])
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:40:32
   |
40 |                 print!("{}", v[i as usize])
   |                                ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:32
   |
40 |                 print!("{}", v[i as usize])
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:43:13
   |
43 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:47:9
   |
47 |         len;
   |         -^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:22:13
   |
22 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:43:13
   |
43 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:47:9
   |
47 |         len;
   |         ^^^^

warning: `c2rust_out` (bin "main") generated 17 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 17 warnings (17 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.91s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/array_concatenation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (24 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:27:42
   |
27 |         memcpy(p.cast::<libc::c_void>(), a_0, an.wrapping_mul(s));
   |                                          ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:30:13
   |
30 |             b_0,
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:29:22
   |
29 |             p.offset(an.wrapping_mul(s) as isize).cast::<libc::c_void>(),
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
29 |             p.offset(isize::try_from(an.wrapping_mul(s))).cast::<libc::c_void>(),
   |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:29:22
   |
29 |             p.offset(an.wrapping_mul(s) as isize).cast::<libc::c_void>(),
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:22
   |
29 |             p.offset(an.wrapping_mul(s) as isize).cast::<libc::c_void>(),
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:54:38
   |
54 |             println!("{}", *c.offset(i as isize));
   |                                      ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:38
   |
54 |             println!("{}", *c.offset(i as isize));
   |                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 10 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 10 warnings (10 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.29s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/array_length)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:14:9
   |
14 |         (b"apples\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:15:9
   |
15 |         (b"oranges\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:17:27
   |
17 |       let mut length: i32 = (::core::mem::size_of::<[*const i8; 2]>() as u64)
   |  ___________________________^
18 | |         .wrapping_div(::core::mem::size_of::<*const i8>() as u64) as i32;
   | |________________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
17 ~     let mut length: i32 = i32::try_from((::core::mem::size_of::<[*const i8; 2]>() as u64)
18 ~         .wrapping_div(::core::mem::size_of::<*const i8>() as u64));
   |

warning: `c2rust_out` (bin "main" test) generated 4 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 4 warnings (4 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.58s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/assertions)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:8:12
  |
8 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib test) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib) generated 2 warnings (2 duplicates)
       Fixed src/main.rs (11 fixes)
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
  --> src/main.rs:10:12
   |
10 | #![feature(label_break_value)]
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(stable_features)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:17
   |
27 |                 (b"a == 42\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:17
   |
28 |                 (b"main.c\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:21
   |
36 |                     (b"a == 42\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:21
   |
37 |                     (b"main.c\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 6 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 6 warnings (6 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.54s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/atomic_updates)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/attractive_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (38 fixes)
warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:18:8
   |
18 |     if n % 2_i32 == 0_i32 {
   |        ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:21:8
   |
21 |     if n % 3_i32 == 0_i32 {
   |        ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:24:11
   |
24 |     while d * d <= n {
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:25:12
   |
25 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:25:12
   |
25 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:29:12
   |
29 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:29:12
   |
29 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:48:12
   |
48 |         if n % f == 0_i32 {
   |            ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:48:12
   |
48 |         if n % f == 0_i32 {
   |            ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:50:13
   |
50 |             count;
   |             ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:51:32
   |
51 |             n = n.wrapping_div(f);
   |                                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:77:16
   |
77 |             if count % 20_i32 == 0_i32 {
   |                ^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:82:9
   |
82 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:50:13
   |
50 |             count;
   |             ^^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:82:9
   |
82 |         i;
   |         ^^

warning: `c2rust_out` (bin "main" test) generated 16 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 16 warnings (16 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.75s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/average_loop_length)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:23:5
   |
23 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:17:25
   |
17 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/average_mode)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/avl_tree)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/babbage_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/balanced_brackets)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (26 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:96:5
   |
96 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:38:27
   |
38 |             if i32::from(*s.offset(l as isize)) == ']' as i32 {
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:31
   |
42 |                 if i32::from(*s.offset(l as isize)) != '[' as i32 {
   |                               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:36
   |
38 |             if i32::from(*s.offset(l as isize)) == ']' as i32 {
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:52
   |
38 |             if i32::from(*s.offset(l as isize)) == ']' as i32 {
   |                                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:40:17
   |
40 |                 c;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:40
   |
42 |                 if i32::from(*s.offset(l as isize)) != '[' as i32 {
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:56
   |
42 |                 if i32::from(*s.offset(l as isize)) != '[' as i32 {
   |                                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:69:28
   |
69 |             t = i32::from(*s.offset(x as isize));
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:38
   |
70 |             *s.offset(x as isize) = *s.offset(i as isize);
   |                                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:14
   |
70 |             *s.offset(x as isize) = *s.offset(i as isize);
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:71:14
   |
71 |             *s.offset(i as isize) = t as i8;
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:68:17
   |
68 |             x = rand() % h;
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:68:17
   |
68 |             x = rand() % h;
   |                 ^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:37
   |
69 |             t = i32::from(*s.offset(x as isize));
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:47
   |
70 |             *s.offset(x as isize) = *s.offset(i as isize);
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:23
   |
70 |             *s.offset(x as isize) = *s.offset(i as isize);
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `i8` may truncate the value
  --> src/main.rs:71:37
   |
71 |             *s.offset(i as isize) = t as i8;
   |                                     ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
71 |             *s.offset(i as isize) = i8::try_from(t);
   |                                     ~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:37
   |
71 |             *s.offset(i as isize) = t as i8;
   |                                     ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:23
   |
71 |             *s.offset(i as isize) = t as i8;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:17
   |
83 |                 s.offset(n as isize).cast::<libc::c_void>(),
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:89:10
   |
89 |         *s.offset((n.wrapping_mul(2i32)) as isize) = 0;
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:46
   |
81 |             memset(s.cast::<libc::c_void>(), '[' as i32, n as u64);
   |                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:81:58
   |
81 |             memset(s.cast::<libc::c_void>(), '[' as i32, n as u64);
   |                                                          ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:58
   |
81 |             memset(s.cast::<libc::c_void>(), '[' as i32, n as u64);
   |                                                          ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:26
   |
83 |                 s.offset(n as isize).cast::<libc::c_void>(),
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:17
   |
84 |                 ']' as i32,
   |                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:85:17
   |
85 |                 n as u64,
   |                 ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:17
   |
85 |                 n as u64,
   |                 ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:19
   |
89 |         *s.offset((n.wrapping_mul(2i32)) as isize) = 0;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:32
   |
98 |         let mut o: *const i8 = (b"False\0" as *const u8).cast::<i8>();
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:101:17
    |
101 |             o = (b"True\0" as *const u8).cast::<i8>();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:106:36
    |
106 |             build_str_from_raw_ptr(o as *mut u8)
    |                                    ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:40:17
   |
40 |                 c;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 35 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 35 warnings (35 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.77s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/bankers_algorithm)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (44 fixes)
warning: equal expressions as operands to `!=`
  --> src/main.rs:27:26
   |
27 |     let mut safe: bool = 0 != 0;
   |                          ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
   = note: `#[warn(clippy::eq_op)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:15
   |
31 |         scanf((b"%d\0" as *const u8).cast::<i8>(), &mut r as *mut i32);
   |               ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:52
   |
31 |         scanf((b"%d\0" as *const u8).cast::<i8>(), &mut r as *mut i32);
   |                                                    ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:15
   |
36 |         scanf((b"%d\0" as *const u8).cast::<i8>(), &mut p as *mut i32);
   |               ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:52
   |
36 |         scanf((b"%d\0" as *const u8).cast::<i8>(), &mut p as *mut i32);
   |                                                    ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:40:17
   |
40 |         running[i as usize] = 1_i32;
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:17
   |
40 |         running[i as usize] = 1_i32;
   |                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:42:9
   |
42 |         count;
   |         ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:44:9
   |
44 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:17
   |
52 |                 (b"%d\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:17
   |
53 |                 &mut *max_res.as_mut_ptr().offset(i as isize) as *mut i32,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:51
   |
53 |                 &mut *max_res.as_mut_ptr().offset(i as isize) as *mut i32,
   |                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:21
   |
67 |                     (b"%d\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:21
   |
68 | /                     &mut *(*curr.as_mut_ptr().offset(i as isize))
69 | |                         .as_mut_ptr()
70 | |                         .offset(j as isize) as *mut i32,
   | |_______________________________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:54
   |
68 |                     &mut *(*curr.as_mut_ptr().offset(i as isize))
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:33
   |
70 |                         .offset(j as isize) as *mut i32,
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:73:17
   |
73 |                 j;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:76:13
   |
76 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:21
   |
87 |                     (b"%d\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:21
   |
88 | /                     &mut *(*max_claim.as_mut_ptr().offset(i as isize))
89 | |                         .as_mut_ptr()
90 | |                         .offset(j as isize) as *mut i32,
   | |_______________________________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:59
   |
88 |                     &mut *(*max_claim.as_mut_ptr().offset(i as isize))
   |                                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:33
   |
90 |                         .offset(j as isize) as *mut i32,
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:93:17
   |
93 |                 j;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:96:13
   |
96 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:102:31
    |
102 |         print!("{} ", max_res[i as usize]);
    |                               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:31
    |
102 |         print!("{} ", max_res[i as usize]);
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:104:9
    |
104 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:111:32
    |
111 |             print!("    {}", curr[i as usize][j as usize]);
    |                                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:32
    |
111 |             print!("    {}", curr[i as usize][j as usize]);
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:111:44
    |
111 |             print!("    {}", curr[i as usize][j as usize]);
    |                                               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:44
    |
111 |             print!("    {}", curr[i as usize][j as usize]);
    |                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:113:13
    |
113 |             j;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:117:9
    |
117 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:124:37
    |
124 |             print!("    {}", max_claim[i as usize][j as usize]);
    |                                        ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:37
    |
124 |             print!("    {}", max_claim[i as usize][j as usize]);
    |                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:124:49
    |
124 |             print!("    {}", max_claim[i as usize][j as usize]);
    |                                                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:49
    |
124 |             print!("    {}", max_claim[i as usize][j as usize]);
    |                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:126:13
    |
126 |             j;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:130:9
    |
130 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:136:13
    |
136 |             alloc[j as usize] += curr[i as usize][j as usize];
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:136:39
    |
136 |             alloc[j as usize] += curr[i as usize][j as usize];
    |                                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:39
    |
136 |             alloc[j as usize] += curr[i as usize][j as usize];
    |                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:136:51
    |
136 |             alloc[j as usize] += curr[i as usize][j as usize];
    |                                                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:51
    |
136 |             alloc[j as usize] += curr[i as usize][j as usize];
    |                                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:136:19
    |
136 |             alloc[j as usize] += curr[i as usize][j as usize];
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:19
    |
136 |             alloc[j as usize] += curr[i as usize][j as usize];
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:138:13
    |
138 |             j;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:141:9
    |
141 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:146:29
    |
146 |         print!("{} ", alloc[i as usize]);
    |                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:146:29
    |
146 |         print!("{} ", alloc[i as usize]);
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:148:9
    |
148 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:152:27
    |
152 |         avl[i as usize] = max_res[i as usize] - alloc[i as usize];
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:152:35
    |
152 |         avl[i as usize] = max_res[i as usize] - alloc[i as usize];
    |                                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:35
    |
152 |         avl[i as usize] = max_res[i as usize] - alloc[i as usize];
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:152:55
    |
152 |         avl[i as usize] = max_res[i as usize] - alloc[i as usize];
    |                                                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:55
    |
152 |         avl[i as usize] = max_res[i as usize] - alloc[i as usize];
    |                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:152:13
    |
152 |         avl[i as usize] = max_res[i as usize] - alloc[i as usize];
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:13
    |
152 |         avl[i as usize] = max_res[i as usize] - alloc[i as usize];
    |             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:154:9
    |
154 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:159:27
    |
159 |         print!("{} ", avl[i as usize]);
    |                           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:159:27
    |
159 |         print!("{} ", avl[i as usize]);
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:161:9
    |
161 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: equal expressions as operands to `!=`
   --> src/main.rs:165:16
    |
165 |         safe = 0_i32 != 0_i32;
    |                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:168:24
    |
168 |             if running[i as usize] != 0_i32 {
    |                        ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:168:24
    |
168 |             if running[i as usize] != 0_i32 {
    |                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:172:24
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:172:34
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:34
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:172:46
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:46
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:172:65
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                                                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:65
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:172:77
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                                                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:77
    |
172 |                     if max_claim[i as usize][j as usize] - curr[i as usize][j as usize]
    |                                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:173:31
    |
173 |                         > avl[j as usize]
    |                               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:173:31
    |
173 |                         > avl[j as usize]
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:179:25
    |
179 |                         j;
    |                         -^
    |                         |
    |                         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:183:59
    |
183 |                     print!("\nProcess{} is executing.\n", i + 1_i32);
    |                                                           ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:184:29
    |
184 |                     running[i as usize] = 0_i32;
    |                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:184:29
    |
184 |                     running[i as usize] = 0_i32;
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:186:21
    |
186 |                     count;
    |                     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:190:25
    |
190 |                         avl[j as usize] += curr[i as usize][j as usize];
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:190:49
    |
190 |                         avl[j as usize] += curr[i as usize][j as usize];
    |                                                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:49
    |
190 |                         avl[j as usize] += curr[i as usize][j as usize];
    |                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:190:61
    |
190 |                         avl[j as usize] += curr[i as usize][j as usize];
    |                                                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:61
    |
190 |                         avl[j as usize] += curr[i as usize][j as usize];
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:190:29
    |
190 |                         avl[j as usize] += curr[i as usize][j as usize];
    |                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:29
    |
190 |                         avl[j as usize] += curr[i as usize][j as usize];
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:192:25
    |
192 |                         j;
    |                         -^
    |                         |
    |                         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:198:13
    |
198 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:211:35
    |
211 |                 print!("{} ", avl[i as usize]);
    |                                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:211:35
    |
211 |                 print!("{} ", avl[i as usize]);
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:213:17
    |
213 |                 i;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:42:9
   |
42 |         count;
   |         ^^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:44:9
   |
44 |         i;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:73:17
   |
73 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:76:13
   |
76 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:93:17
   |
93 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:96:13
   |
96 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:104:9
    |
104 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:113:13
    |
113 |             j;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:117:9
    |
117 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:126:13
    |
126 |             j;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:130:9
    |
130 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:138:13
    |
138 |             j;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:141:9
    |
141 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:148:9
    |
148 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:154:9
    |
154 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:161:9
    |
161 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:179:25
    |
179 |                         j;
    |                         ^^

warning: path statement with no effect
   --> src/main.rs:186:21
    |
186 |                     count;
    |                     ^^^^^^

warning: path statement with no effect
   --> src/main.rs:192:25
    |
192 |                         j;
    |                         ^^

warning: path statement with no effect
   --> src/main.rs:198:13
    |
198 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:213:17
    |
213 |                 i;
    |                 ^^

warning: `c2rust_out` (bin "main") generated 117 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 117 warnings (117 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.79s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/base64_decode_data)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/bell_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:18:5
   |
18 |     (row * (row.wrapping_sub(1i32)) / col.wrapping_add(2)) as u64
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:18:5
   |
18 |     (row * (row.wrapping_sub(1i32)) / col.wrapping_add(2)) as u64
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:18:5
   |
18 |     (row * (row.wrapping_sub(1i32)) / col.wrapping_add(2)) as u64
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:26:10
   |
26 |         *bellTri.offset(index as isize)
   |          ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:26:25
   |
26 |         *bellTri.offset(index as isize)
   |                         ^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
26 |         *bellTri.offset(isize::try_from(index))
   |                         ~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:26:25
   |
26 |         *bellTri.offset(index as isize)
   |                         ^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:25
   |
26 |         *bellTri.offset(index as isize)
   |                         ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:10
   |
35 |         *bellTri.offset(index as isize) = value;
   |          ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:35:25
   |
35 |         *bellTri.offset(index as isize) = value;
   |                         ^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
35 |         *bellTri.offset(isize::try_from(index)) = value;
   |                         ~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:35:25
   |
35 |         *bellTri.offset(index as isize) = value;
   |                         ^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:25
   |
35 |         *bellTri.offset(index as isize) = value;
   |                         ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:43:31
   |
43 |         let mut length: u64 = (n * (n.wrapping_add(1i32)) / 2) as u64;
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:31
   |
43 |         let mut length: u64 = (n * (n.wrapping_add(1i32)) / 2) as u64;
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:43:32
   |
43 |         let mut length: u64 = (n * (n.wrapping_add(1i32)) / 2) as u64;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:58:38
   |
58 |                   let mut value: i32 = getBell(tri, i, j.wrapping_sub(1))
   |  ______________________________________^
59 | |                     + getBell(tri, i.wrapping_sub(1), j.wrapping_sub(1));
   | |________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:62:17
   |
62 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:65:13
   |
65 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:83:13
   |
83 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:16
   |
85 |         printf((b"\nThe first ten rows of Bell's triangle:\n\0" as *const u8).cast::<i8>());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:93:17
   |
93 |                 j;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:97:13
   |
97 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:62:17
   |
62 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:65:13
   |
65 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:83:13
   |
83 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:93:17
   |
93 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:97:13
   |
97 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 27 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 27 warnings (27 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.18s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/benfords_law)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/bernoulli_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0425]: cannot find function `main_0` in this scope
  --> src/main.rs:30:26
   |
30 |     ::std::process::exit(main_0() as i32);
   |                          ^^^^^^ not found in this scope

For more information about this error, try `rustc --explain E0425`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/best_shuffle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:8:12
  |
8 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib test) generated 2 warnings (2 duplicates)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/binary_digits)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: casting `u64` to `u32` may truncate the value
  --> src/main.rs:33:43
   |
33 |             let mut binstr: *mut i8 = bin(i as u32);
   |                                           ^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
33 |             let mut binstr: *mut i8 = bin(u32::try_from(i));
   |                                           ~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:43
   |
33 |             let mut binstr: *mut i8 = bin(i as u32);
   |                                           ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:37:13
   |
37 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `f64` to `u64` may truncate the value
  --> src/main.rs:47:29
   |
47 |           let mut bits: u64 = (if x == 0u32 {
   |  _____________________________^
48 | |             1_f64
49 | |         } else {
50 | |             log10(f64::from(x)) / log10(2_f64) + 1_f64
51 | |         }) as u64;
   | |_________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u64` may lose the sign of the value
  --> src/main.rs:47:29
   |
47 |           let mut bits: u64 = (if x == 0u32 {
   |  _____________________________^
48 | |             1_f64
49 | |         } else {
50 | |             log10(f64::from(x)) / log10(2_f64) + 1_f64
51 | |         }) as u64;
   | |_________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:29
   |
47 |           let mut bits: u64 = (if x == 0u32 {
   |  _____________________________^
48 | |             1_f64
49 | |         } else {
50 | |             log10(f64::from(x)) / log10(2_f64) + 1_f64
51 | |         }) as u64;
   | |_________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:50:13
   |
50 |             log10(f64::from(x)) / log10(2_f64) + 1_f64
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `i32` to `i8` may truncate the value
  --> src/main.rs:59:17
   |
59 |                 (if x & 1 != 0 { '1' as i32 } else { '0' as i32 }) as i8;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
59 |                 i8::try_from((if x & 1 != 0 { '1' as i32 } else { '0' as i32 }));
   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:17
   |
59 |                 (if x & 1 != 0 { '1' as i32 } else { '0' as i32 }) as i8;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:34
   |
59 |                 (if x & 1 != 0 { '1' as i32 } else { '0' as i32 }) as i8;
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:54
   |
59 |                 (if x & 1 != 0 { '1' as i32 } else { '0' as i32 }) as i8;
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:58:25
   |
58 |             *ret.offset(bits.wrapping_sub(i).wrapping_sub(1) as isize) =
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
58 |             *ret.offset(isize::try_from(bits.wrapping_sub(i).wrapping_sub(1))) =
   |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:58:25
   |
58 |             *ret.offset(bits.wrapping_sub(i).wrapping_sub(1) as isize) =
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:25
   |
58 |             *ret.offset(bits.wrapping_sub(i).wrapping_sub(1) as isize) =
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:62:13
   |
62 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:38
   |
64 |         *ret.offset(bits as isize) = '\0' as i8;
   |                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:64:21
   |
64 |         *ret.offset(bits as isize) = '\0' as i8;
   |                     ^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
64 |         *ret.offset(isize::try_from(bits)) = '\0' as i8;
   |                     ~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:64:21
   |
64 |         *ret.offset(bits as isize) = '\0' as i8;
   |                     ^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:21
   |
64 |         *ret.offset(bits as isize) = '\0' as i8;
   |                     ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:37:13
   |
37 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:62:13
   |
62 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 22 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 22 warnings (22 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.65s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/binary_search)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (11 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:20:17
   |
20 |             if *a.offset(k as isize) == x {
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:22:24
   |
22 |             } else if *a.offset(k as isize) < x {
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:19:30
   |
19 |             let mut k: i32 = i + (j - i) / 2;
   |                              ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: `if` chain can be rewritten with `match`
  --> src/main.rs:20:13
   |
20 | /             if *a.offset(k as isize) == x {
21 | |                 return k;
22 | |             } else if *a.offset(k as isize) < x {
23 | |                 i = k.wrapping_add(1);
24 | |             } else {
25 | |                 j = k.wrapping_sub(1);
26 | |             }
   | |_____________^
   |
   = help: consider rewriting the `if` chain to use `cmp` and `match`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain
   = note: `#[warn(clippy::comparison_chain)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:26
   |
20 |             if *a.offset(k as isize) == x {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:33
   |
22 |             } else if *a.offset(k as isize) < x {
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:40:13
   |
40 |         if *a.offset(k as isize) == x {
   |             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:20
   |
42 |         } else if *a.offset(k as isize) < x {
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:39:26
   |
39 |         let mut k: i32 = i + (j - i) / 2;
   |                          ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `if` chain can be rewritten with `match`
  --> src/main.rs:40:9
   |
40 | /         if *a.offset(k as isize) == x {
41 | |             k
42 | |         } else if *a.offset(k as isize) < x {
43 | |             return bsearch_r(a, x, k.wrapping_add(1), j);
44 | |         } else {
45 | |             return bsearch_r(a, x, i, k.wrapping_sub(1));
46 | |         }
   | |_________^
   |
   = help: consider rewriting the `if` chain to use `cmp` and `match`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:22
   |
40 |         if *a.offset(k as isize) == x {
   |                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:29
   |
42 |         } else if *a.offset(k as isize) < x {
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:52:22
   |
52 |       let mut n: i32 = (::core::mem::size_of::<[i32; 10]>() as u64)
   |  ______________________^
53 | |         .wrapping_div(::core::mem::size_of::<i32>() as u64) as i32;
   | |__________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
52 ~     let mut n: i32 = i32::try_from((::core::mem::size_of::<[i32; 10]>() as u64)
53 ~         .wrapping_div(::core::mem::size_of::<i32>() as u64));
   |

warning: `c2rust_out` (bin "main") generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.57s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/bioinformatics_base_count)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (51 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:39:1
   |
39 | / pub struct _IO_FILE {
40 | |     pub _flags: i32,
41 | |     pub _IO_read_ptr: *mut i8,
42 | |     pub _IO_read_end: *mut i8,
...  |
68 | |     pub _unused2: [i8; 20],
69 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
39 + #[non_exhaustive]
40 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:75:1
   |
75 | / pub struct genome {
76 | |     pub strand: *mut i8,
77 | |     pub length: i32,
78 | |     pub next: *mut genome,
79 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
75 + #[non_exhaustive]
76 | pub struct genome {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:42
   |
81 | pub static mut genomeData: *mut genome = 0 as *const genome as *mut genome;
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:42
   |
81 | pub static mut genomeData: *mut genome = 0 as *const genome as *mut genome;
   |                                          ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:98:9
   |
98 |         len;
   |         -^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:114:30
    |
114 |             match i32::from(*str.offset(i as isize)) {
    |                              ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `u64` to `i32` may truncate the value
   --> src/main.rs:107:28
    |
107 |         let mut len: i32 = strlen(str as *const i8) as i32;
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
107 |         let mut len: i32 = i32::try_from(strlen(str as *const i8));
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:28
    |
107 |         let mut len: i32 = strlen(str as *const i8) as i32;
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:35
    |
107 |         let mut len: i32 = strlen(str as *const i8) as i32;
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:41
    |
114 |             match i32::from(*str.offset(i as isize)) {
    |                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:117:21
    |
117 |                     Adenine;
    |                     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:121:21
    |
121 |                     Thymine;
    |                     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:125:21
    |
125 |                     Cytosine;
    |                     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:129:21
    |
129 |                     Guanine;
    |                     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:134:13
    |
134 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:139:24
    |
139 |                 malloc((len as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
    |                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:139:24
    |
139 |                 malloc((len as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
    |                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:140:42
    |
140 |             strcpy((*genomeData).strand, str as *const i8);
    |                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:150:24
    |
150 |                 malloc((len as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
    |                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:150:24
    |
150 |                 malloc((len as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
    |                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:151:41
    |
151 |             strcpy((*newGenome).strand, str as *const i8);
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:170:17
    |
170 |                 (width + 1).unsigned_abs() as usize,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:170:17
    |
170 |                 (width + 1).unsigned_abs() as usize,
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:175:13
    |
175 |             len += (*genomeIterator).length;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:181:13
    |
181 |             'A' as i32,
    |             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:183:13
    |
183 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:183:13
    |
183 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:188:13
    |
188 |             'T' as i32,
    |             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:13
    |
190 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:190:13
    |
190 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:195:13
    |
195 |             'C' as i32,
    |             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:197:13
    |
197 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:197:13
    |
197 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:202:13
    |
202 |             'G' as i32,
    |             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:204:13
    |
204 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:204:13
    |
204 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:210:13
    |
210 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:210:13
    |
210 |             (width + 1).unsigned_abs() as usize,
    |             ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:211:13
    |
211 |             Adenine + Thymine + Cytosine + Guanine
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:230:62
    |
230 |         let mut fp: *mut FILE = fopen(*argv.offset(1_isize), (b"r\0" as *const u8).cast::<i8>());
    |                                                              ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:231:26
    |
231 |         while fscanf(fp, (b"%s\0" as *const u8).cast::<i8>(), str.as_mut_ptr()) != -1_i32 {
    |                          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:240:1
    |
240 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:244:13
    |
244 | /             (::std::ffi::CString::new(arg))
245 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:244:13
    |
244 | /             (::std::ffi::CString::new(arg))
245 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:250:33
    |
250 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
250 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:250:33
    |
250 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:250:33
    |
250 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:250:33
    |
250 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:98:9
   |
98 |         len;
   |         ^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:117:21
    |
117 |                     Adenine;
    |                     ^^^^^^^^

warning: path statement with no effect
   --> src/main.rs:121:21
    |
121 |                     Thymine;
    |                     ^^^^^^^^

warning: path statement with no effect
   --> src/main.rs:125:21
    |
125 |                     Cytosine;
    |                     ^^^^^^^^^

warning: path statement with no effect
   --> src/main.rs:129:21
    |
129 |                     Guanine;
    |                     ^^^^^^^^

warning: path statement with no effect
   --> src/main.rs:134:13
    |
134 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 54 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 53 warnings (53 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.04s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/bitcoin_address_validation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (41 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:38
   |
30 | pub static mut coin_err: *const i8 = 0 as *const i8;
   |                                      ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:16
   |
42 |         while *s.offset(i as isize) != 0 {
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:43:41
   |
43 |             p = strchr(tmpl, i32::from(*s.offset(i as isize)));
   |                                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:56:42
   |
56 |                 c += 58_i32 * i32::from(*out.offset(j as isize));
   |                                          ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:57:18
   |
57 |                 *out.offset(j as isize) = (c % 256i32) as u8;
   |                  ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:38
   |
35 |         static mut tmpl: *const i8 = (b"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\0" as *const u8).cast::<i8>();
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:25
   |
42 |         while *s.offset(i as isize) != 0 {
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:50
   |
43 |             p = strchr(tmpl, i32::from(*s.offset(i as isize)));
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:28
   |
45 |                 coin_err = (b"bad char\0" as *const u8).cast::<i8>();
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `isize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:48:17
   |
48 |             c = p.offset_from(tmpl) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
48 |             c = i32::try_from(p.offset_from(tmpl));
   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:17
   |
48 |             c = p.offset_from(tmpl) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:56:17
   |
56 |                 c += 58_i32 * i32::from(*out.offset(j as isize));
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:53
   |
56 |                 c += 58_i32 * i32::from(*out.offset(j as isize));
   |                                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:57:43
   |
57 |                 *out.offset(j as isize) = (c % 256i32) as u8;
   |                                           ^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
57 |                 *out.offset(j as isize) = u8::try_from(c % 256i32);
   |                                           ~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:57:43
   |
57 |                 *out.offset(j as isize) = (c % 256i32) as u8;
   |                                           ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:43
   |
57 |                 *out.offset(j as isize) = (c % 256i32) as u8;
   |                                           ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:57:43
   |
57 |                 *out.offset(j as isize) = (c % 256i32) as u8;
   |                                           ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:29
   |
57 |                 *out.offset(j as isize) = (c % 256i32) as u8;
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:28
   |
61 |                 coin_err = (b"address too long\0" as *const u8).cast::<i8>();
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:65:13
   |
65 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:20
   |
78 |         coin_err = (b"\0" as *const u8).cast::<i8>();
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:13
   |
88 |             dec.as_mut_ptr().offset(21_isize) as *const libc::c_void,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:13
   |
89 |             d2.as_mut_ptr() as *const libc::c_void,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:24
   |
93 |             coin_err = (b"bad digest\0" as *const u8).cast::<i8>();
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:9
    |
102 |         (b"1Q1pE5vPGEEMqRcVRMbtBK842Y6Pzo6nK9\0" as *const u8).cast::<i8>(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:9
    |
103 |         (b"1AGNa15ZQXAZUgFiqJ2i7Z2DPU2J6hW62i\0" as *const u8).cast::<i8>(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:9
    |
104 |         (b"1Q1pE5vPGEEMqRcVRMbtBK842Y6Pzo6nJ9\0" as *const u8).cast::<i8>(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:9
    |
105 |         (b"1AGNa15ZQXAZUgFiqJ2i7Z2DPU2J6hW62I\0" as *const u8).cast::<i8>(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:112:19
    |
112 |         while !(s[i as usize]).is_null() {
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:19
    |
112 |         while !(s[i as usize]).is_null() {
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:113:43
    |
113 |             let mut status: i32 = valid(s[i as usize]);
    |                                           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:43
    |
113 |             let mut status: i32 = valid(s[i as usize]);
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:44
    |
117 |                     build_str_from_raw_ptr(s[i as usize] as *mut u8)
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:117:46
    |
117 |                     build_str_from_raw_ptr(s[i as usize] as *mut u8)
    |                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:46
    |
117 |                     build_str_from_raw_ptr(s[i as usize] as *mut u8)
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:44
    |
122 |                     build_str_from_raw_ptr(s[i as usize] as *mut u8),
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:122:46
    |
122 |                     build_str_from_raw_ptr(s[i as usize] as *mut u8),
    |                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:46
    |
122 |                     build_str_from_raw_ptr(s[i as usize] as *mut u8),
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:44
    |
123 |                     build_str_from_raw_ptr(coin_err as *mut u8)
    |                                            ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:127:13
    |
127 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:65:13
   |
65 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:127:13
    |
127 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 43 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 43 warnings (43 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.14s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/bitwise_io)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/box_the_compass)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (13 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:1
   |
36 | (b"North                 North by east         North-northeast       Northeast by north    Northeast             Northeast by east     East-northeast        East by north         East                  East by south         East-southeast        Southeast by east     Southeast             Southeast by south    South-southeast       South by east         South                 South by west         South-southwest       Southwest by south    Southwest             Southwest by west     West-southwest        West by south         West                  West by north         West-northwest        Northwest by west     Northwest             Northwest by north    North-northwest       North by west         North                 \0" as * const u8).ca...
   |
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:39:17
   |
39 |             j = (0.5f64 + degrees[i as usize] * 32_f64 / 360_f64) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:17
   |
39 |             j = (0.5f64 + degrees[i as usize] * 32_f64 / 360_f64) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:39:17
   |
39 |             j = (0.5f64 + degrees[i as usize] * 32_f64 / 360_f64) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:39:35
   |
39 |             j = (0.5f64 + degrees[i as usize] * 32_f64 / 360_f64) as i32;
   |                                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:35
   |
39 |             j = (0.5f64 + degrees[i as usize] * 32_f64 / 360_f64) as i32;
   |                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:17
   |
42 |                 j % 32_i32 + 1_i32,
   |                 ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:42:17
   |
42 |                 j % 32_i32 + 1_i32,
   |                 ^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:40
   |
43 |                 build_str_from_raw_ptr(names.offset((j % 32 * 22i32) as isize) as *mut u8),
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:53
   |
43 |                 build_str_from_raw_ptr(names.offset((j % 32 * 22i32) as isize) as *mut u8),
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:43:53
   |
43 |                 build_str_from_raw_ptr(names.offset((j % 32 * 22i32) as isize) as *mut u8),
   |                                                     ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:43:54
   |
43 |                 build_str_from_raw_ptr(names.offset((j % 32 * 22i32) as isize) as *mut u8),
   |                                                      ^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:44:25
   |
44 |                 degrees[i as usize]
   |                         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:25
   |
44 |                 degrees[i as usize]
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:47:13
   |
47 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:47:13
   |
47 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 17 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 17 warnings (17 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.76s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/brace_expansion)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:23:5
   |
23 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: `C2RustUnnamed` doesn't implement `std::fmt::Debug`
  --> src/main.rs:80:5
   |
77 | #[derive(Debug)]
   |          ----- in this derive macro expansion
...
80 |     pub data: C2RustUnnamed,
   |     ^^^^^^^^^^^^^^^^^^^^^^^ `C2RustUnnamed` cannot be formatted using `{:?}`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `C2RustUnnamed`
   = note: add `#[derive(Debug)]` to `C2RustUnnamed` or manually `impl std::fmt::Debug for C2RustUnnamed`
   = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `C2RustUnnamed` with `#[derive(Debug)]`
   |
86 + #[derive(Debug)]
87 | pub union C2RustUnnamed {
   |

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/caesar_cipher)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (25 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:44:33
   |
44 |         let mut l: i32 = strlen(str) as i32;
   |                                 ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:52:64
   |
52 |             if i32::from(*(*__ctype_b_loc()).offset(i32::from(*str.offset(i as isize)) as isize))
   |                                                                ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:55:68
   |
55 |                 if i32::from(*(*__ctype_b_loc()).offset(i32::from(*str.offset(i as isize)) as isize))
   |                                                                    ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:60:46
   |
60 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                                              ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:59:22
   |
59 |                     *str.offset(i as isize) = *(alpha[1_usize]).offset(
   |                      ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:65:46
   |
65 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                                              ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:64:22
   |
64 |                     *str.offset(i as isize) = *(alpha[0_usize]).offset(
   |                      ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:44:26
   |
44 |         let mut l: i32 = strlen(str) as i32;
   |                          ^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
44 |         let mut l: i32 = i32::try_from(strlen(str));
   |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:26
   |
44 |         let mut l: i32 = strlen(str) as i32;
   |                          ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:13
   |
46 |             (b"abcdefghijklmnopqrstuvwxyz\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:13
   |
47 |             (b"ABCDEFGHIJKLMNOPQRSTUVWXYZ\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:53
   |
52 |             if i32::from(*(*__ctype_b_loc()).offset(i32::from(*str.offset(i as isize)) as isize))
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:75
   |
52 |             if i32::from(*(*__ctype_b_loc()).offset(i32::from(*str.offset(i as isize)) as isize))
   |                                                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `i32` may wrap around the value
  --> src/main.rs:53:19
   |
53 |                 & _ISalpha as i32 != 0_i32
   |                   ^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:19
   |
53 |                 & _ISalpha as i32 != 0_i32
   |                   ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:57
   |
55 |                 if i32::from(*(*__ctype_b_loc()).offset(i32::from(*str.offset(i as isize)) as isize))
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:79
   |
55 |                 if i32::from(*(*__ctype_b_loc()).offset(i32::from(*str.offset(i as isize)) as isize))
   |                                                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `i32` may wrap around the value
  --> src/main.rs:56:23
   |
56 |                     & _ISupper as i32
   |                       ^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:23
   |
56 |                     & _ISupper as i32
   |                       ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:25
   |
60 | /                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
61 | |                             as isize,
   | |____________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:60:25
   |
60 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:60:26
   |
60 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:57
   |
60 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:73
   |
60 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:33
   |
59 |                     *str.offset(i as isize) = *(alpha[1_usize]).offset(
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:25
   |
65 | /                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
66 | |                             as isize,
   | |____________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:65:25
   |
65 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:65:26
   |
65 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:57
   |
65 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:73
   |
65 |                         ((tolower(i32::from(*str.offset(i as isize))) - 'a' as i32 + c) % 26i32)
   |                                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:33
   |
64 |                     *str.offset(i as isize) = *(alpha[0_usize]).offset(
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:71:13
   |
71 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:71:13
   |
71 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 34 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 34 warnings (34 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.83s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/calculate_pi)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0425]: cannot find function `mpf_set_default_prec` in this scope
  --> src/main.rs:15:5
   |
15 |     mpf_set_default_prec(300000);
   |     ^^^^^^^^^^^^^^^^^^^^ not found in this scope

For more information about this error, try `rustc --explain E0425`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/calculating_the_value_of_e)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (17 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:19:15
   |
19 | ...s ((b"The double precision in C give about 15 significant digits.\nValues below are presented with 16 digits after the decimal point.\n\0" as * const u8).ca...
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:23:13
   |
23 |         e = 1.0f64 + 1.0f64 / f64::from(n);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:26:13
   |
26 |             e *= e;
   |             ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: statement with no effect
  --> src/main.rs:28:13
   |
28 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:36:31
   |
36 |             a[i_0 as usize] = a[(i_0.wrapping_sub(1i32)) as usize] / f64::from(i_0);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:36:33
   |
36 |             a[i_0 as usize] = a[(i_0.wrapping_sub(1i32)) as usize] / f64::from(i_0);
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:33
   |
36 |             a[i_0 as usize] = a[(i_0.wrapping_sub(1i32)) as usize] / f64::from(i_0);
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:36:15
   |
36 |             a[i_0 as usize] = a[(i_0.wrapping_sub(1i32)) as usize] / f64::from(i_0);
   |               ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:15
   |
36 |             a[i_0 as usize] = a[(i_0.wrapping_sub(1i32)) as usize] / f64::from(i_0);
   |               ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:38:13
   |
38 |             i_0;
   |             -^^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
  --> src/main.rs:43:13
   |
43 |             e += a[i_1 as usize];
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:43:20
   |
43 |             e += a[i_1 as usize];
   |                    ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:20
   |
43 |             e += a[i_1 as usize];
   |                    ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:45:13
   |
45 |             i_1;
   |             -^^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:52:1
   |
52 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:56:13
   |
56 | /             (::std::ffi::CString::new(arg))
57 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:56:13
   |
56 | /             (::std::ffi::CString::new(arg))
57 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:62:33
   |
62 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
62 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:62:33
   |
62 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:33
   |
62 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:62:33
   |
62 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
  --> src/main.rs:28:13
   |
28 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:38:13
   |
38 |             i_0;
   |             ^^^^

warning: path statement with no effect
  --> src/main.rs:45:13
   |
45 |             i_1;
   |             ^^^^

warning: `c2rust_out` (bin "main" test) generated 24 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 23 warnings (23 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/calendar)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/call_a_function_in_a_shared_library)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:25:1
   |
25 | / pub struct _IO_FILE {
26 | |     pub _flags: i32,
27 | |     pub _IO_read_ptr: *mut i8,
28 | |     pub _IO_read_end: *mut i8,
...  |
54 | |     pub _unused2: [i8; 20],
55 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
25 + #[non_exhaustive]
26 | pub struct _IO_FILE {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:66:13
   |
66 |             in_0,
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:13
   |
65 |             (b"internal openimage opens %s...\n\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:25
   |
81 |         imglib = dlopen((b"./fakeimglib.so\0" as *const u8).cast::<i8>(), 0x1);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:33
   |
83 |             let fresh1 = &mut (*(&mut extopenimage as *mut Option<unsafe extern "C" fn(*const i8) -> i32>).cast::<*mut libc::c_void>());
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:37
   |
84 |             *fresh1 = dlsym(imglib, (b"openimage\0" as *const u8).cast::<i8>());
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:48
   |
87 |                     imghandle = extopenimage_m((b"fake.img\0" as *const u8).cast::<i8>())
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:37
   |
92 |             imghandle = myopenimage((b"fake.img\0" as *const u8).cast::<i8>());
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main" test) generated 9 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 9 warnings (9 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.72s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/call_an_object_method)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (16 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:29:1
   |
29 | / pub struct functionPair {
30 | |     pub x: i32,
31 | | // SAFETY: machine generated unsafe code
32 | |     pub funcPtr: Option<unsafe extern "C" fn(i32) -> i32>,
33 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
29 + #[non_exhaustive]
30 | pub struct functionPair {
   |

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:39:9
   |
39 |         num * factorial(num.wrapping_sub(1))
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:56:20
   |
56 |             return str_to_print.chars().count() as i32;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
56 |             return i32::try_from(str_to_print.chars().count());
   |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:56:20
   |
56 |             return str_to_print.chars().count() as i32;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:20
   |
56 |             return str_to_print.chars().count() as i32;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:35
   |
63 |                     funcPtr: Some(factorial as unsafe extern "C" fn(i32) -> i32),
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:75:1
   |
75 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:79:13
   |
79 | /             (::std::ffi::CString::new(arg))
80 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:79:13
   |
79 | /             (::std::ffi::CString::new(arg))
80 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:85:33
   |
85 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
85 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:85:33
   |
85 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:33
   |
85 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:85:33
   |
85 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 12 warnings (2 duplicates)
warning: `c2rust_out` (bin "main" test) generated 13 warnings (11 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.82s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/canonicalize_cidr)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (46 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:36:1
   |
36 | / pub struct _IO_FILE {
37 | |     pub _flags: i32,
38 | |     pub _IO_read_ptr: *mut i8,
39 | |     pub _IO_read_end: *mut i8,
...  |
65 | |     pub _unused2: [i8; 20],
66 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
36 + #[non_exhaustive]
37 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:72:1
   |
72 | / pub struct cidr_tag {
73 | |     pub address: u32,
74 | |     pub mask_length: u32,
75 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
72 + #[non_exhaustive]
73 | pub struct cidr_tag {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:87:13
   |
87 |             str,
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:109:11
    |
109 |         (*cidr).address = address;
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:110:11
    |
110 |         (*cidr).mask_length = m as u32;
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:13
   |
88 |             (b"%d.%d.%d.%d/%d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:13
   |
89 |             &mut a as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:13
   |
90 |             &mut b as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:13
   |
91 |             &mut c as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:13
   |
92 |             &mut d as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:13
   |
93 |             &mut m as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: equal expressions as operands to `!=`
  --> src/main.rs:96:20
   |
96 |             return 0_i32 != 0_i32;
   |                    ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
   = note: `#[warn(clippy::eq_op)]` on by default

warning: equal expressions as operands to `!=`
   --> src/main.rs:104:20
    |
104 |             return 0_i32 != 0_i32;
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/main.rs:106:29
    |
106 |         let mut mask: u32 = !((1i32 << (32 - m)) - 1) as u32;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:106:29
    |
106 |         let mut mask: u32 = !((1i32 << (32 - m)) - 1) as u32;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:106:30
    |
106 |         let mut mask: u32 = !((1i32 << (32 - m)) - 1) as u32;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/main.rs:107:32
    |
107 |         let mut address: u32 = ((a << 24i32) + (b << 16) + (c << 8) + d) as u32;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:32
    |
107 |         let mut address: u32 = ((a << 24i32) + (b << 16) + (c << 8) + d) as u32;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:107:32
    |
107 |         let mut address: u32 = ((a << 24i32) + (b << 16) + (c << 8) + d) as u32;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/main.rs:110:31
    |
110 |         (*cidr).mask_length = m as u32;
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:31
    |
110 |         (*cidr).mask_length = m as u32;
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:119:34
    |
119 |         let mut address: u32 = (*cidr).address;
    |                                  ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:128:13
    |
128 |             str,
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:135:15
    |
135 |             (*cidr).mask_length,
    |               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:13
    |
130 |             (b"%u.%u.%u.%u/%u\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:144:13
    |
144 |             (b"87.70.141.1/22\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:145:13
    |
145 |             (b"36.18.154.103/12\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:146:13
    |
146 |             (b"62.62.197.11/29\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:147:13
    |
147 |             (b"67.137.119.181/4\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:148:13
    |
148 |             (b"161.214.74.21/24\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:149:13
    |
149 |             (b"184.232.176.184/18\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:152:15
    |
152 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:15
    |
152 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:160:33
    |
160 |             if cidr_parse(tests[i as usize], &mut cidr) {
    |                                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:33
    |
160 |             if cidr_parse(tests[i as usize], &mut cidr) {
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: the function `cidr_format` doesn't need a mutable reference
   --> src/main.rs:163:21
    |
163 |                     &mut cidr,
    |                     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed
    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:169:44
    |
169 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8),
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:169:50
    |
169 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8),
    |                                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:169:50
    |
169 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8),
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:175:21
    |
175 |                     (b"%s: invalid CIDR\n\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:176:27
    |
176 |                     tests[i as usize],
    |                           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:27
    |
176 |                     tests[i as usize],
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:180:13
    |
180 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: used `expect()` on a `Result` value
   --> src/main.rs:190:13
    |
190 | /             (::std::ffi::CString::new(arg))
191 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:196:33
    |
196 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
196 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:196:33
    |
196 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:196:33
    |
196 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:196:33
    |
196 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
   --> src/main.rs:180:13
    |
180 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:186:1
    |
186 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:190:13
    |
190 | /             (::std::ffi::CString::new(arg))
191 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main") generated 50 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 51 warnings (50 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.04s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/carmichael_3_strong_pseudoprimes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/cartesian_product_of_two_or_more_lists)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/casting_out_nines)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: statement with no effect
  --> src/main.rs:25:13
   |
25 |             c1;
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:16
   |
26 |             if k % (base.wrapping_sub(1)) == k * k % (base.wrapping_sub(1)) {
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:26:16
   |
26 |             if k % (base.wrapping_sub(1)) == k * k % (base.wrapping_sub(1)) {
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:46
   |
26 |             if k % (base.wrapping_sub(1)) == k * k % (base.wrapping_sub(1)) {
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:26:46
   |
26 |             if k % (base.wrapping_sub(1)) == k * k % (base.wrapping_sub(1)) {
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:28:17
   |
28 |                 c2;
   |                 ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:32:13
   |
32 |             k;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
  --> src/main.rs:39:9
   |
39 |         100.0f64 - 100.0f64 * f64::from(c2) / f64::from(c1)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: path statement with no effect
  --> src/main.rs:25:13
   |
25 |             c1;
   |             ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:28:17
   |
28 |                 c2;
   |                 ^^^

warning: path statement with no effect
  --> src/main.rs:32:13
   |
32 |             k;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 12 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.58s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/catalan_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/catamorphism)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:15:1
   |
15 | pub extern "C" fn reduce(mut fn_0: intFn, mut size: i32, mut elms: *mut i32) -> i32 {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:24:25
   |
24 |                 None => panic!("non-null function pointer"),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:19:29
   |
19 |         let mut val: i32 = *elms;
   |                             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:23:52
   |
23 |                 Some(fn_0_m) => val = fn_0_m(val, *elms.offset(i as isize)),
   |                                                    ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:23:64
   |
23 |                 Some(fn_0_m) => val = fn_0_m(val, *elms.offset(i as isize)),
   |                                                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:27:13
   |
27 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:40:5
   |
40 |     a - b
   |     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:18
   |
54 |             Some(add as unsafe extern "C" fn(i32, i32) -> i32),
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:18
   |
63 |             Some(sub as unsafe extern "C" fn(i32, i32) -> i32),
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:18
   |
72 |             Some(mul as unsafe extern "C" fn(i32, i32) -> i32),
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:27:13
   |
27 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 11 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 11 warnings (11 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.66s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/chaocipher)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (43 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:40
   |
33 | pub static mut l_alphabet: *const i8 = (b"HXUCZVAMDSLKPEFJRIGTWOBNYQ\0" as *const u8).cast::<i8>();
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:40
   |
35 | pub static mut r_alphabet: *const i8 = (b"PTLNBQDEOYSFAVZKGJRIHWXUMC\0" as *const u8).cast::<i8>();
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:44:35
   |
44 |         let mut len: u64 = strlen(in_0);
   |                                   ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:61:64
   |
61 |                 index = (strchr(right.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |                                                                ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:63:18
   |
63 |                 *out.offset(i as isize) = left[index as usize];
   |                  ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:65:63
   |
65 |                 index = (strchr(left.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |                                                               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:67:18
   |
67 |                 *out.offset(i as isize) = right[index as usize];
   |                  ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:26
   |
50 |         temp[26_usize] = '\0' as i8;
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:52:15
   |
52 |         while (i as u64) < len {
   |               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:15
   |
52 |         while (i as u64) < len {
   |               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `isize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:61:25
   |
61 |                   index = (strchr(right.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |  _________________________^
62 | |                     .offset_from(right.as_mut_ptr()) as i32;
   | |___________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
61 ~                 index = i32::try_from((strchr(right.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
62 ~                     .offset_from(right.as_mut_ptr()));
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:25
   |
61 |                   index = (strchr(right.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |  _________________________^
62 | |                     .offset_from(right.as_mut_ptr()) as i32;
   | |___________________________________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:76
   |
61 |                 index = (strchr(right.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |                                                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:63:48
   |
63 |                 *out.offset(i as isize) = left[index as usize];
   |                                                ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:48
   |
63 |                 *out.offset(i as isize) = left[index as usize];
   |                                                ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:29
   |
63 |                 *out.offset(i as isize) = left[index as usize];
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `isize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:65:25
   |
65 |                   index = (strchr(left.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |  _________________________^
66 | |                     .offset_from(left.as_mut_ptr()) as i32;
   | |__________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
65 ~                 index = i32::try_from((strchr(left.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
66 ~                     .offset_from(left.as_mut_ptr()));
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:25
   |
65 |                   index = (strchr(left.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |  _________________________^
66 | |                     .offset_from(left.as_mut_ptr()) as i32;
   | |__________________________________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:75
   |
65 |                 index = (strchr(left.as_mut_ptr(), i32::from(*in_0.offset(i as isize))))
   |                                                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:67:49
   |
67 |                 *out.offset(i as isize) = right[index as usize];
   |                                                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:49
   |
67 |                 *out.offset(i as isize) = right[index as usize];
   |                                                 ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:29
   |
67 |                 *out.offset(i as isize) = right[index as usize];
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:69:16
   |
69 |             if i as u64 == len.wrapping_sub(1) {
   |                ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:16
   |
69 |             if i as u64 == len.wrapping_sub(1) {
   |                ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:74:51
   |
74 |                 temp[(j - index) as usize] = left[j as usize];
   |                                                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:51
   |
74 |                 temp[(j - index) as usize] = left[j as usize];
   |                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:74:22
   |
74 |                 temp[(j - index) as usize] = left[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:22
   |
74 |                 temp[(j - index) as usize] = left[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:74:22
   |
74 |                 temp[(j - index) as usize] = left[j as usize];
   |                      ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:76:17
   |
76 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:80:72
   |
80 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = left[j as usize];
   |                                                                        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:72
   |
80 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = left[j as usize];
   |                                                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:80:22
   |
80 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = left[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:22
   |
80 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = left[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:80:22
   |
80 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = left[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:82:17
   |
82 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:87:62
   |
87 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
   |                                                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:62
   |
87 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
   |                                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:87:22
   |
87 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:22
   |
87 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:89:17
   |
89 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:95:52
   |
95 |                 temp[(j - index) as usize] = right[j as usize];
   |                                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:52
   |
95 |                 temp[(j - index) as usize] = right[j as usize];
   |                                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:95:22
   |
95 |                 temp[(j - index) as usize] = right[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:22
   |
95 |                 temp[(j - index) as usize] = right[j as usize];
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:95:22
   |
95 |                 temp[(j - index) as usize] = right[j as usize];
   |                      ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:97:17
   |
97 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:101:73
    |
101 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = right[j as usize];
    |                                                                         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:101:73
    |
101 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = right[j as usize];
    |                                                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:101:22
    |
101 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = right[j as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:101:22
    |
101 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = right[j as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:101:22
    |
101 |                 temp[(26_i32 - index.wrapping_add(j)) as usize] = right[j as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:103:17
    |
103 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:108:62
    |
108 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:62
    |
108 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:108:22
    |
108 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:22
    |
108 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:110:17
    |
110 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:116:62
    |
116 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:62
    |
116 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:116:22
    |
116 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:22
    |
116 |                 temp[(j.wrapping_sub(1i32)) as usize] = temp[j as usize];
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:118:17
    |
118 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:123:13
    |
123 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:131:41
    |
131 |         let mut plain_text: *const i8 = (b"WELLDONEISBETTERTHANWELLSAID\0" as *const u8).cast::<i8>();
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:36
    |
136 |             build_str_from_raw_ptr(plain_text as *mut u8)
    |                                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:76:17
   |
76 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:82:17
   |
82 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:89:17
   |
89 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:97:17
   |
97 |                 j;
   |                 ^^

warning: path statement with no effect
   --> src/main.rs:103:17
    |
103 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:110:17
    |
110 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:118:17
    |
118 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:123:13
    |
123 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 75 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 75 warnings (75 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.73s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/character_codes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (7 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:13:20
   |
13 |     println!("{}", 'a' as i32);
   |                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.74s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/check_input_device_is_a_terminal)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (7 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:24:1
   |
24 | / pub struct _IO_FILE {
25 | |     pub _flags: i32,
26 | |     pub _IO_read_ptr: *mut i8,
27 | |     pub _IO_read_end: *mut i8,
...  |
53 | |     pub _unused2: [i8; 20],
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
24 + #[non_exhaustive]
25 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:13
   |
61 |             (b"stdin is tty\0" as *const u8).cast::<i8>()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:13
   |
63 |             (b"stdin is not tty\0" as *const u8).cast::<i8>()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main" test) generated 4 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 4 warnings (4 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.69s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/check_output_device_is_a_terminal)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (7 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:24:1
   |
24 | / pub struct _IO_FILE {
25 | |     pub _flags: i32,
26 | |     pub _IO_read_ptr: *mut i8,
27 | |     pub _IO_read_end: *mut i8,
...  |
53 | |     pub _unused2: [i8; 20],
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
24 + #[non_exhaustive]
25 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:13
   |
61 |             (b"stdout is tty\0" as *const u8).cast::<i8>()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:13
   |
63 |             (b"stdout is not tty\0" as *const u8).cast::<i8>()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 4 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 4 warnings (4 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.94s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/check_that_file_exists)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/chinese_remainder_theorem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (13 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:25:28
   |
25 |         b = a.wrapping_rem(b);
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:28:14
   |
28 |         x0 = x1 - q.wrapping_mul(x0);
   |              ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:47:22
   |
47 |             prod *= *n.offset(i as isize);
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:53:25
   |
53 |             p = prod / *n.offset(i as isize);
   |                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:54:21
   |
54 |             sum += *a.offset(i as isize) * mul_inv(p, *n.offset(i as isize)) * p;
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:54:56
   |
54 |             sum += *a.offset(i as isize) * mul_inv(p, *n.offset(i as isize)) * p;
   |                                                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:47:13
   |
47 |             prod *= *n.offset(i as isize);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:31
   |
47 |             prod *= *n.offset(i as isize);
   |                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:49:13
   |
49 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:53:17
   |
53 |             p = prod / *n.offset(i as isize);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:34
   |
53 |             p = prod / *n.offset(i as isize);
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:54:13
   |
54 |             sum += *a.offset(i as isize) * mul_inv(p, *n.offset(i as isize)) * p;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:30
   |
54 |             sum += *a.offset(i as isize) * mul_inv(p, *n.offset(i as isize)) * p;
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:65
   |
54 |             sum += *a.offset(i as isize) * mul_inv(p, *n.offset(i as isize)) * p;
   |                                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:58:9
   |
58 |         sum % prod
   |         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:58:9
   |
58 |         sum % prod
   |         ^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:70:13
   |
70 | /             (::core::mem::size_of::<[i32; 3]>() as u64)
71 | |                 .wrapping_div(::core::mem::size_of::<i32>() as u64) as i32,
   | |__________________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
70 ~             i32::try_from((::core::mem::size_of::<[i32; 3]>() as u64)
71 ~                 .wrapping_div(::core::mem::size_of::<i32>() as u64)),
   |

warning: path statement with no effect
  --> src/main.rs:49:13
   |
49 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 21 warnings (21 duplicates)
warning: `c2rust_out` (bin "main" test) generated 21 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/chinese_zodiac)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (35 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:80:5
   |
80 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:5
   |
28 |     (b"Rat\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:5
   |
29 |     (b"Ox\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:5
   |
30 |     (b"Tiger\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:5
   |
31 |     (b"Rabbit\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:5
   |
32 |     (b"Dragon\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:5
   |
33 |     (b"Snake\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:5
   |
34 |     (b"Horse\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:5
   |
35 |     (b"Goat\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:5
   |
36 |     (b"Monkey\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:5
   |
37 |     (b"Rooster\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:5
   |
38 |     (b"Dog\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:5
   |
39 |     (b"Pig\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:5
   |
43 |     (b"Wood\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:5
   |
44 |     (b"Fire\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:5
   |
45 |     (b"Earth\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:5
   |
46 |     (b"Metal\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:5
   |
47 |     (b"Water\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:53:32
   |
53 |         let mut element: i32 = floor(f64::from((year.wrapping_sub(4i32)) % 10_i32 / 2i32)) as i32;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:32
   |
53 |         let mut element: i32 = floor(f64::from((year.wrapping_sub(4i32)) % 10_i32 / 2i32)) as i32;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:53:48
   |
53 |         let mut element: i32 = floor(f64::from((year.wrapping_sub(4i32)) % 10_i32 / 2i32)) as i32;
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:54:18
   |
54 |         elements[element as usize]
   |                  ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:18
   |
54 |         elements[element as usize]
   |                  ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:62:17
   |
62 |         animals[((year.wrapping_sub(4i32)) % 12i32) as usize]
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:17
   |
62 |         animals[((year.wrapping_sub(4i32)) % 12i32) as usize]
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:62:17
   |
62 |         animals[((year.wrapping_sub(4i32)) % 12i32) as usize]
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:68:8
   |
68 |     if year % 2_i32 == 0_i32 {
   |        ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:9
   |
69 |         (b"yang\0" as *const u8).cast::<i8>()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:9
   |
71 |         (b"yin\0" as *const u8).cast::<i8>()
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:82:39
   |
82 |             let mut year: i32 = years[i as usize];
   |                                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:39
   |
82 |             let mut year: i32 = years[i as usize];
   |                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:40
   |
86 |                 build_str_from_raw_ptr(getElement(year) as *mut u8),
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:40
   |
87 |                 build_str_from_raw_ptr(getAnimal(year) as *mut u8),
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:40
   |
88 |                 build_str_from_raw_ptr(getYY(year) as *mut u8)
   |                                        ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:91:13
   |
91 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:91:13
   |
91 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 37 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 37 warnings (37 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.64s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/cholesky_decomposition)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (40 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:109:5
    |
109 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:41:27
   |
41 |                     sqrt(*A.offset((i * n.wrapping_add(i)) as isize) - s)
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:44:29
   |
44 |                         * (*A.offset((i * n.wrapping_add(j)) as isize) - s)
   |                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:22:13
   |
22 |             (n.wrapping_mul(n)) as u64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:13
   |
22 |             (n.wrapping_mul(n)) as u64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:35:21
   |
35 | /                     s += *L.offset((i * n.wrapping_add(k)) as isize)
36 | |                         * *L.offset((j * n.wrapping_add(k)) as isize);
   | |_____________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:36
   |
35 |                     s += *L.offset((i * n.wrapping_add(k)) as isize)
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:35:36
   |
35 |                     s += *L.offset((i * n.wrapping_add(k)) as isize)
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:37
   |
36 |                         * *L.offset((j * n.wrapping_add(k)) as isize);
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:36:37
   |
36 |                         * *L.offset((j * n.wrapping_add(k)) as isize);
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:38:21
   |
38 |                     k;
   |                     ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:41:26
   |
41 |                     sqrt(*A.offset((i * n.wrapping_add(i)) as isize) - s)
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:36
   |
41 |                     sqrt(*A.offset((i * n.wrapping_add(i)) as isize) - s)
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:41:36
   |
41 |                     sqrt(*A.offset((i * n.wrapping_add(i)) as isize) - s)
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: floating-point arithmetic detected
  --> src/main.rs:43:21
   |
43 | /                     1.0f64 / *L.offset((j * n.wrapping_add(j)) as isize)
44 | |                         * (*A.offset((i * n.wrapping_add(j)) as isize) - s)
   | |___________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:40
   |
43 |                     1.0f64 / *L.offset((j * n.wrapping_add(j)) as isize)
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:43:40
   |
43 |                     1.0f64 / *L.offset((j * n.wrapping_add(j)) as isize)
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:38
   |
44 |                         * (*A.offset((i * n.wrapping_add(j)) as isize) - s)
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:44:38
   |
44 |                         * (*A.offset((i * n.wrapping_add(j)) as isize) - s)
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:27
   |
40 |                 *L.offset((i * n.wrapping_add(j)) as isize) = if i == j {
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:40:27
   |
40 |                 *L.offset((i * n.wrapping_add(j)) as isize) = if i == j {
   |                           ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:47:17
   |
47 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:64:36
   |
64 |                 print!("{:2.5} ", *A.offset((i * n + j) as isize));
   |                                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:45
   |
64 |                 print!("{:2.5} ", *A.offset((i * n + j) as isize));
   |                                             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:64:45
   |
64 |                 print!("{:2.5} ", *A.offset((i * n + j) as isize));
   |                                             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:66:17
   |
66 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:70:13
   |
70 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:38:21
   |
38 |                     k;
   |                     ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:47:17
   |
47 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:66:17
   |
66 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:70:13
   |
70 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 34 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 34 warnings (34 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.68s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/circles_of_given_radius_through_two_points)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (32 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:18:1
   |
18 | / pub struct point {
19 | |     pub x: f64,
20 | |     pub y: f64,
21 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
18 + #[non_exhaustive]
19 | pub struct point {
   |

warning: floating-point arithmetic detected
  --> src/main.rs:26:14
   |
26 |         sqrt((p1.x - p2.x).mul_add(p1.x - p2.x, (p1.y - p2.y) * (p1.y - p2.y)))
   |              ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:26:36
   |
26 |         sqrt((p1.x - p2.x).mul_add(p1.x - p2.x, (p1.y - p2.y) * (p1.y - p2.y)))
   |                                    ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:26:49
   |
26 |         sqrt((p1.x - p2.x).mul_add(p1.x - p2.x, (p1.y - p2.y) * (p1.y - p2.y)))
   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: strict comparison of `f32` or `f64`
  --> src/main.rs:48:19
   |
48 |         } else if separation == 2_f64 * radius {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some margin of error: `(separation - 2_f64 * radius).abs() < error_margin`
   |
   = note: `f32::EPSILON` and `f64::EPSILON` are available for the `error_margin`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
   = note: requested on the command line with `-W clippy::float-cmp`

warning: floating-point arithmetic detected
  --> src/main.rs:48:33
   |
48 |         } else if separation == 2_f64 * radius {
   |                                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:49:128
   |
49 | ...the circle with center ({:.4},{:.4}) and radius {:.4}", (p1.x + p2.x) / 2_f64, (p1.y + p2.y) / 2_f64, radius);
   |                                                            ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:49:151
   |
49 | ...({:.4},{:.4}) and radius {:.4}", (p1.x + p2.x) / 2_f64, (p1.y + p2.y) / 2_f64, radius);
   |                                                            ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:50:32
   |
50 |         } else if separation > 2_f64 * radius {
   |                                ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:53:35
   |
53 |             mirrorDistance = sqrt(pow(radius, 2_f64) - pow(separation / 2_f64, 2_f64));
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:55:130
   |
55 | ...er ({:.4},{:.4}), radius {:.4}", (p1.x + p2.x) / 2_f64 + mirrorDistance * (p1.y - p2.y) / separation, (p1.y + p2.y) / 2_f64 + mirrorDi...
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:55:199
   |
55 |   ...cle C1 with center ({:.4},{:.4}), radius {:.4} and Circle C2 with center ({:.4},{:.4}), radius {:.4}", (p1.x + p2.x) / 2_f64 + mirrorDistance * (p1.y - p2.y) / separation, (p1....
   |  ________________________________________________________________________________________________________________________________________________________________________________^
56 | | ...tion, radius, (p1.x + p2.x) / 2_f64 - mirrorDistance * (p1.y - p2.y) / separation, (p1.y + p2.y) / 2_f64 - mirrorDistance * (p2.x - p1.x) / separation, radius);
   | |_______^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:56:41
   |
56 | ...   .x) / separation, radius, (p1.x + p2.x) / 2_f64 - mirrorDistance * (p1.y - p2.y) / separation, (p1.y + p2.y) / 2_f64 - mirrorDistan...
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:56:110
   |
56 | ...ce * (p1.y - p2.y) / separation, (p1.y + p2.y) / 2_f64 - mirrorDistance * (p2.x - p1.x) / separation, radius);
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:138:30
    |
138 |         print!("\nCase {})", i + 1_i32);
    |                              ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:140:19
    |
140 |             cases[(2_i32 * i) as usize],
    |                   ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:140:19
    |
140 |             cases[(2_i32 * i) as usize],
    |                   ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:140:19
    |
140 |             cases[(2_i32 * i) as usize],
    |                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:141:19
    |
141 |             cases[(2_i32 * i.wrapping_add(1i32)) as usize],
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:19
    |
141 |             cases[(2_i32 * i.wrapping_add(1i32)) as usize],
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:141:19
    |
141 |             cases[(2_i32 * i.wrapping_add(1i32)) as usize],
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:142:19
    |
142 |             radii[i as usize],
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:142:19
    |
142 |             radii[i as usize],
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:145:9
    |
145 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
   --> src/main.rs:145:9
    |
145 |         i;
    |         ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 26 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 26 warnings (26 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.82s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/circular_primes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:11:5
   |
11 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0425]: cannot find function `main_0` in this scope
   --> src/main.rs:106:30
    |
106 |         ::std::process::exit(main_0() as i32);
    |                              ^^^^^^ not found in this scope

For more information about this error, try `rustc --explain E0425`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/combinations)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (7 fixes)
warning: statement with no effect
  --> src/main.rs:28:17
   |
28 |                 at;
   |                 ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:28:17
   |
28 |                 at;
   |                 ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.62s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/command_line_arguments)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:54
   |
37 |                 build_str_from_raw_ptr((*argv.offset(i as isize)).cast::<u8>())
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:40:13
   |
40 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: used `expect()` on a `Result` value
  --> src/main.rs:50:13
   |
50 | /             (::std::ffi::CString::new(arg))
51 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:56:33
   |
56 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
56 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:56:33
   |
56 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:33
   |
56 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:56:33
   |
56 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
  --> src/main.rs:40:13
   |
40 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 9 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:46:1
   |
46 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:50:13
   |
50 | /             (::std::ffi::CString::new(arg))
51 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 10 warnings (9 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.77s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/comma_quibbling)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (23 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:106:5
    |
106 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:46:46
   |
46 |             len = (len).wrapping_add(strlen(*strs.offset(i as isize)));
   |                                              ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:60:28
   |
60 |                 strcat(s, *strs.offset(0_isize));
   |                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:65:32
   |
65 |                     strcat(s, *strs.offset(i as isize));
   |                                ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:74:28
   |
74 |                 strcat(s, *strs.offset(i as isize));
   |                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:46:58
   |
46 |             len = (len).wrapping_add(strlen(*strs.offset(i as isize)));
   |                                                          ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
46 |             len = (len).wrapping_add(strlen(*strs.offset(isize::try_from(i))));
   |                                                          ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:46:58
   |
46 |             len = (len).wrapping_add(strlen(*strs.offset(i as isize)));
   |                                                          ^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:58
   |
46 |             len = (len).wrapping_add(strlen(*strs.offset(i as isize)));
   |                                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:48:13
   |
48 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:20
   |
53 |             perror((b"Can't allocate memory!\n\0" as *const u8).cast::<i8>());
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:19
   |
56 |         strcpy(s, (b"{\0" as *const u8).cast::<i8>());
   |                   ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:65:44
   |
65 |                     strcat(s, *strs.offset(i as isize));
   |                                            ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
65 |                     strcat(s, *strs.offset(isize::try_from(i)));
   |                                            ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:65:44
   |
65 |                     strcat(s, *strs.offset(i as isize));
   |                                            ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:44
   |
65 |                     strcat(s, *strs.offset(i as isize));
   |                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:35
   |
67 |                         strcat(s, (b", \0" as *const u8).cast::<i8>());
   |                                   ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:35
   |
69 |                         strcat(s, (b" and \0" as *const u8).cast::<i8>());
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:72:21
   |
72 |                     i;
   |                     ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:74:40
   |
74 |                 strcat(s, *strs.offset(i as isize));
   |                                        ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
74 |                 strcat(s, *strs.offset(isize::try_from(i)));
   |                                        ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:74:40
   |
74 |                 strcat(s, *strs.offset(i as isize));
   |                                        ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:40
   |
74 |                 strcat(s, *strs.offset(i as isize));
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:19
   |
77 |         strcat(s, (b"}\0" as *const u8).cast::<i8>());
   |                   ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:13
   |
86 |             (b"ABC\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:13
   |
87 |             (b"DEF\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:13
   |
88 |             (b"G\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:13
   |
89 |             (b"H\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:98:13
   |
98 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:48:13
   |
48 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:72:21
   |
72 |                     i;
   |                     ^^

warning: path statement with no effect
  --> src/main.rs:98:13
   |
98 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 30 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 30 warnings (30 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.80s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/compile_time_calculation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (14 fixes)
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.51s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/concurrent_computing)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: `__atomic_wide_counter` doesn't implement `std::fmt::Debug`
  --> src/main.rs:65:5
   |
63 | #[derive(Debug)]
   |          ----- in this derive macro expansion
64 | pub struct __pthread_cond_s {
65 |     pub __wseq: __atomic_wide_counter,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `__atomic_wide_counter` cannot be formatted using `{:?}`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `__atomic_wide_counter`
   = note: add `#[derive(Debug)]` to `__atomic_wide_counter` or manually `impl std::fmt::Debug for __atomic_wide_counter`
   = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `__atomic_wide_counter` with `#[derive(Debug)]`
   |
29 + #[derive(Debug)]
30 | pub union __atomic_wide_counter {
   |

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/constrained_random_points_on_a_circle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/construct_from_rational_number)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (31 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:17:1
   |
17 | / pub struct fraction {
18 | |     pub num: i32,
19 | |     pub den: i32,
20 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
17 + #[non_exhaustive]
18 | pub struct fraction {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:139:25
    |
139 |             quotient = *numerator / *denominator;
    |                         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:139:38
    |
139 |             quotient = *numerator / *denominator;
    |                                      ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:140:21
    |
140 |             temp = *numerator;
    |                     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:27
    |
141 |             *numerator = *denominator;
    |                           ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:14
    |
141 |             *numerator = *denominator;
    |              ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:142:36
    |
142 |             *denominator = temp % *denominator;
    |                                    ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:142:14
    |
142 |             *denominator = temp % *denominator;
    |              ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:139:24
    |
139 |             quotient = *numerator / *denominator;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:142:28
    |
142 |             *denominator = temp % *denominator;
    |                            ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:142:28
    |
142 |             *denominator = temp % *denominator;
    |                            ^^^^^^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:154:15
    |
154 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:154:15
    |
154 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:160:26
    |
160 |                 examples[i as usize].num, examples[i as usize].den
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:26
    |
160 |                 examples[i as usize].num, examples[i as usize].den
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:160:52
    |
160 |                 examples[i as usize].num, examples[i as usize].den
    |                                                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:52
    |
160 |                 examples[i as usize].num, examples[i as usize].den
    |                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:162:28
    |
162 |             while examples[i as usize].den != 0_i32 {
    |                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:28
    |
162 |             while examples[i as usize].den != 0_i32 {
    |                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:166:61
    |
166 |                         &mut (*examples.as_mut_ptr().offset(i as isize)).num,
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:167:61
    |
167 |                         &mut (*examples.as_mut_ptr().offset(i as isize)).den,
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:172:13
    |
172 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:174:16
    |
174 |         printf((b"\n\nRunning for %c2 :\0" as *const u8).cast::<i8>(), 251);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:179:15
    |
179 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:179:15
    |
179 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:185:23
    |
185 |                 sqrt2[i as usize].num, sqrt2[i as usize].den
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:185:23
    |
185 |                 sqrt2[i as usize].num, sqrt2[i as usize].den
    |                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:185:46
    |
185 |                 sqrt2[i as usize].num, sqrt2[i as usize].den
    |                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:185:46
    |
185 |                 sqrt2[i as usize].num, sqrt2[i as usize].den
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:187:25
    |
187 |             while sqrt2[i as usize].den != 0_i32 {
    |                         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:187:25
    |
187 |             while sqrt2[i as usize].den != 0_i32 {
    |                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:191:58
    |
191 |                         &mut (*sqrt2.as_mut_ptr().offset(i as isize)).num,
    |                                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:192:58
    |
192 |                         &mut (*sqrt2.as_mut_ptr().offset(i as isize)).den,
    |                                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:197:13
    |
197 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:204:15
    |
204 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:204:15
    |
204 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:210:20
    |
210 |                 pi[i as usize].num, pi[i as usize].den
    |                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:210:20
    |
210 |                 pi[i as usize].num, pi[i as usize].den
    |                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:210:40
    |
210 |                 pi[i as usize].num, pi[i as usize].den
    |                                        ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:210:40
    |
210 |                 pi[i as usize].num, pi[i as usize].den
    |                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:212:22
    |
212 |             while pi[i as usize].den != 0_i32 {
    |                      ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:212:22
    |
212 |             while pi[i as usize].den != 0_i32 {
    |                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:216:55
    |
216 |                         &mut (*pi.as_mut_ptr().offset(i as isize)).num,
    |                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:217:55
    |
217 |                         &mut (*pi.as_mut_ptr().offset(i as isize)).den,
    |                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:222:13
    |
222 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:172:13
    |
172 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:197:13
    |
197 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:222:13
    |
222 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 49 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 49 warnings (49 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.84s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/continued_fraction)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:35:24
   |
35 |             r = b / (a.wrapping_add(r));
   |                        ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:44:14
   |
44 |     return a.wrapping_add(r);
   |              ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:79:14
   |
79 |     return c.wrapping_mul(c);
   |              ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to 3 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to 3 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/convert_decimal_number_to_rational)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/convert_seconds_to_compound_duration)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (50 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:40:1
   |
40 | / pub struct _IO_FILE {
41 | |     pub _flags: i32,
42 | |     pub _IO_read_ptr: *mut i8,
43 | |     pub _IO_read_end: *mut i8,
...  |
69 | |     pub _unused2: [i8; 20],
70 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
40 + #[non_exhaustive]
41 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:13
    |
121 |             (b"wk\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:13
    |
121 |             (b"wk\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:13
    |
122 |             (b"d\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:13
    |
122 |             (b"d\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:13
    |
123 |             (b"hr\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:13
    |
123 |             (b"hr\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:13
    |
124 |             (b"min\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:13
    |
124 |             (b"min\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:125:13
    |
125 |             (b"sec\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:125:13
    |
125 |             (b"sec\0" as *const u8).cast::<i8>() as *mut i8,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:139:17
    |
139 |                 (b"Unable to allocate memory\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:146:26
    |
146 |             if *traverse[i as usize] != 0 {
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:146:26
    |
146 |             if *traverse[i as usize] != 0 {
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:150:25
    |
150 |                         (b", %lu %s\0" as *const u8).cast::<i8>(),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:151:35
    |
151 |                         *traverse[i as usize],
    |                                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:151:35
    |
151 |                         *traverse[i as usize],
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:152:32
    |
152 |                         labels[i as usize],
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:32
    |
152 |                         labels[i as usize],
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:157:25
    |
157 |                         (b"%lu %s\0" as *const u8).cast::<i8>(),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:158:35
    |
158 |                         *traverse[i as usize],
    |                                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:158:35
    |
158 |                         *traverse[i as usize],
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:159:32
    |
159 |                         labels[i as usize],
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:159:32
    |
159 |                         labels[i as usize],
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: equal expressions as operands to `!=`
   --> src/main.rs:163:25
    |
163 |                 first = 0_i32 != 0_i32;
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
    = note: `#[warn(clippy::eq_op)]` on by default

warning: statement with no effect
   --> src/main.rs:166:13
    |
166 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:168:25
    |
168 |         fprintf(stream, (b"\n\0" as *const u8).cast::<i8>());
    |                         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `expect()` on a `Result` value
   --> src/main.rs:218:13
    |
218 | /             (::std::ffi::CString::new(arg))
219 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:224:33
    |
224 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
224 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:224:33
    |
224 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:224:33
    |
224 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:224:33
    |
224 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
   --> src/main.rs:166:13
    |
166 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 34 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:214:1
    |
214 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:218:13
    |
218 | /             (::std::ffi::CString::new(arg))
219 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 35 warnings (34 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.93s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/convex_hull)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:121:28
    |
121 |         print!("({}, {})", (*ptr).data.x, (*ptr).data.y);
    |                            ^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:121:43
    |
121 |         print!("({}, {})", (*ptr).data.x, (*ptr).data.y);
    |                                           ^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:122:15
    |
122 |         ptr = (*ptr).next;
    |               ^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:125:30
    |
125 |         print!(", ({}, {})", (*ptr).data.x, (*ptr).data.y);
    |                              ^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:125:45
    |
125 |         print!(", ({}, {})", (*ptr).data.x, (*ptr).data.y);
    |                                             ^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:126:15
    |
126 |         ptr = (*ptr).next;
    |               ^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

warning: unnecessary `unsafe` block
   --> src/main.rs:117:5
    |
117 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
   --> src/main.rs:129:5
    |
129 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/main.rs:204:5
    |
204 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block

For more information about this error, try `rustc --explain E0133`.
warning: `c2rust_out` (bin "main" test) generated 5 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 6 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 5 warnings (5 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 6 previous errors; 5 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/conways_game_of_life)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/copy_a_string)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (22 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:126:5
    |
126 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:42:1
   |
42 | / pub struct _IO_FILE {
43 | |     pub _flags: i32,
44 | |     pub _IO_read_ptr: *mut i8,
45 | |     pub _IO_read_end: *mut i8,
...  |
71 | |     pub _unused2: [i8; 20],
72 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
42 + #[non_exhaustive]
43 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:17
   |
88 |                 (b"The buffer is too small!\n\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:13
   |
95 |             src.as_mut_ptr() as *const libc::c_void,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:100:20
    |
100 |             perror((b"strdup\0" as *const u8).cast::<i8>());
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:57
    |
104 |         memset(src.as_mut_ptr().cast::<libc::c_void>(), '-' as i32, 5);
    |                                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 7 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 7 warnings (7 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.01s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/count_in_factors)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (23 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:39
   |
20 |         static mut primes: *mut u64 = 0 as *const u64 as *mut u64;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:39
   |
20 |         static mut primes: *mut u64 = 0 as *const u64 as *mut u64;
   |                                       ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/main.rs:29:73
   |
29 |                     (::core::mem::size_of::<u64>() as u64).wrapping_mul(alloc as u64),
   |                                                                         ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:73
   |
29 |                     (::core::mem::size_of::<u64>() as u64).wrapping_mul(alloc as u64),
   |                                                                         ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:37:35
   |
37 |             last = *primes.offset((n_primes.wrapping_sub(1i64)) as isize);
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
37 |             last = *primes.offset(isize::try_from((n_primes.wrapping_sub(1i64))));
   |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:35
   |
37 |             last = *primes.offset((n_primes.wrapping_sub(1i64)) as isize);
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:40
   |
42 |                     p = *primes.offset(i as isize);
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:46:40
   |
46 |                         *primes.offset(fresh0 as isize) = last;
   |                                        ^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
46 |                         *primes.offset(isize::try_from(fresh0)) = last;
   |                                        ~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:40
   |
46 |                         *primes.offset(fresh0 as isize) = last;
   |                                        ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:49:46
   |
49 |                         if last.wrapping_rem(p) == 0 {
   |                                              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:53:25
   |
53 |                         i;
   |                         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:24
   |
58 |         *primes.offset(idx as isize)
   |                        ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:76:34
   |
76 |             while n.wrapping_rem(p) == 0 {
   |                                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:77:38
   |
77 |                 n = (n).wrapping_div(p);
   |                                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:88:13
   |
88 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:98:9
   |
98 |         x;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:53:25
   |
53 |                         i;
   |                         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:88:13
   |
88 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:98:9
   |
98 |         x;
   |         ^^

warning: `c2rust_out` (bin "main" test) generated 20 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 20 warnings (20 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.59s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/count_the_coins)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (63 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:19:1
   |
19 | / pub struct i128_0 {
20 | |     pub x: [u64; 2],
21 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
19 + #[non_exhaustive]
20 | pub struct i128_0 {
   |

warning: casting `u64` to `u32` may truncate the value
  --> src/main.rs:25:9
   |
25 |         v.x[0_usize] as u32,
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
25 |         u32::try_from(v.x[0_usize]),
   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:9
   |
25 |         v.x[0_usize] as u32,
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:9
   |
26 |         (v.x[0_usize] >> 32i32) as u32,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `u32` may truncate the value
  --> src/main.rs:27:9
   |
27 |         v.x[1_usize] as u32,
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
27 |         u32::try_from(v.x[1_usize]),
   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:9
   |
27 |         v.x[1_usize] as u32,
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:9
   |
28 |         (v.x[1_usize] >> 32i32) as u32,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:43:55
   |
43 |             c = (c << 32i32).wrapping_add(u64::from(x[i as usize]));
   |                                                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:55
   |
43 |             c = (c << 32i32).wrapping_add(u64::from(x[i as usize]));
   |                                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `u32` may truncate the value
  --> src/main.rs:44:29
   |
44 |             x[i as usize] = c.wrapping_div(10) as u32;
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
44 |             x[i as usize] = u32::try_from(c.wrapping_div(10));
   |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:29
   |
44 |             x[i as usize] = c.wrapping_div(10) as u32;
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:44:15
   |
44 |             x[i as usize] = c.wrapping_div(10) as u32;
   |               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:15
   |
44 |             x[i as usize] = c.wrapping_div(10) as u32;
   |               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i8` may truncate the value
  --> src/main.rs:49:32
   |
49 |         buf[fresh1 as usize] = c.wrapping_add('0' as u64) as i8;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
49 |         buf[fresh1 as usize] = i8::try_from(c.wrapping_add('0' as u64));
   |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:32
   |
49 |         buf[fresh1 as usize] = c.wrapping_add('0' as u64) as i8;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:47
   |
49 |         buf[fresh1 as usize] = c.wrapping_add('0' as u64) as i8;
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:49:13
   |
49 |         buf[fresh1 as usize] = c.wrapping_add('0' as u64) as i8;
   |             ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:13
   |
49 |         buf[fresh1 as usize] = c.wrapping_add('0' as u64) as i8;
   |             ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:51:17
   |
51 |         while x[(len.wrapping_sub(1i32)) as usize] == 0 {
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:17
   |
51 |         while x[(len.wrapping_sub(1i32)) as usize] == 0 {
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:53:13
   |
53 |             len;
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:65:36
   |
65 |         print!("{}", i32::from(buf[j as usize]));
   |                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:36
   |
65 |         print!("{}", i32::from(buf[j as usize]));
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:18
   |
67 |     print!("{}", '\n' as i32);
   |                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:78:16
   |
78 |         while *coins.offset(n as isize) != 0_i32 {
   |                ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:88:40
   |
88 |             *idx.offset(i as isize) = *coins.offset(i as isize);
   |                                        ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:18
   |
92 |                 *coins.offset(i as isize) as u64,
   |                  ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:97:40
   |
97 |         *(*v.offset(0_isize)).offset((*coins.offset(0_isize) - 1i32) as isize) = {
   |                                        ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:109:48
    |
109 |                     *idx.offset(i as isize) = *coins.offset(i as isize) - 1_i32;
    |                                                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:29
   |
78 |         while *coins.offset(n as isize) != 0_i32 {
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:80:13
   |
80 |             n;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:83:77
   |
83 |             malloc((::core::mem::size_of::<*mut i32>() as u64).wrapping_mul(n as u64)).cast::<*mut i128_0>();
   |                                                                             ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:77
   |
83 |             malloc((::core::mem::size_of::<*mut i32>() as u64).wrapping_mul(n as u64)).cast::<*mut i128_0>();
   |                                                                             ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:85:72
   |
85 |             malloc((::core::mem::size_of::<i32>() as u64).wrapping_mul(n as u64)).cast::<i32>();
   |                                                                        ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:72
   |
85 |             malloc((::core::mem::size_of::<i32>() as u64).wrapping_mul(n as u64)).cast::<i32>();
   |                                                                        ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:53
   |
88 |             *idx.offset(i as isize) = *coins.offset(i as isize);
   |                                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:25
   |
88 |             *idx.offset(i as isize) = *coins.offset(i as isize);
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:42
   |
89 |             let fresh3 = &mut (*v.offset(i as isize));
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:92:17
   |
92 |                 *coins.offset(i as isize) as u64,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:17
   |
92 |                 *coins.offset(i as isize) as u64,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:31
   |
92 |                 *coins.offset(i as isize) as u64,
   |                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:95:13
   |
95 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:38
   |
97 |         *(*v.offset(0_isize)).offset((*coins.offset(0_isize) - 1i32) as isize) = {
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:97:38
   |
97 |         *(*v.offset(0_isize)).offset((*coins.offset(0_isize) - 1i32) as isize) = {
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:48
    |
105 |                 let fresh4 = &mut (*idx.offset(i as isize));
    |                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:107:17
    |
107 |                 *fresh4 -= 1_i32;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:109:47
    |
109 |                     *idx.offset(i as isize) = *coins.offset(i as isize) - 1_i32;
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:109:61
    |
109 |                     *idx.offset(i as isize) = *coins.offset(i as isize) - 1_i32;
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:109:33
    |
109 |                     *idx.offset(i as isize) = *coins.offset(i as isize) - 1_i32;
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:112:17
    |
112 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:62
    |
114 |             let mut c: i128_0 = *(*v.offset(0_isize)).offset(*idx.offset(0_isize) as isize);
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:118:32
    |
118 |                     (*v.offset(i as isize)).offset(*idx.offset(i as isize) as isize);
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:118:52
    |
118 |                     (*v.offset(i as isize)).offset(*idx.offset(i as isize) as isize);
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:118:64
    |
118 |                     (*v.offset(i as isize)).offset(*idx.offset(i as isize) as isize);
    |                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:21
    |
120 |                     ((*p).x[0_usize] as u64).wrapping_add(c.x[0_usize]) as u64;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:21
    |
120 |                     ((*p).x[0_usize] as u64).wrapping_add(c.x[0_usize]) as u64;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:21
    |
122 |                     ((*p).x[1_usize] as u64).wrapping_add(c.x[1_usize]) as u64;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:21
    |
122 |                     ((*p).x[1_usize] as u64).wrapping_add(c.x[1_usize]) as u64;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:125:21
    |
125 |                     (*p).x[1_usize];
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:129:17
    |
129 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:132:13
    |
132 |             k;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:134:41
    |
134 |         let mut r: i128_0 = *(*v.offset((n.wrapping_sub(1i32)) as isize))
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:21
    |
135 |             .offset(*idx.offset((n.wrapping_sub(1i32)) as isize) as isize);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:33
    |
135 |             .offset(*idx.offset((n.wrapping_sub(1i32)) as isize) as isize);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:138:29
    |
138 |             free((*v.offset(i as isize)).cast::<libc::c_void>());
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:140:13
    |
140 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:152:13
    |
152 |         if *coins == 0_i32 || sum < 0_i32 {
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:158:23
    |
158 |         count2(sum - *coins, coins) + count2(sum, coins.offset(1_isize))
    |                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:158:51
    |
158 |         count2(sum - *coins, coins) + count2(sum, coins.offset(1_isize))
    |                                                   ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:158:9
    |
158 |         count2(sum - *coins, coins) + count2(sum, coins.offset(1_isize))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:173:18
    |
173 |     print!("{}", '\n' as i32);
    |                  ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:53:13
   |
53 |             len;
   |             ^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:80:13
   |
80 |             n;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:95:13
   |
95 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:112:17
    |
112 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:129:17
    |
129 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:132:13
    |
132 |             k;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:140:13
    |
140 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 79 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 79 warnings (79 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.08s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/cramers_rule)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (51 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:188:5
    |
188 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:20:1
   |
20 | / pub struct SquareMatrix {
21 | |     pub n: i32,
22 | |     pub elems: *mut *mut f64,
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
20 + #[non_exhaustive]
21 | pub struct SquareMatrix {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:44:22
   |
44 |                     *elems.offset(i as isize * vla as isize).offset(j as isize);
   |                      ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:28:19
   |
28 |         let vla = n as usize;
   |                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:19
   |
28 |         let vla = n as usize;
   |                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:33:31
   |
33 |                 elems: malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut f64>() as u64)).cast::<*mut f64>(),
   |                               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:31
   |
33 |                 elems: malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut f64>() as u64)).cast::<*mut f64>(),
   |                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:50
   |
38 |             let fresh0 = &mut (*(A.elems).offset(i as isize));
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:40:24
   |
40 |                 malloc((n as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64)).cast::<f64>();
   |                        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:24
   |
40 |                 malloc((n as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64)).cast::<f64>();
   |                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:44:35
   |
44 |                     *elems.offset(i as isize * vla as isize).offset(j as isize);
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:35
   |
44 |                     *elems.offset(i as isize * vla as isize).offset(j as isize);
   |                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `isize` may wrap around the value
  --> src/main.rs:44:48
   |
44 |                     *elems.offset(i as isize * vla as isize).offset(j as isize);
   |                                                ^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:48
   |
44 |                     *elems.offset(i as isize * vla as isize).offset(j as isize);
   |                                                ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:69
   |
44 |                     *elems.offset(i as isize * vla as isize).offset(j as isize);
   |                                                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:37
   |
43 |                 *(*(A.elems).offset(i as isize)).offset(j as isize) =
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:57
   |
43 |                 *(*(A.elems).offset(i as isize)).offset(j as isize) =
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:46:17
   |
46 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:49:13
   |
49 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:64:29
   |
64 |         dest.elems = malloc((dest.n as u64).wrapping_mul(::core::mem::size_of::<*mut f64>() as u64)).cast::<*mut f64>();
   |                             ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:29
   |
64 |         dest.elems = malloc((dest.n as u64).wrapping_mul(::core::mem::size_of::<*mut f64>() as u64)).cast::<*mut f64>();
   |                             ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:53
   |
70 |             let fresh1 = &mut (*(dest.elems).offset(i as isize));
   |                                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:71:30
   |
71 |             *fresh1 = malloc((dest.n as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64)).cast::<f64>();
   |                              ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:30
   |
71 |             *fresh1 = malloc((dest.n as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64)).cast::<f64>();
   |                              ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:43
   |
75 |                     *(*(src.elems).offset(i as isize)).offset(j as isize);
   |                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:63
   |
75 |                     *(*(src.elems).offset(i as isize)).offset(j as isize);
   |                                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:40
   |
74 |                 *(*(dest.elems).offset(i as isize)).offset(j as isize) =
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:60
   |
74 |                 *(*(dest.elems).offset(i as isize)).offset(j as isize) =
   |                                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:77:17
   |
77 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:80:13
   |
80 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:40
   |
96 |                 if *(*(A.elems).offset(i as isize)).offset(j as isize)
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:60
   |
96 |                 if *(*(A.elems).offset(i as isize)).offset(j as isize)
   |                                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:43
   |
97 |                     > *(*(A.elems).offset(i_max as isize)).offset(j as isize)
   |                                           ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:67
   |
97 |                     > *(*(A.elems).offset(i_max as isize)).offset(j as isize)
   |                                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:102:17
    |
102 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:60
    |
107 |                     let mut tmp: f64 = *(*(A.elems).offset(i_max as isize)).offset(k as isize);
    |                                                            ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:84
    |
107 |                     let mut tmp: f64 = *(*(A.elems).offset(i_max as isize)).offset(k as isize);
    |                                                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:109:45
    |
109 |                         *(*(A.elems).offset(j as isize)).offset(k as isize);
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:109:65
    |
109 |                         *(*(A.elems).offset(j as isize)).offset(k as isize);
    |                                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:41
    |
108 |                     *(*(A.elems).offset(i_max as isize)).offset(k as isize) =
    |                                         ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:65
    |
108 |                     *(*(A.elems).offset(i_max as isize)).offset(k as isize) =
    |                                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:41
    |
110 |                     *(*(A.elems).offset(j as isize)).offset(k as isize) = tmp;
    |                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:61
    |
110 |                     *(*(A.elems).offset(j as isize)).offset(k as isize) = tmp;
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:112:21
    |
112 |                     k;
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
   --> src/main.rs:114:17
    |
114 |                 det_0 *= -1_f64;
    |                 ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `f64` to `i32` may truncate the value
   --> src/main.rs:116:30
    |
116 |             if f64::from(abs(*(*(A.elems).offset(j as isize)).offset(j as isize) as i32)) < 1e-12f64 {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:30
    |
116 |             if f64::from(abs(*(*(A.elems).offset(j as isize)).offset(j as isize) as i32)) < 1e-12f64 {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:50
    |
116 |             if f64::from(abs(*(*(A.elems).offset(j as isize)).offset(j as isize) as i32)) < 1e-12f64 {
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:70
    |
116 |             if f64::from(abs(*(*(A.elems).offset(j as isize)).offset(j as isize) as i32)) < 1e-12f64 {
    |                                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:22
    |
117 |                 puts((b"Singular matrix!\0" as *const u8).cast::<i8>());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:122:37
    |
122 |                   let mut mult: f64 = -*(*(A.elems).offset(i_0 as isize)).offset(j as isize)
    |  _____________________________________^
123 | |                     / *(*(A.elems).offset(j as isize)).offset(j as isize);
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:58
    |
122 |                 let mut mult: f64 = -*(*(A.elems).offset(i_0 as isize)).offset(j as isize)
    |                                                          ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:80
    |
122 |                 let mut mult: f64 = -*(*(A.elems).offset(i_0 as isize)).offset(j as isize)
    |                                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:43
    |
123 |                     / *(*(A.elems).offset(j as isize)).offset(j as isize);
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:63
    |
123 |                     / *(*(A.elems).offset(j as isize)).offset(j as isize);
    |                                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:126:21
    |
126 | /                     *(*(A.elems).offset(i_0 as isize)).offset(k_0 as isize) +=
127 | |                         mult * *(*(A.elems).offset(j as isize)).offset(k_0 as isize);
    | |____________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:127:52
    |
127 |                         mult * *(*(A.elems).offset(j as isize)).offset(k_0 as isize);
    |                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:127:72
    |
127 |                         mult * *(*(A.elems).offset(j as isize)).offset(k_0 as isize);
    |                                                                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:126:41
    |
126 |                     *(*(A.elems).offset(i_0 as isize)).offset(k_0 as isize) +=
    |                                         ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:126:63
    |
126 |                     *(*(A.elems).offset(i_0 as isize)).offset(k_0 as isize) +=
    |                                                               ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:129:21
    |
129 |                     k_0;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:132:17
    |
132 |                 i_0;
    |                 ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:135:13
    |
135 |             j;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
   --> src/main.rs:142:13
    |
142 |             det_0 *= *(*(A.elems).offset(i_1 as isize)).offset(i_1 as isize);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:142:42
    |
142 |             det_0 *= *(*(A.elems).offset(i_1 as isize)).offset(i_1 as isize);
    |                                          ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:142:64
    |
142 |             det_0 *= *(*(A.elems).offset(i_1 as isize)).offset(i_1 as isize);
    |                                                                ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:144:13
    |
144 |             i_1;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:156:37
    |
156 |             free((*(A.elems).offset(i as isize)).cast::<libc::c_void>());
    |                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:158:13
    |
158 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:176:72
    |
176 |             *(*(tmp.elems).offset(i as isize)).offset(var as isize) = *b.offset(i as isize);
    |                                                                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:81
    |
176 |             *(*(tmp.elems).offset(i as isize)).offset(var as isize) = *b.offset(i as isize);
    |                                                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:35
    |
176 |             *(*(tmp.elems).offset(i as isize)).offset(var as isize) = *b.offset(i as isize);
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:55
    |
176 |             *(*(tmp.elems).offset(i as isize)).offset(var as isize) = *b.offset(i as isize);
    |                                                       ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:178:13
    |
178 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
   --> src/main.rs:182:9
    |
182 |         det_tmp / det_A
    |         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `f64` to `i32` may truncate the value
   --> src/main.rs:197:30
    |
197 |         let mut det_A: i32 = det(tmp) as i32;
    |                              ^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:197:30
    |
197 |         let mut det_A: i32 = det(tmp) as i32;
    |                              ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:204:13
    |
204 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:211:1
    |
211 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:215:13
    |
215 | /             (::std::ffi::CString::new(arg))
216 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:215:13
    |
215 | /             (::std::ffi::CString::new(arg))
216 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:221:33
    |
221 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
221 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:221:33
    |
221 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:221:33
    |
221 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:221:33
    |
221 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:46:17
   |
46 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:49:13
   |
49 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:77:17
   |
77 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:80:13
   |
80 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:102:17
    |
102 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:112:21
    |
112 |                     k;
    |                     ^^

warning: path statement with no effect
   --> src/main.rs:129:21
    |
129 |                     k_0;
    |                     ^^^^

warning: path statement with no effect
   --> src/main.rs:132:17
    |
132 |                 i_0;
    |                 ^^^^

warning: path statement with no effect
   --> src/main.rs:135:13
    |
135 |             j;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:144:13
    |
144 |             i_1;
    |             ^^^^

warning: path statement with no effect
   --> src/main.rs:158:13
    |
158 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:178:13
    |
178 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:204:13
    |
204 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 98 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 97 warnings (97 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.84s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/crc32)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (20 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:48:13
   |
48 |         q = buf.offset(len as isize);
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:29:23
   |
29 |                 rem = i as u32;
   |                       ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:23
   |
29 |                 rem = i as u32;
   |                       ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:39:21
   |
39 |                     j;
   |                     ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:41:23
   |
41 |                 table[i as usize] = rem;
   |                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:23
   |
41 |                 table[i as usize] = rem;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:43:17
   |
43 |                 i;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:48:24
   |
48 |         q = buf.offset(len as isize);
   |                        ^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
48 |         q = buf.offset(isize::try_from(len));
   |                        ~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:48:24
   |
48 |         q = buf.offset(len as isize);
   |                        ^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:24
   |
48 |         q = buf.offset(len as isize);
   |                        ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i8` to `u8` may lose the sign of the value
  --> src/main.rs:51:21
   |
51 |             octet = *p as u8;
   |                     ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:21
   |
51 |             octet = *p as u8;
   |                     ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:40
   |
52 |             crc = crc >> 8_i32 ^ table[(crc & 0xff ^ u32::from(octet)) as usize];
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:54:13
   |
54 |             p;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:13
   |
64 |             (b"The quick brown fox jumps over the lazy dog\0" as *const u8).cast::<i8>();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:39:21
   |
39 |                     j;
   |                     ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:43:17
   |
43 |                 i;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:54:13
   |
54 |             p;
   |             ^^

warning: `c2rust_out` (bin "main") generated 19 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 19 warnings (19 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.58s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/create_an_html_table)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (9 fixes)
warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:24:17
   |
24 |                 rand() % 10_000_i32,
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:25:17
   |
25 |                 rand() % 10_000_i32,
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:26:17
   |
26 |                 rand() % 10_000_i32
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:29:13
   |
29 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:29:13
   |
29 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 6 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 6 warnings (6 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.64s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/create_a_two_dimentional_array_at_runtime)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:21:13
   |
21 |             (b"%d %d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:13
   |
22 |             &mut user1 as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:23:13
   |
23 |             &mut user2 as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:25:19
   |
25 |         let vla = user1 as usize;
   |                   ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:19
   |
25 |         let vla = user1 as usize;
   |                   ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:26:21
   |
26 |         let vla_0 = user2 as usize;
   |                     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:21
   |
26 |         let vla_0 = user2 as usize;
   |                     ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:30:21
   |
30 |             .offset((user1.wrapping_div(2i32)) as isize * vla_0 as isize)
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:21
   |
30 |             .offset((user1.wrapping_div(2i32)) as isize * vla_0 as isize)
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `isize` may wrap around the value
  --> src/main.rs:30:59
   |
30 |             .offset((user1.wrapping_div(2i32)) as isize * vla_0 as isize)
   |                                                           ^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:59
   |
30 |             .offset((user1.wrapping_div(2i32)) as isize * vla_0 as isize)
   |                                                           ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:21
   |
31 |             .offset((user2.wrapping_div(2i32)) as isize) = user1.wrapping_add(user2);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:38:25
   |
38 |                 .offset((user1 / 2i32) as isize * vla_0 as isize)
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:25
   |
38 |                 .offset((user1 / 2i32) as isize * vla_0 as isize)
   |                         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `isize` may wrap around the value
  --> src/main.rs:38:51
   |
38 |                 .offset((user1 / 2i32) as isize * vla_0 as isize)
   |                                                   ^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:51
   |
38 |                 .offset((user1 / 2i32) as isize * vla_0 as isize)
   |                                                   ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:25
   |
39 |                 .offset((user2 / 2i32) as isize)
   |                         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:45:1
   |
45 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:49:13
   |
49 | /             (::std::ffi::CString::new(arg))
50 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:49:13
   |
49 | /             (::std::ffi::CString::new(arg))
50 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:55:33
   |
55 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
55 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:55:33
   |
55 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:33
   |
55 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:55:33
   |
55 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main" test) generated 24 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 23 warnings (23 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.64s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/csv_data_manipulation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/csv_to_html_translation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (14 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:16:1
   |
16 | (b"Character,Speech\nThe multitude,The messiah! Show us the messiah!\nBrians mother,<angry>Now you listen here! He's not the messiah; he's a very naughty boy! Now go away!</angry>\nThe multitude,Who are you?\nBrians mother,I'm his mother; that's who!\nThe multitude,Behold his mother! Behold his mother!\0" as * const u8).ca...
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:45:13
   |
45 |             s;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:14
   |
47 |         puts((b"</td></tr>\n</table>\0" as *const u8).cast::<i8>());
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:45:13
   |
45 |             s;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 5 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 5 warnings (5 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.65s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/cuban_primes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (23 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:213:5
    |
213 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:28:1
   |
28 | / pub struct _IO_FILE {
29 | |     pub _flags: i32,
30 | |     pub _IO_read_ptr: *mut i8,
31 | |     pub _IO_read_end: *mut i8,
...  |
57 | |     pub _unused2: [i8; 20],
58 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
28 + #[non_exhaustive]
29 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:64:1
   |
64 | / pub struct PrimeArray {
65 | |     pub ptr: *mut i64,
66 | |     pub size: u64,
67 | |     pub capacity: u64,
68 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
64 + #[non_exhaustive]
65 | pub struct PrimeArray {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:89:16
   |
89 |         free((*primes).ptr.cast::<libc::c_void>());
   |                ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:90:11
   |
90 |         (*primes).ptr = std::ptr::null_mut::<i64>();
   |           ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:98:14
   |
98 |         if (*primes).size >= (*primes).capacity {
   |              ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:98:32
   |
98 |         if (*primes).size >= (*primes).capacity {
   |                                ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:100:33
    |
100 |                 .wrapping_mul((*primes).capacity)
    |                                 ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:104:19
    |
104 |                 (*primes).ptr.cast::<libc::c_void>(),
    |                   ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:114:19
    |
114 |                 (*primes).ptr = temp;
    |                   ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:115:19
    |
115 |                 (*primes).capacity = new_capacity;
    |                   ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:118:24
    |
118 |         let fresh0 = (*primes).size;
    |                        ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:119:29
    |
119 |         (*primes).size = ((*primes).size).wrapping_add(1);
    |                             ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:119:11
    |
119 |         (*primes).size = ((*primes).size).wrapping_add(1);
    |           ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:120:13
    |
120 |         *((*primes).ptr).offset(fresh0 as isize) = p;
    |             ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:21
    |
110 |                     (b"Failed to reallocate the prime array.\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:120:33
    |
120 |         *((*primes).ptr).offset(fresh0 as isize) = p;
    |                                 ^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
120 |         *((*primes).ptr).offset(isize::try_from(fresh0)) = p;
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:120:33
    |
120 |         *((*primes).ptr).offset(fresh0 as isize) = p;
    |                                 ^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:33
    |
120 |         *((*primes).ptr).offset(fresh0 as isize) = p;
    |                                 ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:128:23
    |
128 |     let little: i32 = bigUn / chunks;
    |                       ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: equal expressions as operands to `!=`
   --> src/main.rs:142:35
    |
142 |             let mut found: bool = 0 != 0;
    |                                   ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
    = note: `#[warn(clippy::eq_op)]` on by default

warning: casting `f64` to `i64` may truncate the value
   --> src/main.rs:145:31
    |
145 |             let mut mx: i64 = ceil(sqrt(v as f64)) as i64;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:145:31
    |
145 |             let mut mx: i64 = ceil(sqrt(v as f64)) as i64;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> src/main.rs:145:41
    |
145 |             let mut mx: i64 = ceil(sqrt(v as f64)) as i64;
    |                                         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:145:41
    |
145 |             let mut mx: i64 = ceil(sqrt(v as f64)) as i64;
    |                                         ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:148:19
    |
148 |             while (j as u64) < primes.size as u64 {
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:148:19
    |
148 |             while (j as u64) < primes.size as u64 {
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:148:32
    |
148 |             while (j as u64) < primes.size as u64 {
    |                                ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:149:41
    |
149 |                 if *(primes.ptr).offset(j as isize) > mx {
    |                                         ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
149 |                 if *(primes.ptr).offset(isize::try_from(j)) > mx {
    |                                         ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:149:41
    |
149 |                 if *(primes.ptr).offset(j as isize) > mx {
    |                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:152:20
    |
152 |                 if v % *(primes.ptr).offset(j as isize) == 0 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:152:20
    |
152 |                 if v % *(primes.ptr).offset(j as isize) == 0 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:152:45
    |
152 |                 if v % *(primes.ptr).offset(j as isize) == 0 {
    |                                             ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
152 |                 if v % *(primes.ptr).offset(isize::try_from(j)) == 0 {
    |                                             ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:45
    |
152 |                 if v % *(primes.ptr).offset(j as isize) == 0 {
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:157:21
    |
157 |                     j;
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:164:25
    |
164 |                     z = *(primes.ptr).offset((primes.size).wrapping_sub(1) as isize) + 2;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:164:46
    |
164 |                     z = *(primes.ptr).offset((primes.size).wrapping_sub(1) as isize) + 2;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
164 |                     z = *(primes.ptr).offset(isize::try_from((primes.size).wrapping_sub(1))) + 2;
    |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:164:46
    |
164 |                     z = *(primes.ptr).offset((primes.size).wrapping_sub(1) as isize) + 2;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:164:46
    |
164 |                     z = *(primes.ptr).offset((primes.size).wrapping_sub(1) as isize) + 2;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: equal expressions as operands to `!=`
   --> src/main.rs:166:45
    |
166 |                         let mut fnd: bool = 0 != 0;
    |                                             ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:168:31
    |
168 |                         while (j as u64) < primes.size as u64 {
    |                               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:168:31
    |
168 |                         while (j as u64) < primes.size as u64 {
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:168:44
    |
168 |                         while (j as u64) < primes.size as u64 {
    |                                            ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:169:53
    |
169 | ...                   if *(primes.ptr).offset(j as isize) > mx {
    |                                               ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
169 |                             if *(primes.ptr).offset(isize::try_from(j)) > mx {
    |                                                     ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:169:53
    |
169 | ...                   if *(primes.ptr).offset(j as isize) > mx {
    |                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:172:32
    |
172 | ...                   if z % *(primes.ptr).offset(j as isize) == 0 {
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:172:32
    |
172 | ...                   if z % *(primes.ptr).offset(j as isize) == 0 {
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:172:57
    |
172 | ...                   if z % *(primes.ptr).offset(j as isize) == 0 {
    |                                                   ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
172 |                             if z % *(primes.ptr).offset(isize::try_from(j)) == 0 {
    |                                                         ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:57
    |
172 | ...                   if z % *(primes.ptr).offset(j as isize) == 0 {
    |                                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:177:33
    |
177 | ...                   j;
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:187:24
    |
187 |                     if c % 10_i32 == 0_i32 {
    |                        ^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: equal expressions as operands to `!=`
   --> src/main.rs:191:36
    |
191 |                         showEach = 0_i32 != 0_i32;
    |                                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:195:20
    |
195 |                 if c % little == 0_i32 {
    |                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:195:20
    |
195 |                 if c % little == 0_i32 {
    |                    ^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
   --> src/main.rs:203:13
    |
203 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:157:21
    |
157 |                     j;
    |                     ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:177:33
    |
177 | ...                   j;
    |                       ^^

warning: path statement with no effect
   --> src/main.rs:203:13
    |
203 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 59 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 59 warnings (59 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.83s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/cumulative_standard_deviation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:62:35
   |
62 |     var = (*so).sum2 / num - mean.wrapping_mul(mean);
   |                                   ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:81:23
   |
81 |     (*so).sum2 += v_0.wrapping_mul(v_0);
   |                       ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 2 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 2 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/currying)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:17:1
   |
17 | / pub struct __va_list_tag {
18 | |     pub gp_offset: u32,
19 | |     pub fp_offset: u32,
20 | |     pub overflow_arg_area: *mut libc::c_void,
21 | |     pub reg_save_area: *mut libc::c_void,
22 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
17 + #[non_exhaustive]
18 | pub struct __va_list_tag {
   |

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:27:16
   |
27 |         return i64::from(n) * factorial(n.wrapping_sub(1));
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: unsafe function's docs miss `# Safety` section
  --> src/main.rs:34:1
   |
34 | pub unsafe extern "C" fn sumOfFactorials(mut num: i32, mut args: ...) -> i64 {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc
   = note: `#[warn(clippy::missing_safety_doc)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:44:9
   |
44 |         sum += factorial(vaList.arg::<i32>());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 5 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 5 warnings (5 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.85s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/cusip)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/cut_a_rectangle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/damm_algorithm)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:33:48
   |
33 |             interim = table[interim as usize][*input.offset(i as isize) as usize];
   |                                                ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:29
   |
33 |             interim = table[interim as usize][*input.offset(i as isize) as usize];
   |                             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:47
   |
33 |             interim = table[interim as usize][*input.offset(i as isize) as usize];
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:33:61
   |
33 |             interim = table[interim as usize][*input.offset(i as isize) as usize];
   |                                                             ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
33 |             interim = table[interim as usize][*input.offset(isize::try_from(i)) as usize];
   |                                                             ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:33:61
   |
33 |             interim = table[interim as usize][*input.offset(i as isize) as usize];
   |                                                             ^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:61
   |
33 |             interim = table[interim as usize][*input.offset(i as isize) as usize];
   |                                                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:35:13
   |
35 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:13
   |
46 |             (b"Checksum correct\0" as *const u8).cast::<i8>()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:13
   |
48 |             (b"Checksum incorrect\0" as *const u8).cast::<i8>()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:35:13
   |
35 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

       Fixed src/main.rs (11 fixes)
warning: `c2rust_out` (bin "main" test) generated 11 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 11 warnings (11 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.94s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/date_format)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:35:5
   |
35 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:29:25
   |
29 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/days_between_dates)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/days_of_the_week)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (17 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:19:18
   |
19 |     adjustment = (14_i32 - month) / 12_i32;
   |                  ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:20:10
   |
20 |     mm = month + 12_i32 * adjustment.wrapping_sub(2);
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:21:10
   |
21 |     yy = year - adjustment;
   |          ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:22:5
   |
22 | /     (day + (13_i32 * mm.wrapping_sub(1)) / 5_i32 + yy + yy / 4_i32 - yy / 100_i32 + yy.wrapping_div(400))
23 | |         % 7_i32
   | |_______________^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:22:5
   |
22 |     (day + (13_i32 * mm.wrapping_sub(1)) / 5_i32 + yy + yy / 4_i32 - yy / 100_i32 + yy.wrapping_div(400))
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:24
   |
33 |                 printf((b"%04d-12-25\n\0" as *const u8).cast::<i8>(), y);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:36:13
   |
36 |             y;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:36:13
   |
36 |             y;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 9 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 9 warnings (9 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.56s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/deal_cards_for_freecell)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: default numeric fallback might occur
  --> src/main.rs:25:24
   |
25 | static mut seed: i32 = 1;
   |                        ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback
   = note: requested on the command line with `-W clippy::default-numeric-fallback`

warning: unneeded `return` statement
  --> src/main.rs:31:9
   |
31 |         return seed >> 16;
   |         ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = note: `#[warn(clippy::needless_return)]` on by default
help: remove `return`
   |
31 -         return seed >> 16;
31 +         seed >> 16
   |

warning: default numeric fallback might occur
  --> src/main.rs:30:25
   |
30 |         seed = ((seed * 214013 + 2531011i32) as u32 & (1u32 << 31i32).wrapping_sub(1)) as i32;
   |                         ^^^^^^ help: consider adding suffix: `214_013_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:31:24
   |
31 |         return seed >> 16;
   |                        ^^ help: consider adding suffix: `16_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `u32` to `i32` may wrap around the value
  --> src/main.rs:30:16
   |
30 |         seed = ((seed * 214013 + 2531011i32) as u32 & (1u32 << 31i32).wrapping_sub(1)) as i32;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:16
   |
30 |         seed = ((seed * 214013 + 2531011i32) as u32 & (1u32 << 31i32).wrapping_sub(1)) as i32;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:30:17
   |
30 |         seed = ((seed * 214013 + 2531011i32) as u32 & (1u32 << 31i32).wrapping_sub(1)) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:17
   |
30 |         seed = ((seed * 214013 + 2531011i32) as u32 & (1u32 << 31i32).wrapping_sub(1)) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:30:17
   |
30 |         seed = ((seed * 214013 + 2531011i32) as u32 & (1u32 << 31i32).wrapping_sub(1)) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:52:28
   |
52 |                 32 - (1 + *c) % 4 / 2,
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:53:27
   |
53 |                 s_suits[(*c % 4i32) as usize],
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:54:26
   |
54 |                 s_nums[(*c / 4i32) as usize]
   |                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:60:17
   |
60 |             c = c.offset(1);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: default numeric fallback might occur
  --> src/main.rs:48:13
   |
48 |         i = 0;
   |             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:49:19
   |
49 |         while i < 52 {
   |                   ^^ help: consider adding suffix: `52_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:52:17
   |
52 |                 32 - (1 + *c) % 4 / 2,
   |                 ^^ help: consider adding suffix: `32_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:52:23
   |
52 |                 32 - (1 + *c) % 4 / 2,
   |                       ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:52:33
   |
52 |                 32 - (1 + *c) % 4 / 2,
   |                                 ^ help: consider adding suffix: `4_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:52:37
   |
52 |                 32 - (1 + *c) % 4 / 2,
   |                                     ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:57:20
   |
57 |             if i % 8 == 0 || i == 52 {
   |                    ^ help: consider adding suffix: `8_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:57:25
   |
57 |             if i % 8 == 0 || i == 52 {
   |                         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:57:35
   |
57 |             if i % 8 == 0 || i == 52 {
   |                                   ^^ help: consider adding suffix: `52_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:52:17
   |
52 |                 32 - (1 + *c) % 4 / 2,
   |                 ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:52:22
   |
52 |                 32 - (1 + *c) % 4 / 2,
   |                      ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:53:25
   |
53 |                 s_suits[(*c % 4i32) as usize],
   |                         ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:25
   |
53 |                 s_suits[(*c % 4i32) as usize],
   |                         ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:53:25
   |
53 |                 s_suits[(*c % 4i32) as usize],
   |                         ^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:54:24
   |
54 |                 s_nums[(*c / 4i32) as usize]
   |                        ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:24
   |
54 |                 s_nums[(*c / 4i32) as usize]
   |                        ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:57:16
   |
57 |             if i % 8 == 0 || i == 52 {
   |                ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:30
   |
58 |                 print!("{}", '\n' as i32);
   |                              ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:61:13
   |
61 |             c;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:75:14
   |
75 |             *t.offset(i as isize) = 51 - i;
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:82:18
   |
82 |             s = *t.offset(i as isize);
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:38
   |
83 |             *t.offset(i as isize) = *t.offset(j as isize);
   |                                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:14
   |
83 |             *t.offset(i as isize) = *t.offset(j as isize);
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:84:14
   |
84 |             *t.offset(j as isize) = s;
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: default numeric fallback might occur
  --> src/main.rs:73:13
   |
73 |         i = 0;
   |             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:74:19
   |
74 |         while i < 52 {
   |                   ^^ help: consider adding suffix: `52_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:75:37
   |
75 |             *t.offset(i as isize) = 51 - i;
   |                                     ^^ help: consider adding suffix: `51_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:79:13
   |
79 |         i = 0;
   |             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:80:19
   |
80 |         while i < 51 {
   |                   ^^ help: consider adding suffix: `51_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:81:17
   |
81 |             j = 51 - rnd() % (52 - i);
   |                 ^^ help: consider adding suffix: `51_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:81:31
   |
81 |             j = 51 - rnd() % (52 - i);
   |                               ^^ help: consider adding suffix: `52_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:75:37
   |
75 |             *t.offset(i as isize) = 51 - i;
   |                                     ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:23
   |
75 |             *t.offset(i as isize) = 51 - i;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:81:17
   |
81 |             j = 51 - rnd() % (52 - i);
   |                 ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:81:22
   |
81 |             j = 51 - rnd() % (52 - i);
   |                      ^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:27
   |
82 |             s = *t.offset(i as isize);
   |                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:47
   |
83 |             *t.offset(i as isize) = *t.offset(j as isize);
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:23
   |
83 |             *t.offset(i as isize) = *t.offset(j as isize);
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:23
   |
84 |             *t.offset(j as isize) = s;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:86:13
   |
86 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unneeded `return` statement
   --> src/main.rs:106:9
    |
106 |         return 0;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
106 -         return 0;
106 +         0
    |

warning: default numeric fallback might occur
  --> src/main.rs:96:16
   |
96 |         if c < 2 || {
   |                ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/main.rs:98:18
   |
98 |             s <= 0
   |                  ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/main.rs:100:17
    |
100 |             s = 11982;
    |                 ^^^^^ help: consider adding suffix: `11_982_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/main.rs:106:16
    |
106 |         return 0;
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting integer literal to `isize` is unnecessary
  --> src/main.rs:97:32
   |
97 |             s = atoi(*v.offset(1 as isize));
   |                                ^^^^^^^^^^ help: try: `1_isize`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast
   = note: `#[warn(clippy::unnecessary_cast)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:32
   |
97 |             s = atoi(*v.offset(1 as isize));
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `as` casting between raw pointers without changing its mutability
   --> src/main.rs:102:22
    |
102 |         setlocale(6, b"\0" as *const u8 as *const i8);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr
    = note: requested on the command line with `-W clippy::ptr-as-ptr`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:22
    |
102 |         setlocale(6, b"\0" as *const u8 as *const i8);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:22
    |
102 |         setlocale(6, b"\0" as *const u8 as *const i8);
    |                      ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using `print!()` with a format string that ends in a single newline
   --> src/main.rs:104:9
    |
104 |         print!("Hand {}\n", s);
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_with_newline
    = note: `#[warn(clippy::print_with_newline)]` on by default
help: use `println!` instead
    |
104 -         print!("Hand {}\n", s);
104 +         println!("Hand {}", s);
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:110:1
    |
110 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:114:13
    |
114 | /             (::std::ffi::CString::new(arg))
115 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:114:13
    |
114 | /             (::std::ffi::CString::new(arg))
115 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting to the same type is unnecessary (`i32` -> `i32`)
   --> src/main.rs:120:26
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:26
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:120:33
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
120 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:120:33
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:33
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:120:33
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `as` casting between raw pointers without changing its mutability
   --> src/main.rs:120:58
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `args.as_mut_ptr().cast::<*mut i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting raw pointers to the same type and constness is unnecessary (`*mut *mut i8` -> `*mut *mut i8`)
   --> src/main.rs:120:58
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.as_mut_ptr()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:58
    |
120 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr() as *mut *mut i8) as i32);
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

error[E0080]: could not evaluate static initializer
  --> src/main.rs:18:5
   |
18 |     *::core::mem::transmute::<&[u8; 20], &mut [i32; 5]>(b"c&\0\0f&\0\0e&\0\0`&\0\0\0\0\0\0")
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ accessing memory with alignment 1, but alignment 4 is required

error[E0080]: could not evaluate static initializer
  --> src/main.rs:23:5
   |
23 |     * :: core :: mem :: transmute :: < & [u8; 56], & mut [i32; 14], > (b"A\0\0\x002\0\0\x003\0\0\x004\0\0\x005\0\0\x006\0\0\x007\0\0\08\0\0\09\0\0\0T\0\0\0J\0\0\0Q\0\0\0K\0\0\0\0\0\0\0",)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ accessing memory with alignment 1, but alignment 4 is required

warning: path statement with no effect
  --> src/main.rs:61:13
   |
61 |             c;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:86:13
   |
86 |             i;
   |             ^^

For more information about this error, try `rustc --explain E0080`.
warning: `c2rust_out` (bin "main" test) generated 81 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 2 previous errors; 81 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 80 warnings (80 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 2 previous errors; 80 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/deepcopy)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:15:1
   |
15 | / pub struct layer1 {
16 | |     pub a: i32,
17 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
15 + #[non_exhaustive]
16 | pub struct layer1 {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:21:1
   |
21 | / pub struct layer2 {
22 | |     pub l1: layer1,
23 | |     pub b: libc::c_float,
24 | |     pub c: libc::c_float,
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
21 + #[non_exhaustive]
22 | pub struct layer2 {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:29:1
   |
29 | / pub struct layer3 {
30 | |     pub l2: layer2,
31 | |     pub l1: layer1,
32 | |     pub d: i32,
33 | |     pub e: i32,
34 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
29 + #[non_exhaustive]
30 | pub struct layer3 {
   |

warning: casting `i32` to `f32` causes a loss of precision (`i32` is 32 bits wide, but `f32`'s mantissa is only 23 bits wide)
  --> src/main.rs:68:18
   |
68 |     cake1.l2.b = 4_i32 as libc::c_float;
   |                  ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:18
   |
68 |     cake1.l2.b = 4_i32 as libc::c_float;
   |                  ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:73:5
   |
73 |     cake2.l2.b += cake2.l2.l1.a as libc::c_float;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `i32` to `f32` causes a loss of precision (`i32` is 32 bits wide, but `f32`'s mantissa is only 23 bits wide)
  --> src/main.rs:73:19
   |
73 |     cake2.l2.b += cake2.l2.l1.a as libc::c_float;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:19
   |
73 |     cake2.l2.b += cake2.l2.l1.a as libc::c_float;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 9 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 9 warnings (9 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.19s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/delegates)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:22:5
   |
22 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unnecessary parentheses around `match` scrutinee expression
  --> src/main.rs:58:15
   |
58 |         match (Some(((*dl).operation).expect("non-null function pointer"))) {
   |               ^                                                           ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
58 -         match (Some(((*dl).operation).expect("non-null function pointer"))) {
58 +         match Some(((*dl).operation).expect("non-null function pointer")) {
   |

warning: unused variable: `p1`
  --> src/main.rs:68:39
   |
68 | pub extern "C" fn defaultResponse(mut p1: i32) -> *const i8 {
   |                                       ^^ help: if this is intentional, prefix it with an underscore: `_p1`
   |
   = note: `#[warn(unused_variables)]` on by default

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:57:15
   |
57 |     return if ((*dl).operation).is_some() {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:58:21
   |
58 |         match (Some(((*dl).operation).expect("non-null function pointer"))) {
   |                     ^^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: call to unsafe function is unsafe and requires unsafe function or block
  --> src/main.rs:59:29
   |
59 |             Some(temp_m) => temp_m(p1),
   |                             ^^^^^^^^^^ call to unsafe function
   |
   = note: consult the function's documentation for information on how to avoid undefined behavior

warning: unnecessary `unsafe` block
   --> src/main.rs:130:5
    |
130 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

For more information about this error, try `rustc --explain E0133`.
warning: `c2rust_out` (bin "main" test) generated 5 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 3 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 5 warnings (5 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 3 previous errors; 5 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/department_number)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/deranged_anagrams)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (60 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:35:1
   |
35 | / pub struct timespec {
36 | |     pub tv_sec: i64,
37 | |     pub tv_nsec: i64,
38 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
35 + #[non_exhaustive]
36 | pub struct timespec {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:42:1
   |
42 | / pub struct stat {
43 | |     pub st_dev: u64,
44 | |     pub st_ino: u64,
45 | |     pub st_nlink: u64,
...  |
57 | |     pub __glibc_reserved: [i64; 3],
58 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
42 + #[non_exhaustive]
43 | pub struct stat {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:62:1
   |
62 | / pub struct word {
63 | |     pub w: *const i8,
64 | |     pub next: *mut word,
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
62 + #[non_exhaustive]
63 | pub struct word {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:34
   |
73 | pub static mut freq: *const i8 = (b"zqxjkvbpygfwmucldrhsnioate\0" as *const u8).cast::<i8>();
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:82:16
   |
82 |         while *s1.offset(i as isize) != 0 {
   |                ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:27
   |
83 |             if i32::from(*s1.offset(i as isize)) == i32::from(*s2.offset(i as isize)) {
   |                           ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:64
   |
83 |             if i32::from(*s1.offset(i as isize)) == i32::from(*s2.offset(i as isize)) {
   |                                                                ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:26
   |
82 |         while *s1.offset(i as isize) != 0 {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:37
   |
83 |             if i32::from(*s1.offset(i as isize)) == i32::from(*s2.offset(i as isize)) {
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:74
   |
83 |             if i32::from(*s1.offset(i as isize)) == i32::from(*s2.offset(i as isize)) {
   |                                                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:87:13
   |
87 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:102:16
    |
102 |         while *s.offset(i as isize) != 0 {
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:103:27
    |
103 |             if i32::from(*s.offset(i as isize)) < 'a' as i32
    |                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:104:31
    |
104 |                 || i32::from(*s.offset(i as isize)) > 'z' as i32
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:110:33
    |
110 |             let fresh0 = &mut (*c.offset(char_to_idx[*s.offset(i as isize) as u8 as usize] as isize));
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:110:55
    |
110 |             let fresh0 = &mut (*c.offset(char_to_idx[*s.offset(i as isize) as u8 as usize] as isize));
    |                                                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:25
    |
102 |         while *s.offset(i as isize) != 0 {
    |                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:36
    |
103 |             if i32::from(*s.offset(i as isize)) < 'a' as i32
    |                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:51
    |
103 |             if i32::from(*s.offset(i as isize)) < 'a' as i32
    |                                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:40
    |
104 |                 || i32::from(*s.offset(i as isize)) > 'z' as i32
    |                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:55
    |
104 |                 || i32::from(*s.offset(i as isize)) > 'z' as i32
    |                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:109:13
    |
109 |             len;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:42
    |
110 |             let fresh0 = &mut (*c.offset(char_to_idx[*s.offset(i as isize) as u8 as usize] as isize));
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:54
    |
110 |             let fresh0 = &mut (*c.offset(char_to_idx[*s.offset(i as isize) as u8 as usize] as isize));
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/main.rs:110:54
    |
110 |             let fresh0 = &mut (*c.offset(char_to_idx[*s.offset(i as isize) as u8 as usize] as isize));
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:54
    |
110 |             let fresh0 = &mut (*c.offset(char_to_idx[*s.offset(i as isize) as u8 as usize] as isize));
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:64
    |
110 |             let fresh0 = &mut (*c.offset(char_to_idx[*s.offset(i as isize) as u8 as usize] as isize));
    |                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:112:13
    |
112 |             *fresh0;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:114:13
    |
114 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:130:19
    |
130 |             n = (*root).down[*cnt.offset(i as isize) as usize];
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:130:31
    |
130 |             n = (*root).down[*cnt.offset(i as isize) as usize];
    |                               ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:133:19
    |
133 |                 (*root).down[*cnt.offset(i as isize) as usize] = n;
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:133:31
    |
133 |                 (*root).down[*cnt.offset(i as isize) as usize] = n;
    |                               ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:23
    |
141 |         (*w).next = (*root).list[*cnt.offset(25_isize) as usize];
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:35
    |
141 |         (*w).next = (*root).list[*cnt.offset(25_isize) as usize];
    |                                   ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:142:11
    |
142 |         (*root).list[*cnt.offset(25_isize) as usize] = w;
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:142:23
    |
142 |         (*root).list[*cnt.offset(25_isize) as usize] = w;
    |                       ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:30
    |
130 |             n = (*root).down[*cnt.offset(i as isize) as usize];
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:42
    |
130 |             n = (*root).down[*cnt.offset(i as isize) as usize];
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:133:30
    |
133 |                 (*root).down[*cnt.offset(i as isize) as usize] = n;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:133:42
    |
133 |                 (*root).down[*cnt.offset(i as isize) as usize] = n;
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:136:13
    |
136 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:34
    |
141 |         (*w).next = (*root).list[*cnt.offset(25_isize) as usize];
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:142:22
    |
142 |         (*root).list[*cnt.offset(25_isize) as usize] = w;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:188:17
    |
188 |                 (b"unixdict.txt\0" as *const u8).cast::<i8>()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:17
    |
190 |                 *v.offset(1_isize) as *const i8
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:197:24
    |
197 |         words = malloc(st.st_size as u64).cast::<i8>();
    |                        ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:197:24
    |
197 |         words = malloc(st.st_size as u64).cast::<i8>();
    |                        ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:198:48
    |
198 |         read(fd, words.cast::<libc::c_void>(), st.st_size as u64);
    |                                                ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:198:48
    |
198 |         read(fd, words.cast::<libc::c_void>(), st.st_size as u64);
    |                                                ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:219:28
    |
219 |         while *freq.offset(i as isize) != 0 {
    |                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:220:25
    |
220 |             char_to_idx[*freq.offset(i as isize) as u8 as usize] = i;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/main.rs:220:25
    |
220 |             char_to_idx[*freq.offset(i as isize) as u8 as usize] = i;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:220:25
    |
220 |             char_to_idx[*freq.offset(i as isize) as u8 as usize] = i;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:220:38
    |
220 |             char_to_idx[*freq.offset(i as isize) as u8 as usize] = i;
    |                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:222:13
    |
222 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:227:40
    |
227 |             if i32::from(*words.offset(i as isize)) == '\n' as i32 {
    |                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:227:56
    |
227 |             if i32::from(*words.offset(i as isize)) == '\n' as i32 {
    |                                                        ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:228:45
    |
228 |                 *words.offset(i as isize) = '\0' as i8;
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:228:31
    |
228 |                 *words.offset(i as isize) = '\0' as i8;
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:229:20
    |
229 |                 if i - j > best_len {
    |                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:230:48
    |
230 |                     count_letters(words.offset(j as isize), cnt.as_mut_ptr());
    |                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:232:56
    |
232 |                         insert(&mut root, words.offset(j as isize), cnt.as_mut_ptr());
    |                                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:234:36
    |
234 |                         best_len = i - j;
    |                                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:235:43
    |
235 |                         b1 = words.offset(j as isize);
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:243:13
    |
243 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:248:40
    |
248 |                 build_str_from_raw_ptr(b1 as *mut u8),
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:249:40
    |
249 |                 build_str_from_raw_ptr(b2 as *mut u8)
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `expect()` on a `Result` value
   --> src/main.rs:260:13
    |
260 | /             (::std::ffi::CString::new(arg))
261 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:266:33
    |
266 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
266 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:266:33
    |
266 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:266:33
    |
266 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:266:33
    |
266 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:87:13
   |
87 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:109:13
    |
109 |             len;
    |             ^^^^

warning: unused unary operation that must be used
   --> src/main.rs:112:13
    |
112 |             *fresh0;
    |             ^^^^^^^ the unary operation produces a value
    |
    = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
    |
112 |             let _ = *fresh0;
    |             +++++++

warning: path statement with no effect
   --> src/main.rs:114:13
    |
114 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:136:13
    |
136 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:222:13
    |
222 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:243:13
    |
243 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 81 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:256:1
    |
256 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:260:13
    |
260 | /             (::std::ffi::CString::new(arg))
261 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 82 warnings (81 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.01s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/determine_if_a_string_has_all_same_characters)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (43 fixes)
warning: this `if` has the same condition as a previous `if`
  --> src/main.rs:51:23
   |
51 |             } else if argc == 1_i32 {
   |                       ^^^^^^^^^^^^^
   |
note: same as this
  --> src/main.rs:40:16
   |
40 |             if argc == 1_i32 {
   |                ^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ifs_same_cond
   = note: `#[warn(clippy::ifs_same_cond)]` on by default

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:48:25
   |
48 |                         strlen(*argv.offset(1_isize)) as i32
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
48 |                         i32::try_from(strlen(*argv.offset(1_isize)))
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:25
   |
48 |                         strlen(*argv.offset(1_isize)) as i32
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:44
   |
54 |                     build_str_from_raw_ptr(*argv.offset(1_isize) as *const i8 as *mut u8),
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:44
   |
54 |                     build_str_from_raw_ptr(*argv.offset(1_isize) as *const i8 as *mut u8),
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:44
   |
60 |                     build_str_from_raw_ptr(*argv.offset(1_isize) as *const i8 as *mut u8),
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:44
   |
60 |                     build_str_from_raw_ptr(*argv.offset(1_isize) as *const i8 as *mut u8),
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:61:21
   |
61 |                     strlen(*argv.offset(1_isize)) as i32
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
61 |                     i32::try_from(strlen(*argv.offset(1_isize)))
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:21
   |
61 |                     strlen(*argv.offset(1_isize)) as i32
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:67:15
   |
67 |         len = strlen(*argv.offset(1_isize)) as i32;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
67 |         len = i32::try_from(strlen(*argv.offset(1_isize)));
   |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:15
   |
67 |         len = strlen(*argv.offset(1_isize)) as i32;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:58
   |
70 |             if i32::from(*(*argv.offset(1_isize)).offset(i as isize)) != i32::from(reference) {
   |                                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:242
   |
71 | ...::<u8>()), len, i32::from(* (* argv.offset (1_isize)).offset (i as isize)), i32::from(*
   |                                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:53
   |
72 |                   (* argv.offset (1_isize)).offset (i as isize)), i + 1_i32);
   |                                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:72:67
   |
72 |                   (* argv.offset (1_isize)).offset (i as isize)), i + 1_i32);
   |                                                                   ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:76:13
   |
76 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:87:1
   |
87 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:91:13
   |
91 | /             (::std::ffi::CString::new(arg))
92 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:91:13
   |
91 | /             (::std::ffi::CString::new(arg))
92 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:97:33
   |
97 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
97 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:97:33
   |
97 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:33
   |
97 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:97:33
   |
97 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:76:13
   |
76 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 24 warnings (10 duplicates)
warning: `c2rust_out` (bin "main") generated 23 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.76s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/determine_if_a_string_has_all_unique_characters)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:22:5
   |
22 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: this `else { if .. }` block can be collapsed
   --> src/main.rs:153:20
    |
153 |               } else {
    |  ____________________^
154 | |                 if argc == 1 {
155 | |                     print!(
156 | |                         "\"{}\" - Length {} - Contains only unique characters.\n",
...   |
166 | |                 }
167 | |             };
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
    = note: `#[warn(clippy::collapsible_else_if)]` on by default
help: collapse nested if block
    |
153 ~             } else if argc == 1 {
154 +                 print!(
155 +                     "\"{}\" - Length {} - Contains only unique characters.\n",
156 +                     build_str_from_raw_ptr(*argv.offset(1 as isize) as *const i8 as *mut u8),
157 +                     0
158 +                 )
159 +             } else {
160 +                 print!(
161 +                     "\"{}\" - Length {} - Contains only unique characters.\n",
162 +                     build_str_from_raw_ptr(*argv.offset(1 as isize) as *const i8 as *mut u8),
163 +                     1
164 +                 )
165 ~             };
    |

error[E0277]: no implementation for `{integer} & &bool`
  --> src/main.rs:83:45
   |
83 |                 if letterOccurs as i32 == 0 & &((*letterIterator).next).is_null() {
   |                                             ^ no implementation for `{integer} & &bool`
   |
   = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `{integer}`
   = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
             <&'a i128 as std::ops::BitAnd<i128>>
             <&'a i16 as std::ops::BitAnd<i16>>
             <&'a i32 as std::ops::BitAnd<i32>>
             <&'a i64 as std::ops::BitAnd<i64>>
             <&'a i8 as std::ops::BitAnd<i8>>
             <&'a isize as std::ops::BitAnd<isize>>
             <&'a u128 as std::ops::BitAnd<u128>>
             <&'a u16 as std::ops::BitAnd<u16>>
           and 40 others

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 3 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/determine_if_a_string_is_collapsible)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/determine_if_a_string_is_squeezable)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/determine_if_only_one_instance_is_running)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (25 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:177:5
    |
177 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:37:1
   |
37 | / pub struct flock {
38 | |     pub l_type: i16,
39 | |     pub l_whence: i16,
40 | |     pub l_start: i64,
41 | |     pub l_len: i64,
42 | |     pub l_pid: i32,
43 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
37 + #[non_exhaustive]
38 | pub struct flock {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:47:1
   |
47 | / pub struct _IO_FILE {
48 | |     pub _flags: i32,
49 | |     pub _IO_read_ptr: *mut i8,
50 | |     pub _IO_read_end: *mut i8,
...  |
76 | |     pub _unused2: [i8; 20],
77 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
47 + #[non_exhaustive]
48 | pub struct _IO_FILE {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:84:16
   |
84 |         perror(message);
   |                ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:32
   |
89 | static mut ooi_path: *mut i8 = 0 as *const i8 as *mut i8;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:32
   |
89 | static mut ooi_path: *mut i8 = 0 as *const i8 as *mut i8;
   |                                ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:22
    |
112 |         dir = getenv((b"HOME\0" as *const u8).cast::<i8>());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:64
    |
113 |         if dir.is_null() || i32::from(*dir.offset(0_isize)) != '/' as i32 {
    |                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:19
    |
114 |             fputs((b"Bad home directory.\n\0" as *const u8).cast::<i8>(), stderr);
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:18
    |
121 |             fail((b"malloc\0" as *const u8).cast::<i8>());
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:125:13
    |
125 |             dir as *const libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:129:29
    |
129 |             ooi_path.offset(dirlen as isize).cast::<libc::c_void>(),
    |                             ^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
129 |             ooi_path.offset(isize::try_from(dirlen)).cast::<libc::c_void>(),
    |                             ~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:129:29
    |
129 |             ooi_path.offset(dirlen as isize).cast::<libc::c_void>(),
    |                             ^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:129:29
    |
129 |             ooi_path.offset(dirlen as isize).cast::<libc::c_void>(),
    |                             ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:13
    |
130 |             (b"/rosetta-code-lock\0" as *const u8).cast::<i8>().cast::<libc::c_void>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:25
    |
141 |         if fcntl(fd, 6, &mut fl as *mut flock) < 0_i32 {
    |                         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:143:17
    |
143 |                 (b"Another instance of this program is running.\n\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:149:21
    |
149 |         atexit(Some(ooi_unlink as unsafe extern "C" fn() -> ()));
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:160:16
    |
160 |             if i % 5_i32 == 1_i32 {
    |                ^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: statement with no effect
   --> src/main.rs:168:13
    |
168 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:170:14
    |
170 |         puts((b"Fin!\0" as *const u8).cast::<i8>());
    |              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
   --> src/main.rs:168:13
    |
168 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 23 warnings (23 duplicates)
warning: `c2rust_out` (bin "main" test) generated 23 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.81s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/dice_game_probabilities)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (16 fixes)
warning: statement with no effect
  --> src/main.rs:19:9
   |
19 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:34:33
   |
34 |             let fresh0 = &mut (*counts.offset(s as isize));
   |                                 ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:34:47
   |
34 |             let fresh0 = &mut (*counts.offset(s as isize));
   |                                               ^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:47
   |
34 |             let fresh0 = &mut (*counts.offset(s as isize));
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:36:13
   |
36 |             *fresh0;
   |             ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:43:13
   |
43 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:15
   |
56 |     let vla = len1 as usize;
   |               ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:62:37
   |
62 |             *C1.as_mut_ptr().offset(i as isize) = 0;
   |                                     ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:37
   |
62 |             *C1.as_mut_ptr().offset(i as isize) = 0;
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:64:13
   |
64 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:17
   |
69 |     let vla_0 = len2 as usize;
   |                 ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:75:37
   |
75 |             *C2.as_mut_ptr().offset(j as isize) = 0;
   |                                     ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:37
   |
75 |             *C2.as_mut_ptr().offset(j as isize) = 0;
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:77:13
   |
77 |             j;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/main.rs:81:20
   |
81 |     let p12: f64 = (ipow(n_sides1, n_dice1)).wrapping_mul(ipow(n_sides2, n_dice2)) as f64;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:20
   |
81 |     let p12: f64 = (ipow(n_sides1, n_dice1)).wrapping_mul(ipow(n_sides2, n_dice2)) as f64;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:89:17
   |
89 | /                 tot += f64::from(*C1.as_mut_ptr().offset(i_0 as isize))
90 | |                     * f64::from(*C2.as_mut_ptr().offset(j_0 as isize))
91 | |                     / p12;
   | |_________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:89:58
   |
89 |                 tot += f64::from(*C1.as_mut_ptr().offset(i_0 as isize))
   |                                                          ^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:58
   |
89 |                 tot += f64::from(*C1.as_mut_ptr().offset(i_0 as isize))
   |                                                          ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:90:57
   |
90 |                     * f64::from(*C2.as_mut_ptr().offset(j_0 as isize))
   |                                                         ^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:57
   |
90 |                     * f64::from(*C2.as_mut_ptr().offset(j_0 as isize))
   |                                                         ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:93:17
   |
93 |                 j_0;
   |                 ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:96:13
   |
96 |             i_0;
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:19:9
   |
19 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: unused unary operation that must be used
  --> src/main.rs:36:13
   |
36 |             *fresh0;
   |             ^^^^^^^ the unary operation produces a value
   |
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
36 |             let _ = *fresh0;
   |             +++++++

warning: path statement with no effect
  --> src/main.rs:43:13
   |
43 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:64:13
   |
64 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:77:13
   |
77 |             j;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:93:17
   |
93 |                 j_0;
   |                 ^^^^

warning: path statement with no effect
  --> src/main.rs:96:13
   |
96 |             i_0;
   |             ^^^^

warning: `c2rust_out` (bin "main") generated 31 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 31 warnings (31 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.81s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/digital_root)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: no implementation for `{integer} & &bool`
  --> src/main.rs:30:18
   |
30 |             != 0 & &{
   |                  ^ no implementation for `{integer} & &bool`
   |
   = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `{integer}`
   = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
             <&'a i128 as std::ops::BitAnd<i128>>
             <&'a i16 as std::ops::BitAnd<i16>>
             <&'a i32 as std::ops::BitAnd<i32>>
             <&'a i64 as std::ops::BitAnd<i64>>
             <&'a i8 as std::ops::BitAnd<i8>>
             <&'a isize as std::ops::BitAnd<isize>>
             <&'a u128 as std::ops::BitAnd<u128>>
             <&'a u16 as std::ops::BitAnd<u16>>
           and 40 others

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/dining_philosophers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (57 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:42:1
   |
42 | / pub struct __va_list_tag {
43 | |     pub gp_offset: u32,
44 | |     pub fp_offset: u32,
45 | |     pub overflow_arg_area: *mut libc::c_void,
46 | |     pub reg_save_area: *mut libc::c_void,
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
42 + #[non_exhaustive]
43 | pub struct __va_list_tag {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:51:1
   |
51 | / pub struct __pthread_internal_list {
52 | |     pub __prev: *mut __pthread_internal_list,
53 | |     pub __next: *mut __pthread_internal_list,
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
51 + #[non_exhaustive]
52 | pub struct __pthread_internal_list {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:59:1
   |
59 | / pub struct __pthread_mutex_s {
60 | |     pub __lock: i32,
61 | |     pub __count: u32,
62 | |     pub __owner: i32,
...  |
67 | |     pub __list: __pthread_list_t,
68 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
59 + #[non_exhaustive]
60 | pub struct __pthread_mutex_s {
   |

warning: exported structs should not be exhaustive
   --> src/main.rs:100:1
    |
100 | / pub struct _IO_FILE {
101 | |     pub _flags: i32,
102 | |     pub _IO_read_ptr: *mut i8,
103 | |     pub _IO_read_end: *mut i8,
...   |
129 | |     pub _unused2: [i8; 20],
130 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
100 + #[non_exhaustive]
101 | pub struct _IO_FILE {
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:5
    |
135 |     (b"Aristotle\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:5
    |
136 |     (b"Kant\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:5
    |
137 |     (b"Spinoza\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:138:5
    |
138 |     (b"Marx\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:139:5
    |
139 |     (b"Russell\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:21
    |
152 |             __prev: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:21
    |
152 |             __prev: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:21
    |
153 |             __next: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:21
    |
153 |             __next: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:159:5
    |
159 |     (b"Spaghetti!\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:5
    |
160 |     (b"Life\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:5
    |
161 |     (b"Universe\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:5
    |
162 |     (b"Everything\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:163:5
    |
163 |     (b"Bathroom\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: unsafe function's docs miss `# Safety` section
   --> src/main.rs:167:1
    |
167 | pub unsafe extern "C" fn print(mut y: i32, mut x: i32, mut fmt: *const i8, mut args: ...) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc
    = note: `#[warn(clippy::missing_safety_doc)]` on by default

warning: casting `u32` to `i32` may wrap around the value
   --> src/main.rs:176:25
    |
176 |                 __kind: PTHREAD_MUTEX_TIMED_NP as i32,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:25
    |
176 |                 __kind: PTHREAD_MUTEX_TIMED_NP as i32,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:182:33
    |
182 |                         __prev: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:182:33
    |
182 |                         __prev: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:183:33
    |
183 |                         __next: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:183:33
    |
183 |                         __next: 0 as *const __pthread_internal_list as *mut __pthread_internal_list,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:192:27
    |
192 |     print!("\x1B[{};{}H", y + 1_i32, x);
    |                           ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:206:31
    |
206 |     f[(id & 1i32) as usize] = (id.wrapping_add(1)) % 5_i32;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:206:7
    |
206 |     f[(id & 1i32) as usize] = (id.wrapping_add(1)) % 5_i32;
    |       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:206:7
    |
206 |     f[(id & 1i32) as usize] = (id.wrapping_add(1)) % 5_i32;
    |       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:209:23
    |
209 |         print(id, 12, (b"\x1B[K\0" as *const u8).cast::<i8>());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:213:13
    |
213 |             (b"..oO (forks, need forks)\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:220:58
    |
220 |             pthread_mutex_lock(forks.as_mut_ptr().offset(f[i as usize] as isize));
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:220:60
    |
220 |             pthread_mutex_lock(forks.as_mut_ptr().offset(f[i as usize] as isize));
    |                                                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:220:60
    |
220 |             pthread_mutex_lock(forks.as_mut_ptr().offset(f[i as usize] as isize));
    |                                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:222:31
    |
222 |                 print(id, 12, (b"\x1B[K\0" as *const u8).cast::<i8>());
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:226:17
    |
226 |                 12 + i32::from(f[i as usize] != id) * 6,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:226:34
    |
226 |                 12 + i32::from(f[i as usize] != id) * 6,
    |                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:226:34
    |
226 |                 12 + i32::from(f[i as usize] != id) * 6,
    |                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:227:17
    |
227 |                 (b"fork%d\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:228:19
    |
228 |                 f[i as usize],
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:228:19
    |
228 |                 f[i as usize],
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:232:13
    |
232 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:238:18
    |
238 |         ration = 3_i32 + rand() % 8_i32;
    |                  ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:238:26
    |
238 |         ration = 3_i32 + rand() % 8_i32;
    |                          ^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:242:17
    |
242 |                 24 + i.wrapping_mul(4),
    |                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:243:17
    |
243 |                 (b"nom\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:247:13
    |
247 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:254:60
    |
254 |             pthread_mutex_unlock(forks.as_mut_ptr().offset(f[i as usize] as isize));
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:254:62
    |
254 |             pthread_mutex_unlock(forks.as_mut_ptr().offset(f[i as usize] as isize));
    |                                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:254:62
    |
254 |             pthread_mutex_unlock(forks.as_mut_ptr().offset(f[i as usize] as isize));
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:256:13
    |
256 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:269:27
    |
269 |             print(id, 12, (b"\x1B[K\0" as *const u8).cast::<i8>());
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:270:17
    |
270 |             t = rand() % 5_i32;
    |                 ^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:273:17
    |
273 |                 (b"..oO (%s)\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:274:23
    |
274 |                 topic[t as usize],
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:274:23
    |
274 |                 topic[t as usize],
    |                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:277:23
    |
277 |             while buf[i as usize] != 0 {
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:277:23
    |
277 |             while buf[i as usize] != 0 {
    |                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:281:21
    |
281 |                     (b"%c\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:282:35
    |
282 |                     i32::from(buf[i as usize]),
    |                                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:282:35
    |
282 |                     i32::from(buf[i as usize]),
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:288:17
    |
288 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/main.rs:290:20
    |
290 |             usleep((500000 + rand() % 1000000i32) as u32);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:290:20
    |
290 |             usleep((500000 + rand() % 1000000i32) as u32);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:290:20
    |
290 |             usleep((500000 + rand() % 1000000i32) as u32);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:290:30
    |
290 |             usleep((500000 + rand() % 1000000i32) as u32);
    |                              ^^^^^^^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:306:13
    |
306 |             (b"%10s\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:307:19
    |
307 |             names[id as usize],
    |                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:307:19
    |
307 |             names[id as usize],
    |                   ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:324:16
    |
324 |             id[i as usize] = i;
    |                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:324:16
    |
324 |             id[i as usize] = i;
    |                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:326:43
    |
326 |                 forks.as_mut_ptr().offset(id[i as usize] as isize),
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:326:46
    |
326 |                 forks.as_mut_ptr().offset(id[i as usize] as isize),
    |                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:326:46
    |
326 |                 forks.as_mut_ptr().offset(id[i as usize] as isize),
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:330:13
    |
330 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:338:41
    |
338 |                 tid.as_mut_ptr().offset(i as isize),
    |                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:341:22
    |
341 |                 Some(philosophize as unsafe extern "C" fn(*mut libc::c_void) -> *mut libc::c_void),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:342:40
    |
342 |                 id.as_mut_ptr().offset(i as isize).cast::<libc::c_void>(),
    |                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:345:13
    |
345 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:232:13
    |
232 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:247:13
    |
247 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:256:13
    |
256 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:288:17
    |
288 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:330:13
    |
330 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:345:13
    |
345 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 86 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 86 warnings (86 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.38s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/discordian_date)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/dot_product)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (6 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:21
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:45
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:35:13
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:35:30
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                              ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
35 |             sum += *a.offset(isize::try_from(i)) * *b.offset(i as isize);
   |                              ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:35:30
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                              ^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:30
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:35:54
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                                                      ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
35 |             sum += *a.offset(i as isize) * *b.offset(isize::try_from(i));
   |                                                      ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:35:54
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                                                      ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:54
   |
35 |             sum += *a.offset(i as isize) * *b.offset(i as isize);
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:37:13
   |
37 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:37:13
   |
37 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 12 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.52s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/dragon_curve)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (54 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:31:1
   |
31 | / pub struct _IO_FILE {
32 | |     pub _flags: i32,
33 | |     pub _IO_read_ptr: *mut i8,
34 | |     pub _IO_read_end: *mut i8,
...  |
60 | |     pub _unused2: [i8; 20],
61 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
31 + #[non_exhaustive]
32 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:67:1
   |
67 | / pub struct rgb {
68 | |     pub r: f64,
69 | |     pub g: f64,
70 | |     pub b: f64,
71 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
67 + #[non_exhaustive]
68 | pub struct rgb {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:37
   |
85 | pub static mut pix: *mut *mut rgb = 0 as *const *mut rgb as *mut *mut rgb;
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:37
   |
85 | pub static mut pix: *mut *mut rgb = 0 as *const *mut rgb as *mut *mut rgb;
   |                                     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:90:28
   |
90 |         let mut tmp: i64 = dx - dy;
   |                            ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:31
    |
103 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:103:50
    |
103 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                  ^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
103 |         let mut p: *mut rgb = &mut *(*pix.offset(isize::try_from(y_0))).offset(x_0 as isize) as *mut rgb;
    |                                                  ~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:50
    |
103 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:103:72
    |
103 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                                        ^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
103 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(isize::try_from(x_0)) as *mut rgb;
    |                                                                        ~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:72
    |
103 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:104:26
    |
104 |         let mut h: f64 = 6.0f64 * clen as f64 / scale as f64;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> src/main.rs:104:35
    |
104 |         let mut h: f64 = 6.0f64 * clen as f64 / scale as f64;
    |                                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:35
    |
104 |         let mut h: f64 = 6.0f64 * clen as f64 / scale as f64;
    |                                   ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> src/main.rs:104:49
    |
104 |         let mut h: f64 = 6.0f64 * clen as f64 / scale as f64;
    |                                                 ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:49
    |
104 |         let mut h: f64 = 6.0f64 * clen as f64 / scale as f64;
    |                                                 ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:105:28
    |
105 |           let mut VAL: f64 = 1_f64
    |  ____________________________^
106 | |             - (cos(3.141592653579f64 * 64_f64 * clen as f64 / scale as f64) - 1_f64)
107 | |                 / 4_f64;
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> src/main.rs:106:49
    |
106 |             - (cos(3.141592653579f64 * 64_f64 * clen as f64 / scale as f64) - 1_f64)
    |                                                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:106:49
    |
106 |             - (cos(3.141592653579f64 * 64_f64 * clen as f64 / scale as f64) - 1_f64)
    |                                                 ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> src/main.rs:106:63
    |
106 |             - (cos(3.141592653579f64 * 64_f64 * clen as f64 / scale as f64) - 1_f64)
    |                                                               ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:106:63
    |
106 |             - (cos(3.141592653579f64 * 64_f64 * clen as f64 / scale as f64) - 1_f64)
    |                                                               ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:108:26
    |
108 |         let mut c: f64 = 1_f64 * VAL;
    |                          ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:109:26
    |
109 |         let mut X: f64 = c * (1_f64 - fabs(fmod(h, 2_f64) - 1_f64));
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `f64` to `i32` may truncate the value
   --> src/main.rs:110:15
    |
110 |         match h as i32 {
    |               ^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:15
    |
110 |         match h as i32 {
    |               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:112:17
    |
112 |                 (*p).r += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:113:17
    |
113 |                 (*p).g += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:116:17
    |
116 |                 (*p).r += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:117:17
    |
117 |                 (*p).g += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:120:17
    |
120 |                 (*p).g += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:121:17
    |
121 |                 (*p).b += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:124:17
    |
124 |                 (*p).g += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:125:17
    |
125 |                 (*p).b += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:128:17
    |
128 |                 (*p).r += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:129:17
    |
129 |                 (*p).b += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:132:17
    |
132 |                 (*p).r += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:133:17
    |
133 |                 (*p).b += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:144:26
    |
144 |         while i32::from(*str) != '\0' as i32 {
    |                          ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:146:19
    |
146 |             str = str.offset(1);
    |                   ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:144:34
    |
144 |         while i32::from(*str) != '\0' as i32 {
    |                                  ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:150:37
    |
150 |                         iter_string((b"X+YF+\0" as *const u8).cast::<i8>(), d.wrapping_sub(1));
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:155:37
    |
155 |                         iter_string((b"-FX-Y\0" as *const u8).cast::<i8>(), d.wrapping_sub(1));
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:160:26
    |
160 |                     dy = -dx;
    |                          ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:164:27
    |
164 |                     tmp = -dy;
    |                           ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:170:21
    |
170 |                     clen;
    |                     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:171:27
    |
171 |                     h_rgb(x / scale, y / scale);
    |                           ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:171:38
    |
171 |                     h_rgb(x / scale, y / scale);
    |                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:186:26
    |
186 |         let mut d: i64 = leng / 3 + 1;
    |                          ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:188:26
    |
188 |         let mut w: i64 = leng + d * 3 / 2 + 2;
    |                          ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:191:31
    |
191 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:191:31
    |
191 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:192:31
    |
192 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:192:31
    |
192 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:194:79
    |
194 |         pix = malloc((::core::mem::size_of::<*mut rgb>() as u64).wrapping_mul(h as u64)).cast::<*mut rgb>();
    |                                                                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:194:79
    |
194 |         pix = malloc((::core::mem::size_of::<*mut rgb>() as u64).wrapping_mul(h as u64)).cast::<*mut rgb>();
    |                                                                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:197:44
    |
197 |             let fresh1 = &mut (*pix.offset(i as isize));
    |                                            ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
197 |             let fresh1 = &mut (*pix.offset(isize::try_from(i)));
    |                                            ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:197:44
    |
197 |             let fresh1 = &mut (*pix.offset(i as isize));
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:198:34
    |
198 |             *fresh1 = buf.offset((w.wrapping_mul(i)) as isize);
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
198 |             *fresh1 = buf.offset(isize::try_from((w.wrapping_mul(i))));
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:198:34
    |
198 |             *fresh1 = buf.offset((w.wrapping_mul(i)) as isize);
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:200:13
    |
200 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:206:31
    |
206 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:206:31
    |
206 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:207:31
    |
207 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:207:31
    |
207 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:219:13
    |
219 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:221:21
    |
221 |         iter_string((b"FX\0" as *const u8).cast::<i8>(), depth);
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:222:40
    |
222 |         let mut fpix: *mut u8 = malloc((w * h.wrapping_mul(3i64)) as u64).cast::<u8>();
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:222:40
    |
222 |         let mut fpix: *mut u8 = malloc((w * h.wrapping_mul(3i64)) as u64).cast::<u8>();
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:222:40
    |
222 |         let mut fpix: *mut u8 = malloc((w * h.wrapping_mul(3i64)) as u64).cast::<u8>();
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:225:13
    |
225 |         i = 3 * w * h.wrapping_sub(1);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:227:29
    |
227 |             if *dbuf.offset(i as isize) > maxv {
    |                             ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
227 |             if *dbuf.offset(isize::try_from(i)) > maxv {
    |                             ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:227:29
    |
227 |             if *dbuf.offset(i as isize) > maxv {
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:228:37
    |
228 |                 maxv = *dbuf.offset(i as isize);
    |                                     ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
228 |                 maxv = *dbuf.offset(isize::try_from(i));
    |                                     ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:228:37
    |
228 |                 maxv = *dbuf.offset(i as isize);
    |                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:231:13
    |
231 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:233:13
    |
233 |         i = 3 * h * w.wrapping_sub(1);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `f64` to `u8` may truncate the value
   --> src/main.rs:235:40
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
   --> src/main.rs:235:40
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:235:40
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:235:40
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:235:64
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                                                ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(isize::try_from(i)) / maxv) as u8;
    |                                                                ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:235:64
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:235:26
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                          ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
235 |             *fpix.offset(isize::try_from(i)) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                          ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:235:26
    |
235 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:237:13
    |
237 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:242:13
    |
242 |             fpix as *const libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:243:13
    |
243 |             (h * w.wrapping_mul(3i64)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:243:13
    |
243 |             (h * w.wrapping_mul(3i64)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:243:13
    |
243 |             (h * w.wrapping_mul(3i64)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:263:13
    |
263 |             (b"size: %d depth: %d\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `expect()` on a `Result` value
   --> src/main.rs:276:13
    |
276 | /             (::std::ffi::CString::new(arg))
277 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:282:33
    |
282 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
282 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:282:33
    |
282 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:282:33
    |
282 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:282:33
    |
282 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
   --> src/main.rs:170:21
    |
170 |                     clen;
    |                     ^^^^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:200:13
    |
200 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:219:13
    |
219 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:231:13
    |
231 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:237:13
    |
237 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 100 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:272:1
    |
272 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:276:13
    |
276 | /             (::std::ffi::CString::new(arg))
277 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 101 warnings (100 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.94s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/draw_a_sphere)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:64:39
   |
64 |                 if x * x + y * y <= R.wrapping_mul(R) {
   |                                       ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:67:62
   |
67 |                     vec[2 as usize] = sqrt(R * R - x * x - y.wrapping_mul(y));
   |                                                              ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to 2 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to 2 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/dutch_national_flag_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:35:5
   |
35 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:29:25
   |
29 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/egyptian_division)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:8:12
  |
8 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib test) generated 2 warnings (2 duplicates)
       Fixed src/main.rs (16 fixes)
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
  --> src/main.rs:10:12
   |
10 | #![feature(label_break_value)]
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(stable_features)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:53:14
   |
53 |             *remainder = dividend.wrapping_sub(accumulator);
   |              ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:33:34
   |
33 |             powers[i as usize] = (1i32 << i) as u64;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:34
   |
33 |             powers[i as usize] = (1i32 << i) as u64;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:33:20
   |
33 |             powers[i as usize] = (1i32 << i) as u64;
   |                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:20
   |
33 |             powers[i as usize] = (1i32 << i) as u64;
   |                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:34:23
   |
34 |             doublings[i as usize] = divisor << i;
   |                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:23
   |
34 |             doublings[i as usize] = divisor << i;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:35:26
   |
35 |             if doublings[i as usize] > dividend {
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:26
   |
35 |             if doublings[i as usize] > dividend {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:39:13
   |
39 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:45:51
   |
45 |             if accumulator.wrapping_add(doublings[i as usize]) <= dividend {
   |                                                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:51
   |
45 |             if accumulator.wrapping_add(doublings[i as usize]) <= dividend {
   |                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:46:68
   |
46 |                 accumulator = (accumulator).wrapping_add(doublings[i as usize]);
   |                                                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:68
   |
46 |                 accumulator = (accumulator).wrapping_add(doublings[i as usize]);
   |                                                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:47:55
   |
47 |                 answer = (answer).wrapping_add(powers[i as usize]);
   |                                                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:55
   |
47 |                 answer = (answer).wrapping_add(powers[i as usize]);
   |                                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:17
   |
70 |                 (b"a == b * x + y\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:17
   |
71 |                 (b"main.c\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:21
   |
80 |                     (b"a == b * x + y\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:21
   |
81 |                     (b"main.c\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:39:13
   |
39 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 25 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 25 warnings (25 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.90s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/emirp_primes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/empty_directory)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (27 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:40:1
   |
40 | / pub struct _IO_FILE {
41 | |     pub _flags: i32,
42 | |     pub _IO_read_ptr: *mut i8,
43 | |     pub _IO_read_end: *mut i8,
...  |
69 | |     pub _unused2: [i8; 20],
70 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
40 + #[non_exhaustive]
41 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:76:1
   |
76 | / pub struct dirent {
77 | |     pub d_ino: u64,
78 | |     pub d_off: i64,
79 | |     pub d_reclen: u16,
80 | |     pub d_type: u8,
81 | |     pub d_name: [i8; 256],
82 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
76 + #[non_exhaustive]
77 | pub struct dirent {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:90:39
   |
90 |         let mut d: *mut DIR = opendir(path);
   |                                       ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:68
   |
92 |             fprintf(stderr, (b"%s: \0" as *const u8).cast::<i8>(), path);
   |                                                                    ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:29
   |
92 |             fprintf(stderr, (b"%s: \0" as *const u8).cast::<i8>(), path);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:20
   |
93 |             perror((b"\0" as *const u8).cast::<i8>());
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:17
    |
103 |                 (b".\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:21
    |
107 |                     (b"..\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:39
    |
130 |             ret = dir_empty(*v.offset(i as isize));
    |                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:59
    |
135 |                         build_str_from_raw_ptr((*v.offset(i as isize)).cast::<u8>())
    |                                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:140:59
    |
140 |                         build_str_from_raw_ptr((*v.offset(i as isize)).cast::<u8>())
    |                                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:145:13
    |
145 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: used `expect()` on a `Result` value
   --> src/main.rs:155:13
    |
155 | /             (::std::ffi::CString::new(arg))
156 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:161:33
    |
161 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
161 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:161:33
    |
161 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:33
    |
161 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:161:33
    |
161 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
   --> src/main.rs:145:13
    |
145 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 19 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:151:1
    |
151 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:155:13
    |
155 | /             (::std::ffi::CString::new(arg))
156 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 20 warnings (19 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.91s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/entropy)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (28 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:33:37
   |
33 |             if wherechar[i32::from(*S.offset(i as isize)) as usize] == -1_i32 {
   |                                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:34:38
   |
34 |                 wherechar[i32::from(*S.offset(i as isize)) as usize] = histlen;
   |                                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:38:33
   |
38 |             let fresh0 = &mut (*hist.offset(wherechar[i32::from(*S.offset(i as isize)) as usize] as isize));
   |                                 ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:38:66
   |
38 |             let fresh0 = &mut (*hist.offset(wherechar[i32::from(*S.offset(i as isize)) as usize] as isize));
   |                                                                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:27:23
   |
27 |             wherechar[i as usize] = -1_i32;
   |                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:23
   |
27 |             wherechar[i as usize] = -1_i32;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:29:13
   |
29 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:33:26
   |
33 |             if wherechar[i32::from(*S.offset(i as isize)) as usize] == -1_i32 {
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:26
   |
33 |             if wherechar[i32::from(*S.offset(i as isize)) as usize] == -1_i32 {
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:46
   |
33 |             if wherechar[i32::from(*S.offset(i as isize)) as usize] == -1_i32 {
   |                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:34:27
   |
34 |                 wherechar[i32::from(*S.offset(i as isize)) as usize] = histlen;
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:27
   |
34 |                 wherechar[i32::from(*S.offset(i as isize)) as usize] = histlen;
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:47
   |
34 |                 wherechar[i32::from(*S.offset(i as isize)) as usize] = histlen;
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:36:17
   |
36 |                 histlen;
   |                 -^^^^^^^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:45
   |
38 |             let fresh0 = &mut (*hist.offset(wherechar[i32::from(*S.offset(i as isize)) as usize] as isize));
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:38:55
   |
38 |             let fresh0 = &mut (*hist.offset(wherechar[i32::from(*S.offset(i as isize)) as usize] as isize));
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:55
   |
38 |             let fresh0 = &mut (*hist.offset(wherechar[i32::from(*S.offset(i as isize)) as usize] as isize));
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:75
   |
38 |             let fresh0 = &mut (*hist.offset(wherechar[i32::from(*S.offset(i as isize)) as usize] as isize));
   |                                                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:39:13
   |
39 |             *fresh0 += 1_i32;
   |             ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:40:13
   |
40 |             *fresh0;
   |             ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:42:13
   |
42 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:57:29
   |
57 |             H -= f64::from(*hist.offset(i as isize)) / f64::from(len)
   |                             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:58:35
   |
58 |                 * log2(f64::from(*hist.offset(i as isize)) / f64::from(len));
   |                                   ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: floating-point arithmetic detected
  --> src/main.rs:57:13
   |
57 | /             H -= f64::from(*hist.offset(i as isize)) / f64::from(len)
58 | |                 * log2(f64::from(*hist.offset(i as isize)) / f64::from(len));
   | |____________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:41
   |
57 |             H -= f64::from(*hist.offset(i as isize)) / f64::from(len)
   |                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:47
   |
58 |                 * log2(f64::from(*hist.offset(i as isize)) / f64::from(len));
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:60:13
   |
60 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:15
   |
74 |         scanf((b"%[^\n]\0" as *const u8).cast::<i8>(), S.as_mut_ptr());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:75:15
   |
75 |         len = strlen(S.as_mut_ptr()) as i32;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
75 |         len = i32::try_from(strlen(S.as_mut_ptr()));
   |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:15
   |
75 |         len = strlen(S.as_mut_ptr()) as i32;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:76:23
   |
76 |         hist = calloc(len as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:76:23
   |
76 |         hist = calloc(len as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:29:13
   |
29 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:36:17
   |
36 |                 histlen;
   |                 ^^^^^^^^

warning: unused unary operation that must be used
  --> src/main.rs:40:13
   |
40 |             *fresh0;
   |             ^^^^^^^ the unary operation produces a value
   |
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
40 |             let _ = *fresh0;
   |             +++++++

warning: path statement with no effect
  --> src/main.rs:42:13
   |
42 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:60:13
   |
60 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 38 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 38 warnings (38 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.08s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/environment_variables)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (5 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:18:21
   |
18 |         puts(getenv((b"HOME\0" as *const u8).cast::<i8>()));
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.79s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/ethiopian_multiplication)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (17 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:16:10
   |
16 |         *x >>= 1_i32;
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:24:10
   |
24 |         *x <<= 1_i32;
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: `c2rust_out` (bin "main" test) generated 3 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 3 warnings (3 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.58s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/euler_method)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (28 fixes)
warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:17:1
   |
17 | pub extern "C" fn ivp_euler(mut f: deriv_f, mut y: f64, mut step: i32, mut end_t: i32) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:28:25
   |
28 |                 None => panic!("non-null function pointer"),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:23:16
   |
23 |             if t % 10_i32 == 0_i32 {
   |                ^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:27:30
   |
27 |                 Some(f_m) => y += f64::from(step) * f_m(f64::from(t), y),
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:46:9
   |
46 |         t += 10_f64;
   |         ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:53:50
   |
53 |             print!(" {:7.3}", 80_f64.mul_add(exp(-0.07f64 * t), 20_f64));
   |                                                  ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:54:13
   |
54 |             t += 10_f64;
   |             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:62:5
   |
62 |     -0.07f64 * (temp - 20_f64)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:14
   |
69 |         Some(cooling as unsafe extern "C" fn(f64, f64) -> f64),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:76:14
   |
76 |         Some(cooling as unsafe extern "C" fn(f64, f64) -> f64),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:14
   |
83 |         Some(cooling as unsafe extern "C" fn(f64, f64) -> f64),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 11 warnings (11 duplicates)
warning: `c2rust_out` (bin "main" test) generated 11 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 3.63s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/evaluate_binomial_coefficients)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:21:28
   |
21 |         y = x.wrapping_rem(y);
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:49:27
   |
49 |             .wrapping_div(n)
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:54:33
   |
54 |             nr = n.wrapping_div(g);
   |                                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:55:33
   |
55 |             dr = d.wrapping_div(g);
   |                                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:57:32
   |
57 |             r = r.wrapping_div(g);
   |                                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:58:34
   |
58 |             dr = dr.wrapping_div(g);
   |                                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:62:31
   |
62 |                 .wrapping_div(nr)
   |                               ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:67:32
   |
67 |             r = r.wrapping_div(dr);
   |                                ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:69:13
   |
69 |             n;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:74:32
   |
74 |             r = r.wrapping_div(d);
   |                                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:77:9
   |
77 |         d;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:69:13
   |
69 |             n;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:77:9
   |
77 |         d;
   |         ^^

warning: `c2rust_out` (bin "main" test) generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.53s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/evolutionary_algorithm)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (32 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:38:29
   |
38 |     let mut rand_max: i32 = 2147483647 - 2147483647 % n;
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:38:42
   |
38 |     let mut rand_max: i32 = 2147483647 - 2147483647 % n;
   |                                          ^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:48:5
   |
48 |     r / (rand_max / n)
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:58:16
   |
58 |         while *a.offset(i as isize) != 0 {
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:59:41
   |
59 |             sum += i32::from(i32::from(*a.offset(i as isize)) != i32::from(*b.offset(i as isize)));
   |                                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:59:77
   |
59 |             sum += i32::from(i32::from(*a.offset(i as isize)) != i32::from(*b.offset(i as isize)));
   |                                                                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:25
   |
58 |         while *a.offset(i as isize) != 0 {
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:59:13
   |
59 |             sum += i32::from(i32::from(*a.offset(i as isize)) != i32::from(*b.offset(i as isize)));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:50
   |
59 |             sum += i32::from(i32::from(*a.offset(i as isize)) != i32::from(*b.offset(i as isize)));
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:86
   |
59 |             sum += i32::from(i32::from(*a.offset(i as isize)) != i32::from(*b.offset(i as isize)));
   |                                                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:61:13
   |
61 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:73:16
   |
73 |         while *a.offset(i as isize) != 0 {
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:75:28
   |
75 |                 i32::from(*a.offset(i as isize))
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:74:14
   |
74 |             *b.offset(i as isize) = (if irand(15) != 0_i32 {
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:10
   |
83 |         *b.offset(i as isize) = '\0' as i8;
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:25
   |
73 |         while *a.offset(i as isize) != 0 {
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `i8` may truncate the value
  --> src/main.rs:74:37
   |
74 |               *b.offset(i as isize) = (if irand(15) != 0_i32 {
   |  _____________________________________^
75 | |                 i32::from(*a.offset(i as isize))
76 | |             } else {
77 | |                 i32::from(tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
78 | |                     as usize])
79 | |             }) as i8;
   | |____________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
74 ~             *b.offset(i as isize) = i8::try_from((if irand(15) != 0_i32 {
75 +                 i32::from(*a.offset(i as isize))
76 +             } else {
77 +                 i32::from(tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
78 +                     as usize])
79 ~             }));
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:37
   |
74 |               *b.offset(i as isize) = (if irand(15) != 0_i32 {
   |  _____________________________________^
75 | |                 i32::from(*a.offset(i as isize))
76 | |             } else {
77 | |                 i32::from(tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
78 | |                     as usize])
79 | |             }) as i8;
   | |____________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:37
   |
75 |                 i32::from(*a.offset(i as isize))
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:77:31
   |
77 |                   i32::from(tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
   |  _______________________________^
78 | |                     as usize])
   | |____________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:31
   |
77 |                   i32::from(tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
   |  _______________________________^
78 | |                     as usize])
   | |____________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:77:37
   |
77 |                 i32::from(tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
77 |                 i32::from(tbl[irand(i32::try_from((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1)))
   |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:23
   |
74 |             *b.offset(i as isize) = (if irand(15) != 0_i32 {
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:81:13
   |
81 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:33
   |
83 |         *b.offset(i as isize) = '\0' as i8;
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:19
   |
83 |         *b.offset(i as isize) = '\0' as i8;
   |                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:97:22
   |
97 |         while target[i as usize] != 0 {
   |                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:22
   |
97 |         while target[i as usize] != 0 {
   |                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:99:21
    |
99  |                   tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
    |  _____________________^
100 | |                     as usize];
    | |____________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:99:21
    |
99  |                   tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
    |  _____________________^
100 | |                     as usize];
    | |____________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:99:27
   |
99 |                 tbl[irand((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1) as i32)
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
99 |                 tbl[irand(i32::try_from((::core::mem::size_of::<[i8; 28]>() as u64).wrapping_sub(1)))
   |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:98:31
   |
98 |             specimen[0_usize][i as usize] =
   |                               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:31
   |
98 |             specimen[0_usize][i as usize] =
   |                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:102:13
    |
102 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:105:23
    |
105 |     specimen[0_usize][i as usize] = 0;
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:23
    |
105 |     specimen[0_usize][i as usize] = 0;
    |                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:113:31
    |
113 |                     (specimen[i as usize]).as_mut_ptr(),
    |                               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:31
    |
113 |                     (specimen[i as usize]).as_mut_ptr(),
    |                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:116:17
    |
116 |                 i;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:121:62
    |
121 |                 unfit = unfitness(target.as_ptr(), (specimen[i as usize]).as_mut_ptr());
    |                                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:62
    |
121 |                 unfit = unfitness(target.as_ptr(), (specimen[i as usize]).as_mut_ptr());
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:127:17
    |
127 |                 i;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:132:31
    |
132 |                     (specimen[best_i as usize]).as_mut_ptr(),
    |                               ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:132:31
    |
132 |                     (specimen[best_i as usize]).as_mut_ptr(),
    |                               ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:61:13
   |
61 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:81:13
   |
81 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:102:13
    |
102 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:116:17
    |
116 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:127:17
    |
127 |                 i;
    |                 ^^

warning: `c2rust_out` (bin "main" test) generated 50 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 50 warnings (50 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.73s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/exponential)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (41 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:113:5
    |
113 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:20:1
   |
20 | / pub struct gen_t {
21 | |     pub f: seq_func,
22 | |     pub output: i32,
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
20 + #[non_exhaustive]
21 | pub struct gen_t {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:27:1
   |
27 | / pub struct power_gen_t {
28 | |     pub f: seq_func,
29 | |     pub output: i32,
30 | |     pub pos: i32,
31 | |     pub n: i32,
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
27 + #[non_exhaustive]
28 | pub struct power_gen_t {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:36:1
   |
36 | / pub struct filter_gen_t {
37 | |     pub f: seq_func,
38 | |     pub output: i32,
39 | |     pub in_0: *mut libc::c_void,
40 | |     pub without: *mut libc::c_void,
41 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
36 + #[non_exhaustive]
37 | pub struct filter_gen_t {
   |

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:43:1
   |
43 | pub extern "C" fn seq_next(mut state: *mut libc::c_void) -> i32 {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:47:19
   |
47 | ...sh0 = (*state.cast::<std::option::Option<unsafe extern "C" fn(*mut libc::c_void) -> i32>>()).expect("non-null function pointer")(state);
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:47:142
   |
47 | ...t libc::c_void) -> i32>>()).expect("non-null function pointer")(state);
   |                                                                    ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: used `expect()` on an `Option` value
  --> src/main.rs:47:19
   |
47 | ...sh0 = (*state.cast::<std::option::Option<unsafe extern "C" fn(*mut libc::c_void) -> i32>>()).expect("non-null function pointer")(state);
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:57:9
   |
57 |         *fresh1 += 1_i32;
   |         ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:58:9
   |
58 |         pow(f64::from(*fresh1), f64::from((*s.cast::<power_gen_t>()).n)) as i32
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:9
   |
58 |         pow(f64::from(*fresh1), f64::from((*s.cast::<power_gen_t>()).n)) as i32
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:23
   |
70 |         (*s).f = Some(power_next as unsafe extern "C" fn(*mut libc::c_void) -> i32);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: variables in the condition are not mutated in the loop body
  --> src/main.rs:85:19
   |
85 |             while (*wo).output < (*in_0).output {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this may lead to an infinite or to a never running loop
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_immutable_condition
   = note: `#[warn(clippy::while_immutable_condition)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:26
    |
105 |         (*filt).f = Some(filter_next as unsafe extern "C" fn(*mut libc::c_void) -> i32);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:121:13
    |
121 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
   --> src/main.rs:127:13
    |
127 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:121:13
    |
121 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:127:13
    |
127 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 18 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 18 warnings (18 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.95s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/extreme_floating_point_values)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (26 fixes)
warning: floating-point arithmetic detected
  --> src/main.rs:13:24
   |
13 |     let mut inf: f64 = 1_f64 / 0.0f64;
   |                        ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:14:30
   |
14 |     let mut minus_inf: f64 = -1_f64 / 0.0f64;
   |                              ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:15:31
   |
15 |     let mut minus_zero: f64 = -1_f64 / inf;
   |                               ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: constant division of `0.0` with `0.0` will always result in NaN
  --> src/main.rs:16:24
   |
16 |     let mut nan: f64 = 0.0f64 / 0.0f64;
   |                        ^^^^^^^^^^^^^^^
   |
   = help: consider using `f64::NAN` if you would like a constant representing NaN
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_divided_by_zero
   = note: `#[warn(clippy::zero_divided_by_zero)]` on by default

warning: equal expressions as operands to `/`
  --> src/main.rs:16:24
   |
16 |     let mut nan: f64 = 0.0f64 / 0.0f64;
   |                        ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
   = note: `#[warn(clippy::eq_op)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:16:24
   |
16 |     let mut nan: f64 = 0.0f64 / 0.0f64;
   |                        ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:21:33
   |
21 |     println!("+inf + 2.0 = {}", inf + 2.0f64);
   |                                 ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:22:34
   |
22 |     println!("+inf - 10.1 = {}", inf - 10.1f64);
   |                                  ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:23:34
   |
23 |     println!("+inf + -inf = {}", inf + minus_inf);
   |                                  ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:24:33
   |
24 |     println!("0.0 * +inf = {}", 0.0f64 * inf);
   |                                 ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:25:31
   |
25 |     println!("1.0/-0.0 = {}", 1.0f64 / minus_zero);
   |                               ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:26:32
   |
26 |     println!("NaN + 1.0 = {}", nan + 1.0f64);
   |                                ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:27:32
   |
27 |     println!("NaN + NaN = {}", nan + nan);
   |                                ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: equal expressions as operands to `==`
  --> src/main.rs:28:8
   |
28 |     if nan == nan {
   |        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: strict comparison of `f32` or `f64`
  --> src/main.rs:28:8
   |
28 |     if nan == nan {
   |        ^^^^^^^^^^ help: consider comparing them within some margin of error: `(nan - nan).abs() < error_margin`
   |
   = note: `f32::EPSILON` and `f64::EPSILON` are available for the `error_margin`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
   = note: requested on the command line with `-W clippy::float-cmp`

warning: `c2rust_out` (bin "main") generated 16 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 16 warnings (16 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.62s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/factor_of_an_integer)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (31 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:19:1
   |
19 | / pub struct Factors {
20 | |     pub list: *mut i32,
21 | |     pub count: i16,
22 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
19 + #[non_exhaustive]
20 | pub struct Factors {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:29:44
   |
29 |         let mut newSize: i32 = i32::from((*fctrs).count) + flix;
   |                                            ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:32:19
   |
32 |                 (*fctrs).list.cast::<libc::c_void>(),
   |                   ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:31:15
   |
31 |             (*fctrs).list = realloc(
   |               ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:36:15
   |
36 |             (*fctrs).list =
   |               ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:40:26
   |
40 |         ix = i32::from((*fctrs).count);
   |                          ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:53
   |
42 |             *((*fctrs).list).offset(ix as isize) = *flist.offset(ij as isize);
   |                                                     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:17
   |
42 |             *((*fctrs).list).offset(ix as isize) = *flist.offset(ij as isize);
   |                 ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:48:11
   |
48 |         (*fctrs).count = newSize as i16;
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:29:32
   |
29 |         let mut newSize: i32 = i32::from((*fctrs).count) + flix;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:33:17
   |
33 |                 (newSize as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64),
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:17
   |
33 |                 (newSize as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64),
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:37:24
   |
37 |                 malloc((newSize as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                        ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:24
   |
37 |                 malloc((newSize as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                        ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:66
   |
42 |             *((*fctrs).list).offset(ix as isize) = *flist.offset(ij as isize);
   |                                                                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:37
   |
42 |             *((*fctrs).list).offset(ix as isize) = *flist.offset(ij as isize);
   |                                     ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:44:13
   |
44 |             ij;
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:46:13
   |
46 |             ix;
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `i16` may truncate the value
  --> src/main.rs:48:26
   |
48 |         (*fctrs).count = newSize as i16;
   |                          ^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
48 |         (*fctrs).count = i16::try_from(newSize);
   |                          ~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:26
   |
48 |         (*fctrs).count = newSize as i16;
   |                          ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:60:11
   |
60 |         (*fctrs).count = 0;
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:61:16
   |
61 |         free((*fctrs).list.cast::<libc::c_void>());
   |                ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:62:11
   |
62 |         (*fctrs).list = std::ptr::null_mut::<i32>();
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:64:15
   |
64 |         while dvsr * dvsr < num {
   |               ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:65:16
   |
65 |             if num % dvsr == 0_i32 {
   |                ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:65:16
   |
65 |             if num % dvsr == 0_i32 {
   |                ^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:72:23
   |
72 |                 flist[fresh0 as usize] = dvsr;
   |                       ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:23
   |
72 |                 flist[fresh0 as usize] = dvsr;
   |                       ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:75:42
   |
75 |                 flist[fresh1 as usize] = num / dvsr;
   |                                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:75:23
   |
75 |                 flist[fresh1 as usize] = num / dvsr;
   |                       ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:23
   |
75 |                 flist[fresh1 as usize] = num / dvsr;
   |                       ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:78:13
   |
78 |             dvsr;
   |             ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:80:12
   |
80 |         if dvsr * dvsr == num {
   |            ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:83:19
   |
83 |             flist[fresh2 as usize] = dvsr;
   |                   ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:19
   |
83 |             flist[fresh2 as usize] = dvsr;
   |                   ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:108:32
    |
108 |             factor(nums2factor[i as usize], &mut ftors);
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:32
    |
108 |             factor(nums2factor[i as usize], &mut ftors);
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:109:60
    |
109 |             print!("\nfactors of {} are:\n  ", nums2factor[i as usize]);
    |                                                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:109:60
    |
109 |             print!("\nfactors of {} are:\n  ", nums2factor[i as usize]);
    |                                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:19
    |
110 |             sep = ' ' as i8;
    |                   ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:70
    |
113 |                 print!("{} {}", i32::from(sep), *(ftors.list).offset(j as isize));
    |                                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:23
    |
114 |                 sep = ',' as i8;
    |                       ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:116:17
    |
116 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:120:13
    |
120 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: used `expect()` on a `Result` value
   --> src/main.rs:130:13
    |
130 | /             (::std::ffi::CString::new(arg))
131 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:136:33
    |
136 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
136 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:136:33
    |
136 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:33
    |
136 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:136:33
    |
136 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:44:13
   |
44 |             ij;
   |             ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:46:13
   |
46 |             ix;
   |             ^^^

warning: path statement with no effect
  --> src/main.rs:78:13
   |
78 |             dvsr;
   |             ^^^^^

warning: path statement with no effect
   --> src/main.rs:116:17
    |
116 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:120:13
    |
120 |             i;
    |             ^^

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:126:1
    |
126 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:130:13
    |
130 | /             (::std::ffi::CString::new(arg))
131 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main") generated 55 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 56 warnings (55 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.78s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/factors_of_a_mersenne_number)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (34 fixes)
warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:14:8
   |
14 |     if n % 2_i32 == 0_i32 {
   |        ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:17:8
   |
17 |     if n % 3_i32 == 0_i32 {
   |        ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:21:11
   |
21 |     while d * d <= n {
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:22:12
   |
22 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:22:12
   |
22 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:12
   |
26 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:26:12
   |
26 |         if n % d == 0_i32 {
   |            ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:47:9
   |
47 |     d = 2_i32 * q.wrapping_add(1);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `i32` may truncate the value
  --> src/main.rs:52:17
   |
52 |             i = (i64::from(i) * i64::from(i) % i64::from(d)) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
52 |             i = i32::try_from(i64::from(i) * i64::from(i) % i64::from(d));
   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:17
   |
52 |             i = (i64::from(i) * i64::from(i) % i64::from(d)) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:52:17
   |
52 |             i = (i64::from(i) * i64::from(i) % i64::from(d)) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:52:17
   |
52 |             i = (i64::from(i) * i64::from(i) % i64::from(d)) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:64:9
   |
64 |         d += 2_i32 * q;
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.55s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/fairshare_between_two_and_more)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (25 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:19:28
   |
19 |         let mut rem: i32 = n % base;
   |                            ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:19:28
   |
19 |         let mut rem: i32 = n % base;
   |                            ^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:23:5
   |
23 |     sum % base
   |     ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:23:5
   |
23 |     sum % base
   |     ^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:35:9
   |
35 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:45:20
   |
45 |             calloc(base as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                    ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:20
   |
45 |             calloc(base as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                    ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:44
   |
57 |             let fresh0 = &mut (*cnt.offset(t as isize));
   |                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:58:13
   |
58 |             *fresh0 += 1_i32;
   |             ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:59:13
   |
59 |             *fresh0;
   |             ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:61:13
   |
61 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:28
   |
68 |             if *cnt.offset(i as isize) > 0_i32 {
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:70:17
   |
70 |                 portion;
   |                 ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:28
   |
72 |             if *cnt.offset(i as isize) < minTurn {
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:39
   |
73 |                 minTurn = *cnt.offset(i as isize);
   |                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:28
   |
75 |             if *cnt.offset(i as isize) > maxTurn {
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:76:39
   |
76 |                 maxTurn = *cnt.offset(i as isize);
   |                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:79:13
   |
79 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:35:9
   |
35 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: unused unary operation that must be used
  --> src/main.rs:59:13
   |
59 |             *fresh0;
   |             ^^^^^^^ the unary operation produces a value
   |
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
59 |             let _ = *fresh0;
   |             +++++++

warning: path statement with no effect
  --> src/main.rs:61:13
   |
61 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:70:17
   |
70 |                 portion;
   |                 ^^^^^^^^

warning: path statement with no effect
  --> src/main.rs:79:13
   |
79 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 24 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 24 warnings (24 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.81s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/farey_sequence)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (27 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:18:1
   |
18 | / pub struct frac {
19 | |     pub d: i32,
20 | |     pub n: i32,
21 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
18 + #[non_exhaustive]
19 | pub struct frac {
   |

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:36:13
   |
36 |         k = (n + f1.n) / f2.n;
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:20
   |
42 |                 d: f2.d * k - t.d,
   |                    ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:43:20
   |
43 |                 n: f2.n * k - t.n,
   |                    ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:18
   |
48 |     print!("{}", '\n' as i32);
   |                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:34
   |
52 | pub static mut cache: *mut u64 = 0 as *const u64 as *mut u64;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:34
   |
52 | pub static mut cache: *mut u64 = 0 as *const u64 as *mut u64;
   |                                  ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:59:12
   |
59 |         if n as u64 >= ccap {
   |            ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:12
   |
59 |         if n as u64 >= ccap {
   |            ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:64:27
   |
64 |             while ccap <= n as u64 {
   |                           ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:27
   |
64 |             while ccap <= n as u64 {
   |                           ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:72:30
   |
72 |                 cache.offset(old as isize).cast::<libc::c_void>(),
   |                              ^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
72 |                 cache.offset(isize::try_from(old)).cast::<libc::c_void>(),
   |                              ~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:72:30
   |
72 |                 cache.offset(old as isize).cast::<libc::c_void>(),
   |                              ^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:30
   |
72 |                 cache.offset(old as isize).cast::<libc::c_void>(),
   |                              ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:76:33
   |
76 |         } else if *cache.offset(n as isize) != 0 {
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:34
   |
77 |             return *cache.offset(n as isize);
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:80:24
   |
80 |     let mut len: u64 = (n as u64)
   |                        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:24
   |
80 |     let mut len: u64 = (n as u64)
   |                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:81:23
   |
81 |         .wrapping_mul((n.wrapping_add(3i32)) as u64)
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:23
   |
81 |         .wrapping_mul((n.wrapping_add(3i32)) as u64)
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:89:17
   |
89 |             q = n / (n / p) + 1_i32;
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:90:49
   |
90 |             len = (len).wrapping_sub((farey_len(n / p)).wrapping_mul((q - p) as u64));
   |                                                 ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:90:70
   |
90 |             len = (len).wrapping_sub((farey_len(n / p)).wrapping_mul((q - p) as u64));
   |                                                                      ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:70
   |
90 |             len = (len).wrapping_sub((farey_len(n / p)).wrapping_mul((q - p) as u64));
   |                                                                      ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:90:70
   |
90 |             len = (len).wrapping_sub((farey_len(n / p)).wrapping_mul((q - p) as u64));
   |                                                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:23
   |
93 |         *cache.offset(n as isize) = len;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:105:9
    |
105 |         n;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
   --> src/main.rs:105:9
    |
105 |         n;
    |         ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 29 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 29 warnings (29 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.81s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/fasta_format)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:118:5
    |
118 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:37:1
   |
37 | / pub struct _IO_FILE {
38 | |     pub _flags: i32,
39 | |     pub _IO_read_ptr: *mut i8,
40 | |     pub _IO_read_end: *mut i8,
...  |
66 | |     pub _unused2: [i8; 20],
67 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
37 + #[non_exhaustive]
38 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:13
   |
78 |             (b"fasta.txt\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:13
   |
79 |             (b"r\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:90:39
   |
90 |             if i32::from(*line.offset((read.wrapping_sub(1i64)) as isize)) == '\n' as i32 {
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
90 |             if i32::from(*line.offset(isize::try_from((read.wrapping_sub(1i64))))) == '\n' as i32 {
   |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:39
   |
90 |             if i32::from(*line.offset((read.wrapping_sub(1i64)) as isize)) == '\n' as i32 {
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:79
   |
90 |             if i32::from(*line.offset((read.wrapping_sub(1i64)) as isize)) == '\n' as i32 {
   |                                                                               ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:91:30
   |
91 |                 *line.offset((read.wrapping_sub(1i64)) as isize) = 0;
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
91 |                 *line.offset(isize::try_from((read.wrapping_sub(1i64)))) = 0;
   |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:30
   |
91 |                 *line.offset((read.wrapping_sub(1i64)) as isize) = 0;
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:52
   |
93 |             if i32::from(*line.offset(0_isize)) == '>' as i32 {
   |                                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main" test) generated 11 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 11 warnings (11 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.85s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/fermat_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:14:5
   |
14 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: statement with no effect
  --> src/main.rs:19:13
   |
19 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: used `expect()` on a `Result` value
  --> src/main.rs:29:13
   |
29 | /             (::std::ffi::CString::new(arg))
30 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:36:16
   |
36 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
36 |         main_0(i32::try_from(args.len() - 1), args.as_mut_ptr().cast::<*const i8>()),
   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:36:16
   |
36 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:16
   |
36 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:36:16
   |
36 |         main_0((args.len() - 1) as i32, args.as_mut_ptr().cast::<*const i8>()),
   |                ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
  --> src/main.rs:19:13
   |
19 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:25:1
   |
25 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:29:13
   |
29 | /             (::std::ffi::CString::new(arg))
30 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main") generated 9 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 10 warnings (9 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.66s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/fibonacci_n_step_number_sequences)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:24:16
   |
24 |         while *seedArray.offset(i as isize) != 0_i32 {
   |                ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:31:43
   |
31 |             *result.offset(i as isize) = *seedArray.offset(i as isize);
   |                                           ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:19:20
   |
19 |             malloc((howMany as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                    ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:19:20
   |
19 |             malloc((howMany as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                    ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:24:33
   |
24 |         while *seedArray.offset(i as isize) != 0_i32 {
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:26:13
   |
26 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:60
   |
31 |             *result.offset(i as isize) = *seedArray.offset(i as isize);
   |                                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:28
   |
31 |             *result.offset(i as isize) = *seedArray.offset(i as isize);
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:33:13
   |
33 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:28
   |
37 |             *result.offset(i as isize) = 0_i32;
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:38:17
   |
38 |             j = i - initialCardinality;
   |                 ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:40:17
   |
40 |                 *result.offset(i as isize) += *result.offset(j as isize);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:62
   |
40 |                 *result.offset(i as isize) += *result.offset(j as isize);
   |                                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:32
   |
40 |                 *result.offset(i as isize) += *result.offset(j as isize);
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:42:17
   |
42 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:45:13
   |
45 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:35
   |
68 |                 *fibonacci.offset(i as isize),
   |                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:36
   |
69 |                 *tribonacci.offset(i as isize),
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:36
   |
70 |                 *tetranacci.offset(i as isize),
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:31
   |
71 |                 *lucas.offset(i as isize)
   |                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:74:13
   |
74 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:26:13
   |
26 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:33:13
   |
33 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:42:17
   |
42 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:45:13
   |
45 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:74:13
   |
74 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 27 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 27 warnings (27 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.59s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/fibonacci_word)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (39 fixes)
warning: floating-point arithmetic detected
  --> src/main.rs:46:9
   |
46 |         result -= f64::from(ones) / f64::from(total) * log2(f64::from(ones) / f64::from(total));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:47:9
   |
47 |         result -= f64::from(zeros) / f64::from(total) * log2(f64::from(zeros) / f64::from(total));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: equal expressions as operands to `!=`
  --> src/main.rs:49:8
   |
49 |     if result != result {
   |        ^^^^^^^^^^^^^^^^
   |
   = note: if you intended to check if the operand is NaN, use `.is_nan()` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
   = note: `#[warn(clippy::eq_op)]` on by default

warning: strict comparison of `f32` or `f64`
  --> src/main.rs:49:8
   |
49 |     if result != result {
   |        ^^^^^^^^^^^^^^^^ help: consider comparing them within some margin of error: `(result - result).abs() > error_margin`
   |
   = note: `f32::EPSILON` and `f64::EPSILON` are available for the `error_margin`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
   = note: requested on the command line with `-W clippy::float-cmp`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:63:16
   |
63 |         while *word.offset(i as isize) != 0 {
   |                ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:64:30
   |
64 |             let mut c: i8 = *word.offset(i as isize);
   |                              ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:28
   |
63 |         while *word.offset(i as isize) != 0 {
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:42
   |
64 |             let mut c: i8 = *word.offset(i as isize);
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:68:21
   |
68 |                     zeros;
   |                     ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:72:21
   |
72 |                     ones;
   |                     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:89:33
   |
89 |         print!(" {:10}", strlen(word));
   |                                 ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:27
    |
105 |         strcpy(last_word, (b"1\0" as *const u8).cast::<i8>());
    |                           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:30
    |
107 |         strcpy(current_word, (b"0\0" as *const u8).cast::<i8>());
    |                              ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:124:13
    |
124 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:132:1
    |
132 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:136:13
    |
136 | /             (::std::ffi::CString::new(arg))
137 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:136:13
    |
136 | /             (::std::ffi::CString::new(arg))
137 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:142:33
    |
142 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
142 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:142:33
    |
142 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:142:33
    |
142 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:142:33
    |
142 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
  --> src/main.rs:68:21
   |
68 |                     zeros;
   |                     ^^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:72:21
   |
72 |                     ones;
   |                     ^^^^^

warning: path statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:124:13
    |
124 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 25 warnings (25 duplicates)
warning: `c2rust_out` (bin "main" test) generated 26 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 2.11s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/filter)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/find_the_intersection_of_two_lines)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/find_the_last_sunday_of_each_month)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/first_class_functions)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:34:18
   |
34 |     return v * v.wrapping_mul(v);
   |                  ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/five_weekends)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (37 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:29:1
   |
29 | / pub struct tm {
30 | |     pub tm_sec: i32,
31 | |     pub tm_min: i32,
32 | |     pub tm_hour: i32,
...  |
40 | |     pub tm_zone: *const i8,
41 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
29 + #[non_exhaustive]
30 | pub struct tm {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:5
   |
43 |     (b"January\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:5
   |
44 |     (b"February\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:5
   |
45 |     (b"March\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:5
   |
46 |     (b"April\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:5
   |
47 |     (b"May\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:5
   |
48 |     (b"June\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:5
   |
49 |     (b"July\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:5
   |
50 |     (b"August\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:5
   |
51 |     (b"September\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:5
   |
52 |     (b"October\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:5
   |
53 |     (b"November\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:5
   |
54 |     (b"December\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:85:33
   |
85 |                 m = long_months[i as usize];
   |                                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:33
   |
85 |                 m = long_months[i as usize];
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:48
   |
93 |                         build_str_from_raw_ptr(months[m as usize] as *mut u8)
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:93:55
   |
93 |                         build_str_from_raw_ptr(months[m as usize] as *mut u8)
   |                                                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:55
   |
93 |                         build_str_from_raw_ptr(months[m as usize] as *mut u8)
   |                                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:48
   |
99 |                         build_str_from_raw_ptr(months[m as usize] as *mut u8)
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:99:55
   |
99 |                         build_str_from_raw_ptr(months[m as usize] as *mut u8)
   |                                                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:55
   |
99 |                         build_str_from_raw_ptr(months[m as usize] as *mut u8)
   |                                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:102:21
    |
102 |                     n;
    |                     -^
    |                     |
    |                     help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
   --> src/main.rs:105:17
    |
105 |                 i;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:108:13
    |
108 |             y;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:102:21
    |
102 |                     n;
    |                     ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:105:17
    |
105 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:108:13
    |
108 |             y;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 28 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 28 warnings (28 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.20s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/flatten_a_list)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/flood_fill)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/floyds_triangle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (13 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:18:9
   |
18 |     i = n * (n.wrapping_sub(1)) / 2_i32;
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:24:9
   |
24 |         len;
   |         ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:35:16
   |
35 |             if i - j != 0_i32 {
   |                ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:21
   |
38 |                     (len - i32::from(j < c)).unsigned_abs() as usize,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:38:21
   |
38 |                     (len - i32::from(j < c)).unsigned_abs() as usize,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:21
   |
40 |                     ' ' as i32
   |                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:21
   |
45 |                     (len - i32::from(j < c)).unsigned_abs() as usize,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:45:21
   |
45 |                     (len - i32::from(j < c)).unsigned_abs() as usize,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:21
   |
47 |                     '\n' as i32
   |                     ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:51:13
   |
51 |             j;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:54:9
   |
54 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:24:9
   |
24 |         len;
   |         ^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:51:13
   |
51 |             j;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:54:9
   |
54 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 15 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 15 warnings (15 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.57s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/formatted_numeric_output)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (16 fixes)
warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:13:32
   |
13 |     let mut r: libc::c_float = 7.125f64 as libc::c_float;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:13:32
   |
13 |     let mut r: libc::c_float = 7.125f64 as libc::c_float;
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:14:35
   |
14 |     println!(" {:9.3}", f64::from(-r));
   |                                   ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:17:36
   |
17 |     println!(" {:09.3}", f64::from(-r));
   |                                    ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: `c2rust_out` (bin "main") generated 5 warnings (5 duplicates)
warning: `c2rust_out` (bin "main" test) generated 5 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/function_composition)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (18 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:20:1
   |
20 | / pub struct double_to_double {
21 | | // SAFETY: machine generated unsafe code
22 | |     pub fn_0: Option<unsafe extern "C" fn(*mut double_to_double, f64) -> f64>,
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
20 + #[non_exhaustive]
21 | pub struct double_to_double {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:27:1
   |
27 | / pub struct compose_functor {
28 | | // SAFETY: machine generated unsafe code
29 | |     pub fn_0: Option<unsafe extern "C" fn(*mut compose_functor, f64) -> f64>,
30 | |     pub f: *mut double_to_double,
31 | |     pub g: *mut double_to_double,
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
27 + #[non_exhaustive]
28 | pub struct compose_functor {
   |

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:34:1
   |
34 | pub extern "C" fn compose_call(mut this: *mut compose_functor, mut x: f64) -> f64 {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:37:9
   |
37 |         ((*(*this).f).fn_0).expect("non-null function pointer")(
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:37:14
   |
37 |         ((*(*this).f).fn_0).expect("non-null function pointer")(
   |              ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:38:15
   |
38 |             (*this).f,
   |               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:39:18
   |
39 |             ((*(*this).g).fn_0).expect("non-null function pointer")((*this).g, x),
   |                  ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:39:71
   |
39 |             ((*(*this).g).fn_0).expect("non-null function pointer")((*this).g, x),
   |                                                                       ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: used `expect()` on an `Option` value
  --> src/main.rs:37:9
   |
37 |         ((*(*this).f).fn_0).expect("non-null function pointer")(
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: used `expect()` on an `Option` value
  --> src/main.rs:39:13
   |
39 |             ((*(*this).g).fn_0).expect("non-null function pointer")((*this).g, x),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:18
   |
55 |             Some(compose_call as unsafe extern "C" fn(*mut compose_functor, f64) -> f64);
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:31
   |
84 |         (*my_sin).fn_0 = Some(sin_call as unsafe extern "C" fn(*mut double_to_double, f64) -> f64);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:18
   |
89 |             Some(asin_call as unsafe extern "C" fn(*mut double_to_double, f64) -> f64);
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 13 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 13 warnings (13 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.68s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/fusc_sequence)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (14 fixes)
warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:16:15
   |
16 |     } else if n % 2_i32 == 0_i32 {
   |               ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:19:16
   |
19 |         return fusc((n.wrapping_sub(1)) / 2) + fusc((n.wrapping_add(1)) / 2);
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:29:9
   |
29 |         sum;
   |         -^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:53:9
   |
53 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:64:9
   |
64 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:29:9
   |
29 |         sum;
   |         ^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:53:9
   |
53 |         i;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:64:9
   |
64 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 9 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 9 warnings (9 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.87s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/gaussian_elimination)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:27:18
   |
27 |             p1 = a.offset((r1 * n.wrapping_add(i)) as isize);
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:28:18
   |
28 |             p2 = a.offset((r2 * n.wrapping_add(i)) as isize);
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:16
   |
35 |         tmp = *b.offset(r1 as isize);
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:36:35
   |
36 |         *b.offset(r1 as isize) = *b.offset(r2 as isize);
   |                                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:36:10
   |
36 |         *b.offset(r1 as isize) = *b.offset(r2 as isize);
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:37:10
   |
37 |         *b.offset(r2 as isize) = tmp;
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:27
   |
27 |             p1 = a.offset((r1 * n.wrapping_add(i)) as isize);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:27:27
   |
27 |             p1 = a.offset((r1 * n.wrapping_add(i)) as isize);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:27
   |
28 |             p2 = a.offset((r2 * n.wrapping_add(i)) as isize);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:28:27
   |
28 |             p2 = a.offset((r2 * n.wrapping_add(i)) as isize);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:33:13
   |
33 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:25
   |
35 |         tmp = *b.offset(r1 as isize);
   |                         ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:44
   |
36 |         *b.offset(r1 as isize) = *b.offset(r2 as isize);
   |                                            ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:19
   |
36 |         *b.offset(r1 as isize) = *b.offset(r2 as isize);
   |                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:19
   |
37 |         *b.offset(r2 as isize) = tmp;
   |                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:56:20
   |
56 |             max = *a.offset((dia * n.wrapping_add(dia)) as isize);
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:59:29
   |
59 |                 tmp = fabs(*a.offset((row * n.wrapping_add(dia)) as isize));
   |                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:24
   |
70 |                 tmp = *a.offset((row * n.wrapping_add(dia)) as isize)
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:71:24
   |
71 |                     / *a.offset((dia * n.wrapping_add(dia)) as isize);
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:75:32
   |
75 |                         tmp * *a.offset((dia * n.wrapping_add(col)) as isize);
   |                                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:74:22
   |
74 |                     *a.offset((row * n.wrapping_add(col)) as isize) -=
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:79:18
   |
79 |                 *a.offset((row * n.wrapping_add(dia)) as isize) = f64::from(0_i32);
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:80:51
   |
80 |                 *b.offset(row as isize) -= tmp * *b.offset(dia as isize);
   |                                                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:80:18
   |
80 |                 *b.offset(row as isize) -= tmp * *b.offset(dia as isize);
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:89:20
   |
89 |             tmp = *b.offset(row as isize);
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:25
   |
92 |                 tmp -= *x.offset(j as isize) * *a.offset((row * n.wrapping_add(j)) as isize);
   |                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:49
   |
92 |                 tmp -= *x.offset(j as isize) * *a.offset((row * n.wrapping_add(j)) as isize);
   |                                                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:96:46
   |
96 |             *x.offset(row as isize) = tmp / *a.offset((row * n.wrapping_add(row)) as isize);
   |                                              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:96:14
   |
96 |             *x.offset(row as isize) = tmp / *a.offset((row * n.wrapping_add(row)) as isize);
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:29
   |
56 |             max = *a.offset((dia * n.wrapping_add(dia)) as isize);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:56:29
   |
56 |             max = *a.offset((dia * n.wrapping_add(dia)) as isize);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:38
   |
59 |                 tmp = fabs(*a.offset((row * n.wrapping_add(dia)) as isize));
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:59:38
   |
59 |                 tmp = fabs(*a.offset((row * n.wrapping_add(dia)) as isize));
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:65:17
   |
65 |                 row;
   |                 ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
  --> src/main.rs:70:23
   |
70 |                   tmp = *a.offset((row * n.wrapping_add(dia)) as isize)
   |  _______________________^
71 | |                     / *a.offset((dia * n.wrapping_add(dia)) as isize);
   | |_____________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:33
   |
70 |                 tmp = *a.offset((row * n.wrapping_add(dia)) as isize)
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:70:33
   |
70 |                 tmp = *a.offset((row * n.wrapping_add(dia)) as isize)
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:33
   |
71 |                     / *a.offset((dia * n.wrapping_add(dia)) as isize);
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:71:33
   |
71 |                     / *a.offset((dia * n.wrapping_add(dia)) as isize);
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: floating-point arithmetic detected
  --> src/main.rs:74:21
   |
74 | /                     *a.offset((row * n.wrapping_add(col)) as isize) -=
75 | |                         tmp * *a.offset((dia * n.wrapping_add(col)) as isize);
   | |_____________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:41
   |
75 |                         tmp * *a.offset((dia * n.wrapping_add(col)) as isize);
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:75:41
   |
75 |                         tmp * *a.offset((dia * n.wrapping_add(col)) as isize);
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:31
   |
74 |                     *a.offset((row * n.wrapping_add(col)) as isize) -=
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:74:31
   |
74 |                     *a.offset((row * n.wrapping_add(col)) as isize) -=
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:77:21
   |
77 |                     col;
   |                     ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:27
   |
79 |                 *a.offset((row * n.wrapping_add(dia)) as isize) = f64::from(0_i32);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:79:27
   |
79 |                 *a.offset((row * n.wrapping_add(dia)) as isize) = f64::from(0_i32);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: floating-point arithmetic detected
  --> src/main.rs:80:17
   |
80 |                 *b.offset(row as isize) -= tmp * *b.offset(dia as isize);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:60
   |
80 |                 *b.offset(row as isize) -= tmp * *b.offset(dia as isize);
   |                                                            ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:27
   |
80 |                 *b.offset(row as isize) -= tmp * *b.offset(dia as isize);
   |                           ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:82:17
   |
82 |                 row;
   |                 ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:85:13
   |
85 |             dia;
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:29
   |
89 |             tmp = *b.offset(row as isize);
   |                             ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:92:17
   |
92 |                 tmp -= *x.offset(j as isize) * *a.offset((row * n.wrapping_add(j)) as isize);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:34
   |
92 |                 tmp -= *x.offset(j as isize) * *a.offset((row * n.wrapping_add(j)) as isize);
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:58
   |
92 |                 tmp -= *x.offset(j as isize) * *a.offset((row * n.wrapping_add(j)) as isize);
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:92:58
   |
92 |                 tmp -= *x.offset(j as isize) * *a.offset((row * n.wrapping_add(j)) as isize);
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:94:17
   |
94 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
  --> src/main.rs:96:39
   |
96 |             *x.offset(row as isize) = tmp / *a.offset((row * n.wrapping_add(row)) as isize);
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:55
   |
96 |             *x.offset(row as isize) = tmp / *a.offset((row * n.wrapping_add(row)) as isize);
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:96:55
   |
96 |             *x.offset(row as isize) = tmp / *a.offset((row * n.wrapping_add(row)) as isize);
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:23
   |
96 |             *x.offset(row as isize) = tmp / *a.offset((row * n.wrapping_add(row)) as isize);
   |                       ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:98:13
   |
98 |             row;
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: approximate value of `f64::consts::PI` found
   --> src/main.rs:108:29
    |
108 |         100.28f64, 1.00f64, 3.14f64, 9.87f64, 31.01f64, 97.41f64, 306.02f64,
    |                             ^^^^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
    = note: `#[warn(clippy::approx_constant)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:116:26
    |
116 |         println!("{}", x[i as usize]);
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:26
    |
116 |         println!("{}", x[i as usize]);
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:118:9
    |
118 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:33:13
   |
33 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:65:17
   |
65 |                 row;
   |                 ^^^^

warning: path statement with no effect
  --> src/main.rs:77:21
   |
77 |                     col;
   |                     ^^^^

warning: path statement with no effect
  --> src/main.rs:82:17
   |
82 |                 row;
   |                 ^^^^

warning: path statement with no effect
  --> src/main.rs:85:13
   |
85 |             dia;
   |             ^^^^

warning: path statement with no effect
  --> src/main.rs:94:17
   |
94 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:98:13
   |
98 |             row;
   |             ^^^^

warning: path statement with no effect
   --> src/main.rs:118:9
    |
118 |         i;
    |         ^^

warning: `c2rust_out` (bin "main" test) generated 76 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 76 warnings (76 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.62s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/general_fizzbuzz)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (21 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:32:1
   |
32 | / pub struct replace_info {
33 | |     pub n: i32,
34 | |     pub text: *mut i8,
35 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
32 + #[non_exhaustive]
33 | pub struct replace_info {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:40
   |
40 |         let mut x: *mut replace_info = a as *mut replace_info;
   |                                        ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:40
   |
41 |         let mut y: *mut replace_info = b as *mut replace_info;
   |                                        ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:9
   |
42 |         (*x).n - (*y).n
   |         ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:62:35
   |
62 |                 if 0_i32 == i % (*info.offset(it as isize)).n {
   |                                   ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:65:50
   |
65 |                         build_str_from_raw_ptr((*info.offset(it as isize)).text.cast::<u8>())
   |                                                  ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:62:29
   |
62 |                 if 0_i32 == i % (*info.offset(it as isize)).n {
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:62:29
   |
62 |                 if 0_i32 == i % (*info.offset(it as isize)).n {
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:47
   |
62 |                 if 0_i32 == i % (*info.offset(it as isize)).n {
   |                                               ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:62
   |
65 |                         build_str_from_raw_ptr((*info.offset(it as isize)).text.cast::<u8>())
   |                                                              ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:70:17
   |
70 |                 it;
   |                 ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:23
   |
88 |                 text: (b"Buzz\0" as *const u8).cast::<i8>() as *mut i8,
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:23
   |
88 |                 text: (b"Buzz\0" as *const u8).cast::<i8>() as *mut i8,
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:23
   |
95 |                 text: (b"Baxx\0" as *const u8).cast::<i8>() as *mut i8,
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:23
   |
95 |                 text: (b"Baxx\0" as *const u8).cast::<i8>() as *mut i8,
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:23
    |
102 |                 text: (b"Fizz\0" as *const u8).cast::<i8>() as *mut i8,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:23
    |
102 |                 text: (b"Fizz\0" as *const u8).cast::<i8>() as *mut i8,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:18
    |
113 |             Some(compare as unsafe extern "C" fn(*const libc::c_void, *const libc::c_void) -> i32),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:70:17
   |
70 |                 it;
   |                 ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 22 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 22 warnings (22 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.93s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/generate_chess960_starting_position)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/generate_random_chess_position)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/generic_swap)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:15:1
   |
15 | / pub struct test {
16 | |     pub a: i32,
17 | |     pub b: i32,
18 | |     pub c: i32,
19 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
15 + #[non_exhaustive]
16 | pub struct test {
   |

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:33:27
   |
33 |             t = *a.offset(s as isize);
   |                           ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
33 |             t = *a.offset(isize::try_from(s));
   |                           ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:33:27
   |
33 |             t = *a.offset(s as isize);
   |                           ^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:27
   |
33 |             t = *a.offset(s as isize);
   |                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:34:47
   |
34 |             *a.offset(s as isize) = *b.offset(s as isize);
   |                                               ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
34 |             *a.offset(s as isize) = *b.offset(isize::try_from(s));
   |                                               ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:34:47
   |
34 |             *a.offset(s as isize) = *b.offset(s as isize);
   |                                               ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:47
   |
34 |             *a.offset(s as isize) = *b.offset(s as isize);
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:34:23
   |
34 |             *a.offset(s as isize) = *b.offset(s as isize);
   |                       ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
34 |             *a.offset(isize::try_from(s)) = *b.offset(s as isize);
   |                       ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:34:23
   |
34 |             *a.offset(s as isize) = *b.offset(s as isize);
   |                       ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:23
   |
34 |             *a.offset(s as isize) = *b.offset(s as isize);
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:35:23
   |
35 |             *b.offset(s as isize) = t;
   |                       ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
35 |             *b.offset(isize::try_from(s)) = t;
   |                       ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:35:23
   |
35 |             *b.offset(s as isize) = t;
   |                       ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:23
   |
35 |             *b.offset(s as isize) = t;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/gray_code)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (23 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:61:5
   |
61 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:46:30
   |
46 |         let mut b: *mut i8 = buf.offset(5_isize);
   |                              ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `i8` may truncate the value
  --> src/main.rs:50:18
   |
50 |             *b = ('0' as i32 + (n & 1i32)) as i8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
50 |             *b = i8::try_from('0' as i32 + (n & 1i32));
   |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:18
   |
50 |             *b = ('0' as i32 + (n & 1i32)) as i8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:50:18
   |
50 |             *b = ('0' as i32 + (n & 1i32)) as i8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:19
   |
50 |             *b = ('0' as i32 + (n & 1i32)) as i8;
   |                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:84:13
   |
84 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:90:1
   |
90 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:94:13
   |
94 | /             (::std::ffi::CString::new(arg))
95 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:94:13
   |
94 | /             (::std::ffi::CString::new(arg))
95 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:100:33
    |
100 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
100 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:100:33
    |
100 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:100:33
    |
100 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:100:33
    |
100 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:84:13
   |
84 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 15 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.63s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/greatest_subsequential_sum)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/guess_the_number_with_feedback)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (23 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:19:31
   |
19 |         let mut choice: i32 = (bounds[0_usize] + bounds[1_usize]) / 2;
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:38:22
   |
38 |             choice = (bounds[0_usize] + bounds[1_usize]) / 2_i32;
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:22
   |
40 |             if scanf((b"%1s\0" as *const u8).cast::<i8>(), input.as_mut_ptr()) != 1_i32 {
   |                      ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: `c2rust_out` (bin "main") generated 4 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 4 warnings (4 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.69s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/hailstone_sequence)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (22 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:25:24
   |
25 |                 arry = arry.offset(1);
   |                        ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:36:20
   |
36 |             arry = arry.offset(1);
   |                    ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: statement with no effect
  --> src/main.rs:22:13
   |
22 |             hs;
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:29:17
   |
29 |                 3_i32 * n.wrapping_add(1)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:59:13
   |
59 |             j;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:62:23
   |
62 |         arry = malloc((n as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:23
   |
62 |         arry = malloc((n as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:26
   |
70 |             *arry.offset((n - 4i32) as isize),
   |                          ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:70:26
   |
70 |             *arry.offset((n - 4i32) as isize),
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:26
   |
71 |             *arry.offset((n - 3i32) as isize),
   |                          ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:71:26
   |
71 |             *arry.offset((n - 3i32) as isize),
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:26
   |
72 |             *arry.offset((n - 2i32) as isize),
   |                          ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:72:26
   |
72 |             *arry.offset((n - 2i32) as isize),
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:26
   |
73 |             *arry.offset((n - 1i32) as isize),
   |                          ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:73:26
   |
73 |             *arry.offset((n - 1i32) as isize),
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:22:13
   |
22 |             hs;
   |             ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:59:13
   |
59 |             j;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 18 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 18 warnings (18 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.66s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/hamming_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/hash_from_two_arrays)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/haversine_formula)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_sub` found for type `f64` in the current scope
  --> src/main.rs:22:15
   |
22 |     ph1 = ph1.wrapping_sub(ph2);
   |               ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:31:49
   |
31 |         return asin(sqrt(dx * dx + dy * dy + dz.wrapping_mul(dz)) / 2 as f64)
   |                                                 ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 2 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 2 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/hilbert_curve)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (36 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:15:1
   |
15 | / pub struct point {
16 | |     pub x: i32,
17 | |     pub y: i32,
18 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
15 + #[non_exhaustive]
16 | pub struct point {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:26:40
   |
26 |                 (*p).x = n - 1_i32 - (*p).x;
   |                                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:26:19
   |
26 |                 (*p).x = n - 1_i32 - (*p).x;
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:27:40
   |
27 |                 (*p).y = n - 1_i32 - (*p).y;
   |                                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:27:19
   |
27 |                 (*p).y = n - 1_i32 - (*p).y;
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:29:19
   |
29 |             t = (*p).x;
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:30:24
   |
30 |             (*p).x = (*p).y;
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:30:15
   |
30 |             (*p).x = (*p).y;
   |               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:31:15
   |
31 |             (*p).y = t;
   |               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:26
   |
26 |                 (*p).x = n - 1_i32 - (*p).x;
   |                          ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:27:26
   |
27 |                 (*p).y = n - 1_i32 - (*p).y;
   |                          ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:44:11
   |
44 |         (*p).x = 0_i32;
   |           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:45:11
   |
45 |         (*p).y = 0_i32;
   |           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:50:15
   |
50 |             (*p).x += s.wrapping_mul(rx);
   |               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:51:15
   |
51 |             (*p).y += s.wrapping_mul(ry);
   |               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:50:13
   |
50 |             (*p).x += s.wrapping_mul(rx);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:51:13
   |
51 |             (*p).y += s.wrapping_mul(ry);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:43
   |
73 |             pts[x as usize][y as usize] = ' ' as i8;
   |                                           ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:73:17
   |
73 |             pts[x as usize][y as usize] = ' ' as i8;
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:17
   |
73 |             pts[x as usize][y as usize] = ' ' as i8;
   |                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:73:29
   |
73 |             pts[x as usize][y as usize] = ' ' as i8;
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:29
   |
73 |             pts[x as usize][y as usize] = ' ' as i8;
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:75:13
   |
75 |             y;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:78:9
   |
78 |         x;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:29
   |
82 |     pts[0_usize][0_usize] = '.' as i8;
   |                             ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:86:14
   |
86 |         cx = curr.x * 3_i32;
   |              ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:87:14
   |
87 |         cy = curr.y * 3_i32;
   |              ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:88:14
   |
88 |         px = prev.x * 3_i32;
   |              ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:89:14
   |
89 |         py = prev.y * 3_i32;
   |              ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:41
   |
90 |         pts[cx as usize][cy as usize] = '.' as i8;
   |                                         ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:90:13
   |
90 |         pts[cx as usize][cy as usize] = '.' as i8;
   |             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:13
   |
90 |         pts[cx as usize][cy as usize] = '.' as i8;
   |             ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:90:26
   |
90 |         pts[cx as usize][cy as usize] = '.' as i8;
   |                          ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:26
   |
90 |         pts[cx as usize][cy as usize] = '.' as i8;
   |                          ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `if` chain can be rewritten with `match`
   --> src/main.rs:91:9
    |
91  | /         if cx == px {
92  | |             if py < cy {
93  | |                 y = py.wrapping_add(1);
94  | |                 while y < cy {
...   |
120 | |             }
121 | |         }
    | |_________^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain
    = note: `#[warn(clippy::comparison_chain)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:52
   |
95 |                     pts[cx as usize][y as usize] = '|' as i8;
   |                                                    ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:95:25
   |
95 |                     pts[cx as usize][y as usize] = '|' as i8;
   |                         ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:25
   |
95 |                     pts[cx as usize][y as usize] = '|' as i8;
   |                         ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:95:38
   |
95 |                     pts[cx as usize][y as usize] = '|' as i8;
   |                                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:38
   |
95 |                     pts[cx as usize][y as usize] = '|' as i8;
   |                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:97:21
   |
97 |                     y;
   |                     -^
   |                     |
   |                     help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:52
    |
102 |                     pts[cx as usize][y as usize] = '|' as i8;
    |                                                    ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:102:25
    |
102 |                     pts[cx as usize][y as usize] = '|' as i8;
    |                         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:25
    |
102 |                     pts[cx as usize][y as usize] = '|' as i8;
    |                         ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:102:38
    |
102 |                     pts[cx as usize][y as usize] = '|' as i8;
    |                                      ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:38
    |
102 |                     pts[cx as usize][y as usize] = '|' as i8;
    |                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:104:21
    |
104 |                     y;
    |                     -^
    |                     |
    |                     help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:48
    |
110 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                                                ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:110:21
    |
110 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:21
    |
110 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:110:33
    |
110 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:33
    |
110 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                                 ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:112:17
    |
112 |                 x;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:48
    |
117 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                                                ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:117:21
    |
117 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:21
    |
117 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:117:33
    |
117 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:33
    |
117 |                 pts[x as usize][cy as usize] = '_' as i8;
    |                                 ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:119:17
    |
119 |                 x;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:124:9
    |
124 |         d;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:130:40
    |
130 |             print!("{}", i32::from(pts[y as usize][x as usize]));
    |                                        ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:40
    |
130 |             print!("{}", i32::from(pts[y as usize][x as usize]));
    |                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:130:52
    |
130 |             print!("{}", i32::from(pts[y as usize][x as usize]));
    |                                                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:52
    |
130 |             print!("{}", i32::from(pts[y as usize][x as usize]));
    |                                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:132:13
    |
132 |             y;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:136:9
    |
136 |         x;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:75:13
   |
75 |             y;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:78:9
   |
78 |         x;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:97:21
   |
97 |                     y;
   |                     ^^

warning: path statement with no effect
   --> src/main.rs:104:21
    |
104 |                     y;
    |                     ^^

warning: path statement with no effect
   --> src/main.rs:112:17
    |
112 |                 x;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:119:17
    |
119 |                 x;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:124:9
    |
124 |         d;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:132:13
    |
132 |             y;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:136:9
    |
136 |         x;
    |         ^^

warning: `c2rust_out` (bin "main" test) generated 76 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 76 warnings (76 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.04s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/hofstadter_q_sequence)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (22 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:37
   |
26 |               *q.offset(i as isize) = *q
   |  _____________________________________^
27 | |                 .offset((i - *q.offset((i.wrapping_sub(1i32)) as isize)) as isize)
28 | |                 + *q.offset((i - *q.offset((i.wrapping_sub(2i32)) as isize)) as isize);
   | |______________________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:25
   |
27 |                 .offset((i - *q.offset((i.wrapping_sub(1i32)) as isize)) as isize)
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:40
   |
27 |                 .offset((i - *q.offset((i.wrapping_sub(1i32)) as isize)) as isize)
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:29
   |
28 |                 + *q.offset((i - *q.offset((i.wrapping_sub(2i32)) as isize)) as isize);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:44
   |
28 |                 + *q.offset((i - *q.offset((i.wrapping_sub(2i32)) as isize)) as isize);
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:23
   |
26 |             *q.offset(i as isize) = *q
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:30:13
   |
30 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:42
   |
35 |                 print!("{}{}", *q.offset(i as isize), '\n' as i32)
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:55
   |
35 |                 print!("{}{}", *q.offset(i as isize), '\n' as i32)
   |                                                       ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:42
   |
37 |                 print!("{}{}", *q.offset(i as isize), ' ' as i32)
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:55
   |
37 |                 print!("{}{}", *q.offset(i as isize), ' ' as i32)
   |                                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:40:13
   |
40 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:46:13
   |
46 |             flip += i32::from(*q.offset(i as isize) > *q.offset((i.wrapping_add(1i32)) as isize));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:41
   |
46 |             flip += i32::from(*q.offset(i as isize) > *q.offset((i.wrapping_add(1i32)) as isize));
   |                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:65
   |
46 |             flip += i32::from(*q.offset(i as isize) > *q.offset((i.wrapping_add(1i32)) as isize));
   |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:48:13
   |
48 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:30:13
   |
30 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:40:13
   |
40 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:48:13
   |
48 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 20 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 20 warnings (20 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/horners_rule_for_polynomial_evaluation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:20:35
   |
20 |             res = res.mul_add(x, *coeffs.offset(i as isize));
   |                                   ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:49
   |
20 |             res = res.mul_add(x, *coeffs.offset(i as isize));
   |                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:22:13
   |
22 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:34:13
   |
34 | /             (::core::mem::size_of::<[f64; 4]>() as u64)
35 | |                 .wrapping_div(::core::mem::size_of::<f64>() as u64) as i32,
   | |__________________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
34 ~             i32::try_from((::core::mem::size_of::<[f64; 4]>() as u64)
35 ~                 .wrapping_div(::core::mem::size_of::<f64>() as u64)),
   |

warning: path statement with no effect
  --> src/main.rs:22:13
   |
22 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 6 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 6 warnings (6 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.55s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/host_introspection)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:18:8
   |
18 |     if *(&mut one as *mut i32 as *mut i8) != 0 {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

For more information about this error, try `rustc --explain E0133`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/huffman_coding)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (59 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:34:1
   |
34 | / pub struct huffcode {
35 | |     pub nbits: i32,
36 | |     pub code: i32,
37 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
34 + #[non_exhaustive]
35 | pub struct huffcode {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:42:1
   |
42 | / pub struct huffheap {
43 | |     pub h: *mut i32,
44 | |     pub n: i32,
45 | |     pub s: i32,
46 | |     pub cs: i32,
47 | |     pub f: *mut i64,
48 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
42 + #[non_exhaustive]
43 | pub struct huffheap {
   |

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:55:77
   |
55 |         (*h).h = malloc((::core::mem::size_of::<i32>() as u64).wrapping_mul(s as u64)).cast::<i32>();
   |                                                                             ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:77
   |
55 |         (*h).h = malloc((::core::mem::size_of::<i32>() as u64).wrapping_mul(s as u64)).cast::<i32>();
   |                                                                             ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:36
   |
79 |             if *((*heap).f).offset(*a.offset((i.wrapping_sub(1i32)) as isize) as isize)
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:46
   |
79 |             if *((*heap).f).offset(*a.offset((i.wrapping_sub(1i32)) as isize) as isize)
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:40
   |
80 |                 >= *((*heap).f).offset(*a.offset(i as isize) as isize)
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:50
   |
80 |                 >= *((*heap).f).offset(*a.offset(i as isize) as isize)
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:84:17
   |
84 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:32
   |
87 |                 t_ = *a.offset((i.wrapping_sub(1i32)) as isize);
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:72
   |
88 |                 *a.offset((i.wrapping_sub(1i32)) as isize) = *a.offset(i as isize);
   |                                                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:27
   |
88 |                 *a.offset((i.wrapping_sub(1i32)) as isize) = *a.offset(i as isize);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:27
   |
89 |                 *a.offset(i as isize) = t_;
   |                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:91:17
   |
91 |                 i;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:107:12
    |
107 |         if (*heap).n + 1_i32 > (*heap).s {
    |            ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:110:17
    |
110 |                 ((*heap).s + (*heap).cs) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:17
    |
110 |                 ((*heap).s + (*heap).cs) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:110:17
    |
110 |                 ((*heap).s + (*heap).cs) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:112:13
    |
112 |             (*heap).s += (*heap).cs;
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:29
    |
114 |         *((*heap).h).offset((*heap).n as isize) = c;
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:115:9
    |
115 |         (*heap).n += 1_i32;
    |         ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:116:9
    |
116 |         (*heap).n;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:125:13
    |
125 |             (*heap).n -= 1_i32;
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:126:13
    |
126 |             (*heap).n;
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:127:40
    |
127 |             return *((*heap).h).offset((*heap).n as isize);
    |                                        ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:147:13
    |
147 |             freqs as *const libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:151:13
    |
151 |             (&mut *efreqs.as_mut_ptr().offset(256_isize) as *mut i64).cast::<libc::c_void>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:161:23
    |
161 |             if efreqs[i as usize] > 0 {
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:23
    |
161 |             if efreqs[i as usize] > 0 {
    |                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:165:13
    |
165 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: variables in the condition are not mutated in the loop body
   --> src/main.rs:167:15
    |
167 |         while (*heap).n > 1_i32 {
    |               ^^^^^^^^^^^^^^^^^
    |
    = note: this may lead to an infinite or to a never running loop
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_immutable_condition
    = note: `#[warn(clippy::while_immutable_condition)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:170:37
    |
170 |             efreqs[extf as usize] = efreqs[r1 as usize] + efreqs[r2 as usize];
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:170:44
    |
170 |             efreqs[extf as usize] = efreqs[r1 as usize] + efreqs[r2 as usize];
    |                                            ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:170:44
    |
170 |             efreqs[extf as usize] = efreqs[r1 as usize] + efreqs[r2 as usize];
    |                                            ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:170:66
    |
170 |             efreqs[extf as usize] = efreqs[r1 as usize] + efreqs[r2 as usize];
    |                                                                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:170:66
    |
170 |             efreqs[extf as usize] = efreqs[r1 as usize] + efreqs[r2 as usize];
    |                                                                  ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:170:20
    |
170 |             efreqs[extf as usize] = efreqs[r1 as usize] + efreqs[r2 as usize];
    |                    ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:170:20
    |
170 |             efreqs[extf as usize] = efreqs[r1 as usize] + efreqs[r2 as usize];
    |                    ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:172:19
    |
172 |             preds[r1 as usize] = extf;
    |                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:19
    |
172 |             preds[r1 as usize] = extf;
    |                   ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:173:34
    |
173 |             preds[r2 as usize] = -extf;
    |                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:173:19
    |
173 |             preds[r2 as usize] = -extf;
    |                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:173:19
    |
173 |             preds[r2 as usize] = -extf;
    |                   ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:175:13
    |
175 |             extf;
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:178:15
    |
178 |         preds[r1 as usize] = r1;
    |               ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:178:15
    |
178 |         preds[r1 as usize] = r1;
    |               ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:188:23
    |
188 |             if efreqs[i as usize] == 0 {
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:188:23
    |
188 |             if efreqs[i as usize] == 0 {
    |                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:189:50
    |
189 |                 let fresh1 = &mut (*codes.offset(i as isize));
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:193:33
    |
193 |                 while abs(preds[ix as usize]) != ix {
    |                                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:193:33
    |
193 |                 while abs(preds[ix as usize]) != ix {
    |                                 ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:194:37
    |
194 |                     bc |= (if preds[ix as usize] >= 0_i32 { 1_i32 } else { 0_i32 }) << bn;
    |                                     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:194:37
    |
194 |                     bc |= (if preds[ix as usize] >= 0_i32 { 1_i32 } else { 0_i32 }) << bn;
    |                                     ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:195:36
    |
195 |                     ix = abs(preds[ix as usize]);
    |                                    ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:195:36
    |
195 |                     ix = abs(preds[ix as usize]);
    |                                    ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:197:21
    |
197 |                     bn;
    |                     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:199:50
    |
199 |                 let fresh2 = &mut (*codes.offset(i as isize));
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:201:33
    |
201 |                 (**codes.offset(i as isize)).nbits = bn;
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:202:33
    |
202 |                 (**codes.offset(i as isize)).code = bc;
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:205:13
    |
205 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:218:20
    |
218 |             free((*c.offset(i as isize)).cast::<libc::c_void>());
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:218:29
    |
218 |             free((*c.offset(i as isize)).cast::<libc::c_void>());
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:220:13
    |
220 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:230:10
    |
230 |         *s.offset(n as isize) = 0;
    |          ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:232:14
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = (c % 2_i32 + '0' as i32) as i8;
    |              ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:230:19
    |
230 |         *s.offset(n as isize) = 0;
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `i8` may truncate the value
   --> src/main.rs:232:58
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = (c % 2_i32 + '0' as i32) as i8;
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = i8::try_from(c % 2_i32 + '0' as i32);
    |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:232:58
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = (c % 2_i32 + '0' as i32) as i8;
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:232:58
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = (c % 2_i32 + '0' as i32) as i8;
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:232:59
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = (c % 2_i32 + '0' as i32) as i8;
    |                                                           ^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:232:71
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = (c % 2_i32 + '0' as i32) as i8;
    |                                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:232:23
    |
232 |             *s.offset((n.wrapping_sub(1i32)) as isize) = (c % 2_i32 + '0' as i32) as i8;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:235:13
    |
235 |             n;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:242:5
    |
242 |     (b"this is an example for huffman encoding\0" as *const u8).cast::<i8>();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:257:32
    |
257 |         while i32::from(*p) != '\0' as i32 {
    |                                ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:260:13
    |
260 |             freqs[*fresh3 as usize] += 1;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i8` to `usize` may lose the sign of the value
   --> src/main.rs:260:19
    |
260 |             freqs[*fresh3 as usize] += 1;
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:260:19
    |
260 |             freqs[*fresh3 as usize] += 1;
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:261:13
    |
261 |             freqs[*fresh3 as usize];
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i8` to `usize` may lose the sign of the value
   --> src/main.rs:261:19
    |
261 |             freqs[*fresh3 as usize];
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:261:19
    |
261 |             freqs[*fresh3 as usize];
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:266:28
    |
266 |             if !(*r.offset(i as isize)).is_null() {
    |                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:268:33
    |
268 |                     (**r.offset(i as isize)).code,
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:269:33
    |
269 |                     (**r.offset(i as isize)).nbits,
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:275:33
    |
275 |                     (**r.offset(i as isize)).code,
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:280:13
    |
280 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:84:17
   |
84 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:91:17
   |
91 |                 i;
   |                 ^^

warning: path statement with no effect
   --> src/main.rs:165:13
    |
165 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:175:13
    |
175 |             extf;
    |             ^^^^^

warning: path statement with no effect
   --> src/main.rs:197:21
    |
197 |                     bn;
    |                     ^^^

warning: path statement with no effect
   --> src/main.rs:205:13
    |
205 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:220:13
    |
220 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:235:13
    |
235 |             n;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:280:13
    |
280 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 96 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 96 warnings (96 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.01s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/identity_matrix)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:96:5
   |
96 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:38:13
   |
38 |             numElements as u64,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:13
   |
38 |             numElements as u64,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:50:21
   |
50 |         while row < rowsize as u32 {
   |                     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:21
   |
50 |         while row < rowsize as u32 {
   |                     ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:51:47
   |
51 |             let fresh0 = &mut (*matrix.offset(row as isize));
   |                                               ^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:47
   |
51 |             let fresh0 = &mut (*matrix.offset(row as isize));
   |                                               ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:52:30
   |
52 |             *fresh0 = calloc(numElements as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                              ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:30
   |
52 |             *fresh0 = calloc(numElements as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                              ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:53:32
   |
53 |             if (*matrix.offset(row as isize)).is_null() {
   |                                ^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:32
   |
53 |             if (*matrix.offset(row as isize)).is_null() {
   |                                ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:61:30
   |
61 |             *(*matrix.offset(row as isize)).offset(row as isize) = 1_i32;
   |                              ^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:30
   |
61 |             *(*matrix.offset(row as isize)).offset(row as isize) = 1_i32;
   |                              ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:61:52
   |
61 |             *(*matrix.offset(row as isize)).offset(row as isize) = 1_i32;
   |                                                    ^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:52
   |
61 |             *(*matrix.offset(row as isize)).offset(row as isize) = 1_i32;
   |                                                    ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:63:13
   |
63 |             row;
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:67:23
   |
67 |         while row_0 < rowsize as u32 {
   |                       ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:23
   |
67 |         while row_0 < rowsize as u32 {
   |                       ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:69:28
   |
69 |             while column < rowsize as u32 {
   |                            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:28
   |
69 |             while column < rowsize as u32 {
   |                            ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:72:38
   |
72 |                     *(*matrix.offset(row_0 as isize)).offset(column as isize)
   |                                      ^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:38
   |
72 |                     *(*matrix.offset(row_0 as isize)).offset(column as isize)
   |                                      ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:72:62
   |
72 |                     *(*matrix.offset(row_0 as isize)).offset(column as isize)
   |                                                              ^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:62
   |
72 |                     *(*matrix.offset(row_0 as isize)).offset(column as isize)
   |                                                              ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:75:17
   |
75 |                 column;
   |                 ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:79:13
   |
79 |             row_0;
   |             ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: used `expect()` on a `Result` value
  --> src/main.rs:89:13
   |
89 | /             (::std::ffi::CString::new(arg))
90 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:98:20
   |
98 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
98 |             main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()),
   |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:98:20
   |
98 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:20
   |
98 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:98:20
   |
98 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:85:1
   |
85 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:89:13
   |
89 | /             (::std::ffi::CString::new(arg))
90 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: path statement with no effect
  --> src/main.rs:63:13
   |
63 |             row;
   |             ^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:75:17
   |
75 |                 column;
   |                 ^^^^^^^

warning: path statement with no effect
  --> src/main.rs:79:13
   |
79 |             row_0;
   |             ^^^^^^

warning: `c2rust_out` (bin "main") generated 35 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 36 warnings (35 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/increasing_gaps_between_consecutive_niven_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/increment_a_numerical_string)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/infinity)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (6 fixes)
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.46s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/input_loop)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/integer)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:50:5
   |
50 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:24:31
   |
24 |         b = atoi(*argv.offset(argc as isize));
   |                               ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:31
   |
29 |         a = atoi(*argv.offset(argc as isize));
   |                               ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:30:30
   |
30 |         println!("a+b = {}", a + b);
   |                              ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:31:30
   |
31 |         println!("a-b = {}", a - b);
   |                              ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:32:30
   |
32 |         println!("a*b = {}", a * b);
   |                              ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:33:30
   |
33 |         println!("a/b = {}", a / b);
   |                              ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:34:30
   |
34 |         println!("a%b = {}", a % b);
   |                              ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:34:30
   |
34 |         println!("a%b = {}", a % b);
   |                              ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: used `expect()` on a `Result` value
  --> src/main.rs:43:13
   |
43 | /             (::std::ffi::CString::new(arg))
44 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:52:20
   |
52 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
52 |             main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()),
   |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:52:20
   |
52 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:20
   |
52 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:52:20
   |
52 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
   |                    ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 15 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:39:1
   |
39 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:43:13
   |
43 | /             (::std::ffi::CString::new(arg))
44 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 16 warnings (15 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.62s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/integer_comparison)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:13
   |
20 |             (b"%d %d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:21:13
   |
21 |             &mut a as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:13
   |
22 |             &mut b as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main" test) generated 4 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 4 warnings (4 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.62s
    Updating crates.io index
   Compiling autocfg v1.1.0
   Compiling libc v0.2.147
   Compiling cc v1.0.79
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/integer_roots)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

   Compiling num-traits v0.2.15
warning: `c2rust_out` (build script) generated 1 warning
   Compiling f128_internal v0.2.2
   Compiling f128_input v0.2.1
    Checking f128 v0.2.9
warning: unused `#[macro_use]` import
  --> lib.rs:10:1
   |
10 | #[macro_use]
   | ^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `c2rust_out` (lib) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib test) generated 2 warnings (2 duplicates)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/inverted_index)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/isbn13_check_digit)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (29 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:67:5
   |
67 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:28:38
   |
28 |         let mut ch: i32 = i32::from(*isbn);
   |                                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:45:20
   |
45 |             isbn = isbn.offset(1);
   |                    ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:46:29
   |
46 |             ch = i32::from(*isbn);
   |                             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:22
   |
32 |             if ch == ' ' as i32 || ch == '-' as i32 {
   |                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:42
   |
32 |             if ch == ' ' as i32 || ch == '-' as i32 {
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:34:17
   |
34 |                 count;
   |                 -^^^^^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:25
   |
36 |                 if ch < '0' as i32 || ch > '9' as i32 {
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:44
   |
36 |                 if ch < '0' as i32 || ch > '9' as i32 {
   |                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:40:21
   |
40 |                     sum += 3_i32 * (ch - '0' as i32);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:42
   |
40 |                     sum += 3_i32 * (ch - '0' as i32);
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:21
   |
42 |                     sum += ch - '0' as i32;
   |                     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:33
   |
42 |                     sum += ch - '0' as i32;
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:48:13
   |
48 |             count;
   |             -^^^^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:53:19
   |
53 |         i32::from(sum % 10_i32 == 0_i32)
   |                   ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:9
   |
60 |         (b"978-1734314502\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:9
   |
61 |         (b"978-1734314509\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:9
   |
62 |         (b"978-1788399081\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:9
   |
63 |         (b"978-1788399083\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:69:35
   |
69 |             if check_isbn13(isbns[i as usize]) != 0_i32 {
   |                                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:35
   |
69 |             if check_isbn13(isbns[i as usize]) != 0_i32 {
   |                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:44
   |
72 |                     build_str_from_raw_ptr(isbns[i as usize] as *mut u8)
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:72:50
   |
72 |                     build_str_from_raw_ptr(isbns[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:50
   |
72 |                     build_str_from_raw_ptr(isbns[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:44
   |
77 |                     build_str_from_raw_ptr(isbns[i as usize] as *mut u8)
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:77:50
   |
77 |                     build_str_from_raw_ptr(isbns[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:50
   |
77 |                     build_str_from_raw_ptr(isbns[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:81:13
   |
81 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:34:17
   |
34 |                 count;
   |                 ^^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:48:13
   |
48 |             count;
   |             ^^^^^^

warning: path statement with no effect
  --> src/main.rs:81:13
   |
81 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 32 warnings (32 duplicates)
warning: `c2rust_out` (bin "main" test) generated 32 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.84s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/iterated_digits_squaring)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (22 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:17:13
   |
17 |             s += x % 10_i32 * (x % 10_i32);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:17:18
   |
17 |             s += x % 10_i32 * (x % 10_i32);
   |                  ^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:17:31
   |
17 |             s += x % 10_i32 * (x % 10_i32);
   |                               ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:134:26
    |
134 |                     sums[i as usize].wrapping_add(sums[(i - s) as usize]);
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:134:26
    |
134 |                     sums[i as usize].wrapping_add(sums[(i - s) as usize]);
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:134:56
    |
134 |                     sums[i as usize].wrapping_add(sums[(i - s) as usize]);
    |                                                        ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:134:56
    |
134 |                     sums[i as usize].wrapping_add(sums[(i - s) as usize]);
    |                                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:134:56
    |
134 |                     sums[i as usize].wrapping_add(sums[(i - s) as usize]);
    |                                                        ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:133:22
    |
133 |                 sums[i as usize] =
    |                      ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:133:22
    |
133 |                 sums[i as usize] =
    |                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:136:17
    |
136 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
   --> src/main.rs:139:13
    |
139 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:143:21
    |
143 |         while i_0 < n * 81_i32 + 1_i32 {
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:145:25
    |
145 |                 if sums[i_0 as usize] > (!0u64).wrapping_sub(count89) {
    |                         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:145:25
    |
145 |                 if sums[i_0 as usize] > (!0u64).wrapping_sub(count89) {
    |                         ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:149:55
    |
149 |                 count89 = (count89).wrapping_add(sums[i_0 as usize]);
    |                                                       ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:149:55
    |
149 |                 count89 = (count89).wrapping_add(sums[i_0 as usize]);
    |                                                       ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:152:13
    |
152 |             i_0;
    |             -^^^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:156:9
    |
156 |         n;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:136:17
    |
136 |                 j;
    |                 ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:139:13
    |
139 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:152:13
    |
152 |             i_0;
    |             ^^^^

warning: path statement with no effect
   --> src/main.rs:156:9
    |
156 |         n;
    |         ^^

warning: `c2rust_out` (bin "main") generated 24 warnings (24 duplicates)
warning: `c2rust_out` (bin "main" test) generated 24 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.65s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/jacobi_symbol)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
 --> src/main.rs:1:2
  |
1 |
  |  ^ consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/jortsort)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/josephus_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (9 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:17:13
   |
17 |         m = (m.wrapping_add(k)) % a;
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:17:13
   |
17 |         m = (m.wrapping_add(k)) % a;
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: statement with no effect
  --> src/main.rs:19:9
   |
19 |         a;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:35:27
   |
35 |             .wrapping_div(k.wrapping_sub(1));
   |                           ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:60
   |
42 |         m = m.wrapping_add(q.wrapping_mul(k)).wrapping_rem(a);
   |                                                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:57:13
   |
57 |         jos(n as i32, k as i32, 0)
   |             ^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
57 |         jos(i32::try_from(n), k as i32, 0)
   |             ~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:13
   |
57 |         jos(n as i32, k as i32, 0)
   |             ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:57:23
   |
57 |         jos(n as i32, k as i32, 0)
   |                       ^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
57 |         jos(n as i32, i32::try_from(k), 0)
   |                       ~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:23
   |
57 |         jos(n as i32, k as i32, 0)
   |                       ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:18
   |
71 |     print!("{}", '\n' as i32);
   |                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:19:9
   |
19 |         a;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 12 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.57s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/kernighans_large_earthquake_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (17 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:120:5
    |
120 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:39:1
   |
39 | / pub struct _IO_FILE {
40 | |     pub _flags: i32,
41 | |     pub _IO_read_ptr: *mut i8,
42 | |     pub _IO_read_end: *mut i8,
...  |
68 | |     pub _unused2: [i8; 20],
69 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
39 + #[non_exhaustive]
40 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:13
   |
82 |             (b"data.txt\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:13
   |
83 |             (b"r\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:32
   |
98 |             lw = strrchr(line, ' ' as i32);
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:32
   |
99 |             lt = strrchr(line, '\t' as i32);
   |                                ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: taken reference of right operand
   --> src/main.rs:100:16
    |
100 |             if lw.is_null() & &lt.is_null() {
    |                ^^^^^^^^^^^^^^^-------------
    |                               |
    |                               help: use the right value directly: `lt.is_null()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref
    = note: `#[warn(clippy::op_ref)]` on by default

warning: `c2rust_out` (bin "main") generated 8 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 8 warnings (8 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.89s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/k_means_clustering)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:65:22
   |
65 |     return x * x + y.wrapping_mul(y);
   |                      ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
   --> src/main.rs:310:21
    |
310 |         cx = (max_x.wrapping_add(min_x)) / 2 as f64;
    |                     ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
   --> src/main.rs:311:21
    |
311 |         cy = (max_y.wrapping_add(min_y)) / 2 as f64;
    |                     ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 3 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 3 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/knapsack_problem_0_1)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (71 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:31:1
   |
31 | / pub struct item_t {
32 | |     pub name: *mut i8,
33 | |     pub weight: i32,
34 | |     pub value: i32,
35 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
31 + #[non_exhaustive]
32 | pub struct item_t {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:19
   |
41 |             name: (b"map\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:19
   |
41 |             name: (b"map\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:19
   |
49 |             name: (b"compass\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:19
   |
49 |             name: (b"compass\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:19
   |
57 |             name: (b"water\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:19
   |
57 |             name: (b"water\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:19
   |
65 |             name: (b"sandwich\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:19
   |
65 |             name: (b"sandwich\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:19
   |
73 |             name: (b"glucose\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:19
   |
73 |             name: (b"glucose\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:19
   |
81 |             name: (b"tin\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:19
   |
81 |             name: (b"tin\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:19
   |
89 |             name: (b"banana\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:19
   |
89 |             name: (b"banana\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:19
   |
97 |             name: (b"apple\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:19
   |
97 |             name: (b"apple\0" as *const u8).cast::<i8>() as *mut i8,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:19
    |
105 |             name: (b"cheese\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:19
    |
105 |             name: (b"cheese\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:19
    |
113 |             name: (b"beer\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:19
    |
113 |             name: (b"beer\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:19
    |
121 |             name: (b"suntan cream\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:19
    |
121 |             name: (b"suntan cream\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:129:19
    |
129 |             name: (b"camera\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:129:19
    |
129 |             name: (b"camera\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:19
    |
137 |             name: (b"T-shirt\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:19
    |
137 |             name: (b"T-shirt\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:145:19
    |
145 |             name: (b"trousers\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:145:19
    |
145 |             name: (b"trousers\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:19
    |
153 |             name: (b"umbrella\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:19
    |
153 |             name: (b"umbrella\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:19
    |
161 |             name: (b"waterproof trousers\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:19
    |
161 |             name: (b"waterproof trousers\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:169:19
    |
169 |             name: (b"waterproof overclothes\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:169:19
    |
169 |             name: (b"waterproof overclothes\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:177:19
    |
177 |             name: (b"note-case\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:177:19
    |
177 |             name: (b"note-case\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:185:19
    |
185 |             name: (b"sunglasses\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:185:19
    |
185 |             name: (b"sunglasses\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:193:19
    |
193 |             name: (b"towel\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:193:19
    |
193 |             name: (b"towel\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:201:19
    |
201 |             name: (b"socks\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:201:19
    |
201 |             name: (b"socks\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:209:19
    |
209 |             name: (b"book\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:209:19
    |
209 |             name: (b"book\0" as *const u8).cast::<i8>() as *mut i8,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:241:22
    |
241 |                 if (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight > j {
    |                      ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:247:32
    |
247 |                         (j - (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight) as isize,
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:248:27
    |
248 |                     ) + (*items_0.offset((i.wrapping_sub(1i32)) as isize)).value;
    |                           ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:265:24
    |
265 |                 j -= (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight;
    |                        ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:227:13
    |
227 |             ((n.wrapping_add(1i32)) * (w.wrapping_add(1))) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:227:13
    |
227 |             ((n.wrapping_add(1i32)) * (w.wrapping_add(1))) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:227:13
    |
227 |             ((n.wrapping_add(1i32)) * (w.wrapping_add(1))) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:231:13
    |
231 |             ((n.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:231:13
    |
231 |             ((n.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:237:42
    |
237 |             let fresh1 = &mut (*m.offset(i as isize));
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:238:23
    |
238 |             *fresh1 = &mut *mm.offset((i * (w.wrapping_add(1i32))) as isize) as *mut i32;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:238:39
    |
238 |             *fresh1 = &mut *mm.offset((i * (w.wrapping_add(1i32))) as isize) as *mut i32;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:238:39
    |
238 |             *fresh1 = &mut *mm.offset((i * (w.wrapping_add(1i32))) as isize) as *mut i32;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:241:37
    |
241 |                 if (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight > j {
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:243:37
    |
243 |                         *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(j as isize);
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:243:78
    |
243 |                         *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(j as isize);
    |                                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:242:33
    |
242 |                     *(*m.offset(i as isize)).offset(j as isize) =
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:242:53
    |
242 |                     *(*m.offset(i as isize)).offset(j as isize) =
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:245:37
    |
245 |                     a = *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(j as isize);
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:245:78
    |
245 |                     a = *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(j as isize);
    |                                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:246:25
    |
246 |                       b = *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(
    |  _________________________^
247 | |                         (j - (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight) as isize,
248 | |                     ) + (*items_0.offset((i.wrapping_sub(1i32)) as isize)).value;
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:246:37
    |
246 |                     b = *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:247:25
    |
247 |                         (j - (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight) as isize,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:247:47
    |
247 |                         (j - (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight) as isize,
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:248:42
    |
248 |                     ) + (*items_0.offset((i.wrapping_sub(1i32)) as isize)).value;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:249:33
    |
249 |                     *(*m.offset(i as isize)).offset(j as isize) = if a > b { a } else { b };
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:249:53
    |
249 |                     *(*m.offset(i as isize)).offset(j as isize) = if a > b { a } else { b };
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:252:17
    |
252 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
   --> src/main.rs:255:13
    |
255 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:257:20
    |
257 |         s = calloc(n as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
    |                    ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:257:20
    |
257 |         s = calloc(n as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
    |                    ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:261:28
    |
261 |             if *(*m.offset(i as isize)).offset(j as isize)
    |                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:261:48
    |
261 |             if *(*m.offset(i as isize)).offset(j as isize)
    |                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:262:31
    |
262 |                 > *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(j as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:262:72
    |
262 |                 > *(*m.offset((i.wrapping_sub(1i32)) as isize)).offset(j as isize)
    |                                                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:264:27
    |
264 |                 *s.offset((i.wrapping_sub(1i32)) as isize) = 1_i32;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:265:17
    |
265 |                 j -= (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:265:39
    |
265 |                 j -= (*items_0.offset((i.wrapping_sub(1i32)) as isize)).weight;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:268:13
    |
268 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `u64` to `i32` may truncate the value
   --> src/main.rs:284:13
    |
284 |           n = (::core::mem::size_of::<[item_t; 22]>() as u64)
    |  _____________^
285 | |             .wrapping_div(::core::mem::size_of::<item_t>() as u64) as i32;
    | |_________________________________________________________________________^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
284 ~         n = i32::try_from((::core::mem::size_of::<[item_t; 22]>() as u64)
285 ~             .wrapping_div(::core::mem::size_of::<item_t>() as u64));
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:289:26
    |
289 |             if *s.offset(i as isize) != 0_i32 {
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:292:50
    |
292 |                     build_str_from_raw_ptr(items[i as usize].name.cast::<u8>()),
    |                                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:292:50
    |
292 |                     build_str_from_raw_ptr(items[i as usize].name.cast::<u8>()),
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:293:27
    |
293 |                     items[i as usize].weight,
    |                           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:293:27
    |
293 |                     items[i as usize].weight,
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:294:27
    |
294 |                     items[i as usize].value
    |                           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:294:27
    |
294 |                     items[i as usize].value
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:296:17
    |
296 |                 tw += items[i as usize].weight;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:296:29
    |
296 |                 tw += items[i as usize].weight;
    |                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:296:29
    |
296 |                 tw += items[i as usize].weight;
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:297:17
    |
297 |                 tv += items[i as usize].value;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:297:29
    |
297 |                 tv += items[i as usize].value;
    |                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:297:29
    |
297 |                 tv += items[i as usize].value;
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:300:13
    |
300 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:252:17
    |
252 |                 j;
    |                 ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:255:13
    |
255 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:268:13
    |
268 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:300:13
    |
300 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 104 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 104 warnings (104 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.91s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/knapsack_problem_continuous)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/knights_tour)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/knuths_algorithm_s)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:23:5
   |
23 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:17:25
   |
17 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/langtons_ant)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (48 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:27:1
   |
27 | / pub struct _IO_FILE {
28 | |     pub _flags: i32,
29 | |     pub _IO_read_ptr: *mut i8,
30 | |     pub _IO_read_end: *mut i8,
...  |
56 | |     pub _unused2: [i8; 20],
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
27 + #[non_exhaustive]
28 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:31
   |
65 | pub static mut pix: *mut u8 = 0 as *const u8 as *mut u8;
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:31
   |
65 | pub static mut pix: *mut u8 = 0 as *const u8 as *mut u8;
   |                               ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:46
   |
81 |                     if i32::from(*pix.offset(k as isize)) != 0_i32 {
   |                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:25
   |
82 |                         '#' as i32
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:25
   |
84 |                         ' ' as i32
   |                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:88:17
   |
88 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:90:17
   |
90 |                 k;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:26
   |
92 |             print!("{}", '\n' as i32);
   |                          ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:94:13
   |
94 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:109:25
    |
109 |         pix = calloc(1, (w.wrapping_mul(h)) as u64).cast::<u8>();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:109:25
    |
109 |         pix = calloc(1, (w.wrapping_mul(h)) as u64).cast::<u8>();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:112:17
    |
112 |             i = y * w.wrapping_add(x);
    |                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:28
    |
113 |             if *pix.offset(i as isize) != 0 {
    |                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:115:22
    |
115 |                 dx = -dy;
    |                      ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:119:22
    |
119 |                 dy = -dx;
    |                      ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:60
    |
122 |             *pix.offset(i as isize) = u8::from(*pix.offset(i as isize) == 0);
    |                                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:25
    |
122 |             *pix.offset(i as isize) = u8::from(*pix.offset(i as isize) == 0);
    |                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:38
    |
123 |             if i32::from(*pix.offset(i as isize)) != 0_i32 {
    |                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:124:41
    |
124 |                 print!("\x1B[{};{}H{}", y + 1_i32, x + 1_i32, '#' as i32)
    |                                         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:124:52
    |
124 |                 print!("\x1B[{};{}H{}", y + 1_i32, x + 1_i32, '#' as i32)
    |                                                    ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:63
    |
124 |                 print!("\x1B[{};{}H{}", y + 1_i32, x + 1_i32, '#' as i32)
    |                                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:126:41
    |
126 |                 print!("\x1B[{};{}H{}", y + 1_i32, x + 1_i32, ' ' as i32)
    |                                         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:126:52
    |
126 |                 print!("\x1B[{};{}H{}", y + 1_i32, x + 1_i32, ' ' as i32)
    |                                                    ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:126:63
    |
126 |                 print!("\x1B[{};{}H{}", y + 1_i32, x + 1_i32, ' ' as i32)
    |                                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:134:21
    |
134 |                     pix as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:135:21
    |
135 |                     (w * h.wrapping_sub(1i32)) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:21
    |
135 |                     (w * h.wrapping_sub(1i32)) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:135:21
    |
135 |                     (w * h.wrapping_sub(1i32)) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:139:33
    |
139 |                     *pix.offset(i as isize) = 0;
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:143:17
    |
143 |                 x;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:148:21
    |
148 |                     pix.offset(1_isize) as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:149:21
    |
149 |                     (w * h.wrapping_sub(1i32)) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:149:21
    |
149 |                     (w * h.wrapping_sub(1i32)) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:149:21
    |
149 |                     (w * h.wrapping_sub(1i32)) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:33
    |
153 |                     *pix.offset(i as isize) = 0;
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:157:17
    |
157 |                 x;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:163:21
    |
163 |                     pix.offset(w as isize) as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:163:32
    |
163 |                     pix.offset(w as isize) as *const libc::c_void,
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:164:21
    |
164 |                     (w * (h.wrapping_sub(1i32))) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:164:21
    |
164 |                     (w * (h.wrapping_sub(1i32))) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:164:21
    |
164 |                     (w * (h.wrapping_sub(1i32))) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:167:32
    |
167 |                     pix.offset((w * (h.wrapping_sub(1i32))) as isize).cast::<libc::c_void>(),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:167:32
    |
167 |                     pix.offset((w * (h.wrapping_sub(1i32))) as isize).cast::<libc::c_void>(),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:169:21
    |
169 |                     w as u64,
    |                     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:169:21
    |
169 |                     w as u64,
    |                     ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:172:17
    |
172 |                 y;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:32
    |
176 |                     pix.offset(w as isize).cast::<libc::c_void>(),
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:177:21
    |
177 |                     pix as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:178:21
    |
178 |                     (w * (h.wrapping_sub(1i32))) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:178:21
    |
178 |                     (w * (h.wrapping_sub(1i32))) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:178:21
    |
178 |                     (w * (h.wrapping_sub(1i32))) as u64,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:180:55
    |
180 |                 memset(pix.cast::<libc::c_void>(), 0, w as u64);
    |                                                       ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:180:55
    |
180 |                 memset(pix.cast::<libc::c_void>(), 0, w as u64);
    |                                                       ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:182:17
    |
182 |                 y;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:188:50
    |
188 |             print!("\x1B[{};{}H\x1B[31m@\x1B[m", y + 1_i32, x + 1_i32);
    |                                                  ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:188:61
    |
188 |             print!("\x1B[{};{}H\x1B[31m@\x1B[m", y + 1_i32, x + 1_i32);
    |                                                             ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:215:1
    |
215 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:219:13
    |
219 | /             (::std::ffi::CString::new(arg))
220 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:219:13
    |
219 | /             (::std::ffi::CString::new(arg))
220 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:225:33
    |
225 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
225 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:225:33
    |
225 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:225:33
    |
225 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:225:33
    |
225 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:88:17
   |
88 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:90:17
   |
90 |                 k;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:94:13
   |
94 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:143:17
    |
143 |                 x;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:157:17
    |
157 |                 x;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:172:17
    |
172 |                 y;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:182:17
    |
182 |                 y;
    |                 ^^

warning: `c2rust_out` (bin "main" test) generated 71 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 70 warnings (70 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.95s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/largest_int_from_concatenated_ints)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (9 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:13
   |
27 |             (b"%d%d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:14
   |
28 |             *(a as *mut i32),
   |              ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:14
   |
29 |             *(b as *mut i32),
   |              ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:13
   |
33 |             (b"%d%d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:14
   |
34 |             *(b as *mut i32),
   |              ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:14
   |
35 |             *(a as *mut i32),
   |              ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:55:27
   |
55 |             print!("{}", *a.offset(i as isize));
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:48:13
   |
48 |             len as u64,
   |             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:13
   |
48 |             len as u64,
   |             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:18
   |
51 |             Some(catcmp as unsafe extern "C" fn(*const libc::c_void, *const libc::c_void) -> i32),
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:36
   |
55 |             print!("{}", *a.offset(i as isize));
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:57:13
   |
57 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:22
   |
59 |         print!("{}", '\n' as i32);
   |                      ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:68:9
   |
68 | /         (::core::mem::size_of::<[i32; 8]>() as u64)
69 | |             .wrapping_div(::core::mem::size_of::<i32>() as u64) as i32,
   | |______________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
68 ~         i32::try_from((::core::mem::size_of::<[i32; 8]>() as u64)
69 ~             .wrapping_div(::core::mem::size_of::<i32>() as u64)),
   |

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:73:9
   |
73 | /         (::core::mem::size_of::<[i32; 4]>() as u64)
74 | |             .wrapping_div(::core::mem::size_of::<i32>() as u64) as i32,
   | |______________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
73 ~         i32::try_from((::core::mem::size_of::<[i32; 4]>() as u64)
74 ~             .wrapping_div(::core::mem::size_of::<i32>() as u64)),
   |

warning: path statement with no effect
  --> src/main.rs:57:13
   |
57 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 17 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 17 warnings (17 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.65s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/last_letter_first_letter)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/leap_year)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/least_common_multiple)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:17:28
   |
17 |         m = n.wrapping_rem(m);
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:25:5
   |
25 |     m / gcd(m, n) * n
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.47s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/left_factorials)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: statement with no effect
  --> src/main.rs:21:9
   |
21 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:40:40
   |
40 |         if i > 10 { i.wrapping_rem(10);0_i32; }
   |                                        -^^^^^
   |                                        |
   |                                        help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:42:9
   |
42 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:21:9
   |
21 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: unused return value of `core::num::<impl u64>::wrapping_rem` that must be used
  --> src/main.rs:40:21
   |
40 |         if i > 10 { i.wrapping_rem(10);0_i32; }
   |                     ^^^^^^^^^^^^^^^^^^
   |
   = note: this returns the result of the operation, without modifying the original
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
40 |         if i > 10 { let _ = i.wrapping_rem(10);0_i32; }
   |                     +++++++

warning: path statement with no effect
  --> src/main.rs:42:9
   |
42 |         i;
   |         ^^

warning: `c2rust_out` (bin "main" test) generated 7 warnings (1 duplicate)
       Fixed src/main.rs (1 fix)
warning: `c2rust_out` (bin "main") generated 7 warnings (7 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.64s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/leonardo_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (9 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:27
   |
26 |             print!(" {}", a + b + step);
   |                           ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:29:17
   |
29 |             b = temp + b.wrapping_add(step);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:32:9
   |
32 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:13
   |
44 |             (b"%d%d%d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:13
   |
45 |             &mut a as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:13
   |
46 |             &mut b as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:13
   |
47 |             &mut step as *mut i32,
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:32:9
   |
32 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 9 warnings (5 duplicates)
warning: `c2rust_out` (bin "main" test) generated 9 warnings (5 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.16s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/levenshtein_distance)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:28:23
   |
28 |         if i32::from(*s.offset((ls.wrapping_sub(1i32)) as isize))
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:29:27
   |
29 |             == i32::from(*t.offset((lt.wrapping_sub(1i32)) as isize))
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:32
   |
28 |         if i32::from(*s.offset((ls.wrapping_sub(1i32)) as isize))
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:36
   |
29 |             == i32::from(*t.offset((lt.wrapping_sub(1i32)) as isize))
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:33
   |
49 |         let mut s1: *const i8 = (b"rosettacode\0" as *const u8).cast::<i8>();
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:33
   |
50 |         let mut s2: *const i8 = (b"raisethysword\0" as *const u8).cast::<i8>();
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:13
   |
52 |             (b"distance between `%s' and `%s': %d\n\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:55:29
   |
55 |             levenshtein(s1, strlen(s1) as i32, s2, strlen(s2) as i32),
   |                             ^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
55 |             levenshtein(s1, i32::try_from(strlen(s1)), s2, strlen(s2) as i32),
   |                             ~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:29
   |
55 |             levenshtein(s1, strlen(s1) as i32, s2, strlen(s2) as i32),
   |                             ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:55:52
   |
55 |             levenshtein(s1, strlen(s1) as i32, s2, strlen(s2) as i32),
   |                                                    ^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
55 |             levenshtein(s1, strlen(s1) as i32, s2, i32::try_from(strlen(s2))),
   |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:52
   |
55 |             levenshtein(s1, strlen(s1) as i32, s2, strlen(s2) as i32),
   |                                                    ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 12 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.60s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/levenshtein_distance_alignment)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/list_comprehensions)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:8:12
  |
8 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib test) generated 2 warnings (2 duplicates)
       Fixed src/main.rs (49 fixes)
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
  --> src/main.rs:10:12
   |
10 | #![feature(label_break_value)]
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(stable_features)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:19:1
   |
19 | / pub struct List {
20 | |     pub nx: *mut List,
21 | |     pub val: [i8; 0],
22 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
19 + #[non_exhaustive]
20 | pub struct List {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:26:1
   |
26 | / pub struct Triple {
27 | |     pub _1: i32,
28 | |     pub _2: i32,
29 | |     pub _3: i32,
30 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
26 + #[non_exhaustive]
27 | pub struct Triple {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:34:1
   |
34 | / pub struct ITERATOR {
35 | |     pub l: *mut List,
36 | |     pub old: *mut List,
37 | |     pub p: *mut ITERATOR,
38 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
34 + #[non_exhaustive]
35 | pub struct ITERATOR {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:40
   |
40 | pub static mut FE_var: *mut ITERATOR = 0 as *const ITERATOR as *mut ITERATOR;
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:40
   |
40 | pub static mut FE_var: *mut ITERATOR = 0 as *const ITERATOR as *mut ITERATOR;
   |                                        ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:8
   |
43 |     l: 0 as *const List as *mut List,
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:8
   |
43 |     l: 0 as *const List as *mut List,
   |        ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:10
   |
44 |     old: 0 as *const List as *mut List,
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:10
   |
44 |     old: 0 as *const List as *mut List,
   |          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:8
   |
45 |     p: 0 as *const ITERATOR as *mut ITERATOR,
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:8
   |
45 |     p: 0 as *const ITERATOR as *mut ITERATOR,
   |        ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:50
   |
49 | pub static mut SEQ_var: *mut ITERATOR = unsafe { &SEQ_base as *const ITERATOR as *mut ITERATOR };
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:50
   |
49 | pub static mut SEQ_var: *mut ITERATOR = unsafe { &SEQ_base as *const ITERATOR as *mut ITERATOR };
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:57:64
   |
57 |         memcpy(((*l).val).as_mut_ptr().cast::<libc::c_void>(), val, sz as u64);
   |                                                                ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:55:73
   |
55 |             malloc((::core::mem::size_of::<List>() as u64).wrapping_add(sz as u64)).cast::<List>();
   |                                                                         ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:73
   |
55 |             malloc((::core::mem::size_of::<List>() as u64).wrapping_add(sz as u64)).cast::<List>();
   |                                                                         ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:57:69
   |
57 |         memcpy(((*l).val).as_mut_ptr().cast::<libc::c_void>(), val, sz as u64);
   |                                                                     ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:69
   |
57 |         memcpy(((*l).val).as_mut_ptr().cast::<libc::c_void>(), val, sz as u64);
   |                                                                     ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:19
   |
70 |         while !((*l).nx).is_null() {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:71:19
   |
71 |             l = (*l).nx;
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:73:11
   |
73 |         (*l).nx = listNew(sz, val);
   |           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:83:13
   |
83 |             ::core::mem::size_of::<i32>() as i32,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
83 |             i32::try_from(::core::mem::size_of::<i32>()),
   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:83:13
   |
83 |             ::core::mem::size_of::<i32>() as i32,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:13
   |
84 |             (&mut f as *mut i32).cast::<libc::c_void>(),
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:90:17
   |
90 |                 ::core::mem::size_of::<i32>() as i32,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
90 |                 i32::try_from(::core::mem::size_of::<i32>()),
   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:90:17
   |
90 |                 ::core::mem::size_of::<i32>() as i32,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:17
   |
91 |                 (&mut i as *mut i32).cast::<libc::c_void>(),
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:95:13
   |
95 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:19
    |
108 |           SEQ_var = &mut {
    |  ___________________^
109 | |             
110 | |             ITERATOR {
111 | |                 l: std::ptr::null_mut::<List>(),
...   |
114 | |             }
115 | |         } as *mut ITERATOR;
    | |__________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:18
    |
116 |           FE_var = &mut {
    |  __________________^
117 | |             
118 | |             ITERATOR {
119 | | // SAFETY: machine generated unsafe code
...   |
123 | |             }
124 | |         } as *mut ITERATOR;
    | |__________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:20
    |
120 |                 l: (intRangeList as unsafe extern "C" fn(i32, i32) -> *mut List)(1, n),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:126:13
    |
126 |             &mut x as *mut i32,
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:127:14
    |
127 |             *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<i32>(),
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:131:17
    |
131 |                 &mut x as *mut i32,
    |                 ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:132:18
    |
132 |                 *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<i32>(),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:139:22
    |
139 |               FE_var = &mut {
    |  ______________________^
140 | |                 
141 | |                 ITERATOR {
142 | | // SAFETY: machine generated unsafe code
...   |
146 | |                 }
147 | |             } as *mut ITERATOR;
    | |______________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:143:24
    |
143 |                     l: (intRangeList as unsafe extern "C" fn(i32, i32) -> *mut List)(x, n),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:149:17
    |
149 |                 &mut y as *mut i32,
    |                 ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:150:18
    |
150 |                 *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<i32>(),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:154:21
    |
154 |                     &mut y as *mut i32,
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:155:22
    |
155 |                     *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<i32>(),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:26
    |
162 |                   FE_var = &mut {
    |  __________________________^
163 | |                     
164 | |                     ITERATOR {
165 | | // SAFETY: machine generated unsafe code
...   |
169 | |                     }
170 | |                 } as *mut ITERATOR;
    | |__________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:166:28
    |
166 |                         l: (intRangeList as unsafe extern "C" fn(i32, i32) -> *mut List)(y, n),
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:21
    |
172 |                     &mut z as *mut i32,
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:173:22
    |
173 |                     *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<i32>(),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:177:25
    |
177 |                         &mut z as *mut i32,
    |                         ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:178:26
    |
178 |                         *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<i32>(),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:185:24
    |
185 |                     if x * x + y * y == z.wrapping_mul(z) {
    |                        ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:189:33
    |
189 | ...                   ::core::mem::size_of::<Triple>() as i32,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
189 |                                 i32::try_from(::core::mem::size_of::<Triple>()),
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:189:33
    |
189 | ...                   ::core::mem::size_of::<Triple>() as i32,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:33
    |
190 | / ...                   (&mut {
191 | | ...                       
192 | | ...                       Triple {
193 | | ...                           _1: x,
...   |
196 | | ...                       }
197 | | ...                   } as *mut Triple).cast::<libc::c_void>(),
    | |_______________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:200:52
    |
200 | ...                   (*SEQ_var).l = listNew(::core::mem::size_of::<Triple>() as i32, (&mut {
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
200 |                             (*SEQ_var).l = listNew(i32::try_from(::core::mem::size_of::<Triple>()), (&mut {
    |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:200:52
    |
200 | ...                   (*SEQ_var).l = listNew(::core::mem::size_of::<Triple>() as i32, (&mut {
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:200:93
    |
200 |   ...                   (*SEQ_var).l = listNew(::core::mem::size_of::<Triple>() as i32, (&mut {
    |  _______________________________________________________________________________________^
201 | | ...                       
202 | | ...                       Triple {
203 | | ...                           _1: x,
...   |
206 | | ...                       }
207 | | ...                   } as *mut Triple).cast::<libc::c_void>());
    | |_______________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:227:18
    |
227 |           FE_var = &mut {
    |  __________________^
228 | |             
229 | |             ITERATOR {
230 | |                 l: pTriples,
...   |
233 | |             }
234 | |         } as *mut ITERATOR;
    | |__________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:236:13
    |
236 |             &mut t as *mut Triple,
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:237:14
    |
237 |             *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<Triple>(),
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:241:17
    |
241 |                 &mut t as *mut Triple,
    |                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:242:18
    |
242 |                 *(&mut (*(*FE_var).l).val as *mut [i8; 0]).cast::<Triple>(),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:95:13
   |
95 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 62 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 62 warnings (62 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.68s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/longest_common_prefix)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (35 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:34:1
   |
34 | / pub struct __va_list_tag {
35 | |     pub gp_offset: u32,
36 | |     pub fp_offset: u32,
37 | |     pub overflow_arg_area: *mut libc::c_void,
38 | |     pub reg_save_area: *mut libc::c_void,
39 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
34 + #[non_exhaustive]
35 | pub struct __va_list_tag {
   |

warning: unsafe function's docs miss `# Safety` section
  --> src/main.rs:43:1
   |
43 | pub unsafe extern "C" fn lcp(mut num: i32, mut args: ...) -> *mut i8 {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc
   = note: `#[warn(clippy::missing_safety_doc)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:52:16
   |
52 |         malloc((num as u64).wrapping_mul(::core::mem::size_of::<*mut i8>() as u64)).cast::<*mut i8>();
   |                ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:16
   |
52 |         malloc((num as u64).wrapping_mul(::core::mem::size_of::<*mut i8>() as u64)).cast::<*mut i8>();
   |                ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:57:15
   |
57 |         len = strlen(vaList.arg::<*mut i8>()) as i32;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
57 |         len = i32::try_from(strlen(vaList.arg::<*mut i8>()));
   |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:15
   |
57 |         len = strlen(vaList.arg::<*mut i8>()) as i32;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:44
   |
58 |         let fresh0 = &mut (*strings.offset(i as isize));
   |                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:60:13
   |
60 |             ((len.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:13
   |
60 |             ((len.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:32
   |
62 |         strcpy(*strings.offset(i as isize), vaList2.arg::<*mut i8>());
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `if` has identical blocks
  --> src/main.rs:63:23
   |
63 |           if i == 0_i32 {
   |  _______________________^
64 | |             min = len;
65 | |         } else if len < min {
   | |_________^
   |
note: same as this
  --> src/main.rs:65:29
   |
65 |           } else if len < min {
   |  _____________________________^
66 | |             min = len;
67 | |         }
   | |_________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else
   = note: `#[warn(clippy::if_same_then_else)]` on by default

warning: statement with no effect
  --> src/main.rs:69:9
   |
69 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:16
   |
72 |         return (b"\0" as *const u8).cast::<i8>() as *mut i8;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:16
   |
72 |         return (b"\0" as *const u8).cast::<i8>() as *mut i8;
   |                ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:44
   |
78 |             if i32::from(*(*strings.offset(j as isize)).offset(i as isize))
   |                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:64
   |
78 |             if i32::from(*(*strings.offset(j as isize)).offset(i as isize))
   |                                                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:65
   |
79 |                 != i32::from(*(*strings.offset(0_isize)).offset(i as isize))
   |                                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:28
   |
82 |                     return (b"\0" as *const u8).cast::<i8>() as *mut i8;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:28
   |
82 |                     return (b"\0" as *const u8).cast::<i8>() as *mut i8;
   |                            ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:84:35
   |
84 |                     dest = malloc((i as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
   |                                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:35
   |
84 |                     dest = malloc((i as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
   |                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:88:25
   |
88 |                         (i.wrapping_sub(1i32)) as u64,
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:25
   |
88 |                         (i.wrapping_sub(1i32)) as u64,
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:94:13
   |
94 |             j;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:97:9
   |
97 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:100:16
    |
100 |         malloc(((min.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:100:16
    |
100 |         malloc(((min.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<i8>() as u64)).cast::<i8>();
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:101:45
    |
101 |     strncpy(dest, *strings.offset(0_isize), min as u64);
    |                                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:101:45
    |
101 |     strncpy(dest, *strings.offset(0_isize), min as u64);
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:69:9
   |
69 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:94:13
   |
94 |             j;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:97:9
   |
97 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 33 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 33 warnings (33 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.83s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/longest_common_substring)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/longest_increasing_subsequence)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/long_primes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (36 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:47:18
   |
47 |                 *primes.offset(fresh0 as isize) = i;
   |                  ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:51:10
   |
51 |         *count = n;
   |          ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:20:13
   |
20 |             (limit.wrapping_add(1i32)) as u64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:20:13
   |
20 |             (limit.wrapping_add(1i32)) as u64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:27
   |
31 |                 *c.offset(i as isize) = 1_i32;
   |                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:32:17
   |
32 |                 i += 2_i32 * p;
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:30
   |
36 |                 if *c.offset(p as isize) == 0_i32 {
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:26
   |
44 |             if *c.offset(i as isize) == 0_i32 {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:32
   |
47 |                 *primes.offset(fresh0 as isize) = i;
   |                                ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:64:13
   |
64 |         r = 10_i32 * r % n;
   |             ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:64:13
   |
64 |         r = 10_i32 * r % n;
   |             ^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: statement with no effect
  --> src/main.rs:66:9
   |
66 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:70:13
   |
70 |         r = 10_i32 * r % n;
   |             ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:70:13
   |
70 |         r = 10_i32 * r % n;
   |             ^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:72:9
   |
72 |         period;
   |         -^^^^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:95:23
   |
95 |           numberCount = (::core::mem::size_of::<[i32; 8]>() as u64)
   |  _______________________^
96 | |             .wrapping_div(::core::mem::size_of::<i32>() as u64) as i32;
   | |______________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
95 ~         numberCount = i32::try_from((::core::mem::size_of::<[i32; 8]>() as u64)
96 ~             .wrapping_div(::core::mem::size_of::<i32>() as u64));
   |

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:97:25
   |
97 |         totals = calloc(numberCount as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                         ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:25
   |
97 |         totals = calloc(numberCount as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                         ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:99:29
   |
99 |         longPrimes = calloc(primeCount as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                             ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:29
   |
99 |         longPrimes = calloc(primeCount as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                             ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:36
    |
102 |             prime = *primes.offset(i as isize);
    |                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:106:36
    |
106 |                 *longPrimes.offset(fresh1 as isize) = prime;
    |                                    ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:109:13
    |
109 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:35
    |
113 |             if *longPrimes.offset(i as isize) > numbers[index as usize] {
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:113:57
    |
113 |             if *longPrimes.offset(i as isize) > numbers[index as usize] {
    |                                                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:57
    |
113 |             if *longPrimes.offset(i as isize) > numbers[index as usize] {
    |                                                         ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:32
    |
116 |                 *totals.offset(fresh2 as isize) = count;
    |                                ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:119:13
    |
119 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:121:13
    |
121 |             count;
    |             -^^^^^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:24
    |
123 |         *totals.offset((numberCount.wrapping_sub(1i32)) as isize) = count;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:128:46
    |
128 |             print!("{} ", *longPrimes.offset(i as isize));
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:130:13
    |
130 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:138:25
    |
138 |                 numbers[i as usize],
    |                         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:138:25
    |
138 |                 numbers[i as usize],
    |                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:139:32
    |
139 |                 *totals.offset(i as isize)
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:142:13
    |
142 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:66:9
   |
66 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:72:9
   |
72 |         period;
   |         ^^^^^^^

warning: path statement with no effect
   --> src/main.rs:109:13
    |
109 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:119:13
    |
119 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:121:13
    |
121 |             count;
    |             ^^^^^^

warning: path statement with no effect
   --> src/main.rs:130:13
    |
130 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:142:13
    |
142 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 44 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 44 warnings (44 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.74s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/loop_over_multiple_arrays_simultaneously)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (11 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:13:31
   |
13 | pub static mut a1: [i8; 3] = ['a' as i8, 'b' as i8, 'c' as i8];
   |                               ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:13:42
   |
13 | pub static mut a1: [i8; 3] = ['a' as i8, 'b' as i8, 'c' as i8];
   |                                          ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:13:53
   |
13 | pub static mut a1: [i8; 3] = ['a' as i8, 'b' as i8, 'c' as i8];
   |                                                     ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:15:31
   |
15 | pub static mut a2: [i8; 3] = ['A' as i8, 'B' as i8, 'C' as i8];
   |                               ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:15:42
   |
15 | pub static mut a2: [i8; 3] = ['A' as i8, 'B' as i8, 'C' as i8];
   |                                          ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:15:53
   |
15 | pub static mut a2: [i8; 3] = ['A' as i8, 'B' as i8, 'C' as i8];
   |                                                     ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:25:30
   |
25 |                 i32::from(a1[i as usize]), i32::from(a2[i as usize]), a3[i as usize]
   |                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:30
   |
25 |                 i32::from(a1[i as usize]), i32::from(a2[i as usize]), a3[i as usize]
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:25:57
   |
25 |                 i32::from(a1[i as usize]), i32::from(a2[i as usize]), a3[i as usize]
   |                                                         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:57
   |
25 |                 i32::from(a1[i as usize]), i32::from(a2[i as usize]), a3[i as usize]
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:25:74
   |
25 |                 i32::from(a1[i as usize]), i32::from(a2[i as usize]), a3[i as usize]
   |                                                                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:74
   |
25 |                 i32::from(a1[i as usize]), i32::from(a2[i as usize]), a3[i as usize]
   |                                                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:28:13
   |
28 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:28:13
   |
28 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 15 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 15 warnings (15 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.55s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/loops_nested)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:23:5
   |
23 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:17:25
   |
17 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/lucas_lehmer_test)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:11:5
   |
11 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0425]: cannot find function `lucas_lehmer` in this scope
  --> src/main.rs:66:16
   |
66 |             if lucas_lehmer(i) != 0 {
   |                ^^^^^^^^^^^^ not found in this scope

For more information about this error, try `rustc --explain E0425`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/lu_decomposition)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (73 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:26:20
   |
26 |                 *(*x.offset(i as isize)).offset(j as isize) = f64::from(0_i32);
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:29
   |
26 |                 *(*x.offset(i as isize)).offset(j as isize) = f64::from(0_i32);
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:49
   |
26 |                 *(*x.offset(i as isize)).offset(j as isize) = f64::from(0_i32);
   |                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:28:17
   |
28 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:31:13
   |
31 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:41:77
   |
41 |             malloc((::core::mem::size_of::<*mut f64>() as u64).wrapping_mul(n as u64)).cast::<*mut f64>();
   |                                                                             ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:77
   |
41 |             malloc((::core::mem::size_of::<*mut f64>() as u64).wrapping_mul(n as u64)).cast::<*mut f64>();
   |                                                                             ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:45:31
   |
45 |                 .wrapping_mul(n as u64)
   |                               ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:31
   |
45 |                 .wrapping_mul(n as u64)
   |                               ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:46:31
   |
46 |                 .wrapping_mul(n as u64),
   |                               ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:31
   |
46 |                 .wrapping_mul(n as u64),
   |                               ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:42
   |
50 |             let fresh1 = &mut (*x.offset(i as isize));
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:51
   |
51 |             *fresh1 = (*x.offset(0_isize)).offset((n.wrapping_mul(i)) as isize);
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:53:13
   |
53 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:69:27
   |
69 |                 let vla = n as usize;
   |                           ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:27
   |
69 |                 let vla = n as usize;
   |                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:71:29
   |
71 |                     .offset(i as isize * vla as isize)
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:29
   |
71 |                     .offset(i as isize * vla as isize)
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `isize` may wrap around the value
  --> src/main.rs:71:42
   |
71 |                     .offset(i as isize * vla as isize)
   |                                          ^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:42
   |
71 |                     .offset(i as isize * vla as isize)
   |                                          ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:29
   |
72 |                     .offset(j as isize);
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:29
   |
70 |                 *(*x.offset(i as isize)).offset(j as isize) = *s.cast::<f64>()
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:49
   |
70 |                 *(*x.offset(i as isize)).offset(j as isize) = *s.cast::<f64>()
   |                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:74:17
   |
74 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:87:16
   |
87 |         free((*x.offset(0_isize)).cast::<libc::c_void>());
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:108:24
    |
108 |                 printf(fmt, *(*x.offset(i as isize)).offset(j as isize));
    |                        ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:108:32
    |
108 |                 printf(fmt, *(*x.offset(i as isize)).offset(j as isize));
    |                                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:19
   |
97 |             fmt = (b"%8.4g\0" as *const u8).cast::<i8>() as *mut i8;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:19
   |
97 |             fmt = (b"%8.4g\0" as *const u8).cast::<i8>() as *mut i8;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:41
    |
108 |                 printf(fmt, *(*x.offset(i as isize)).offset(j as isize));
    |                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:61
    |
108 |                 printf(fmt, *(*x.offset(i as isize)).offset(j as isize));
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:117:17
    |
117 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:120:13
    |
120 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:138:71
    |
138 |                     *(*c.offset(i as isize)).offset(j as isize) += *(*a.offset(i as isize))
    |                                                                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:140:30
    |
140 |                         * *(*b.offset(k as isize)).offset(j as isize);
    |                              ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: self-assignment of `c` to `c`
   --> src/main.rs:129:5
    |
129 |     c = c;
    |     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_assignment
    = note: `#[warn(clippy::self_assignment)]` on by default

warning: floating-point arithmetic detected
   --> src/main.rs:138:21
    |
138 | /                     *(*c.offset(i as isize)).offset(j as isize) += *(*a.offset(i as isize))
139 | |                         .offset(k as isize)
140 | |                         * *(*b.offset(k as isize)).offset(j as isize);
    | |_____________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:138:80
    |
138 |                     *(*c.offset(i as isize)).offset(j as isize) += *(*a.offset(i as isize))
    |                                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:139:33
    |
139 |                         .offset(k as isize)
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:140:39
    |
140 |                         * *(*b.offset(k as isize)).offset(j as isize);
    |                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:140:59
    |
140 |                         * *(*b.offset(k as isize)).offset(j as isize);
    |                                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:138:33
    |
138 |                     *(*c.offset(i as isize)).offset(j as isize) += *(*a.offset(i as isize))
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:138:53
    |
138 |                     *(*c.offset(i as isize)).offset(j as isize) += *(*a.offset(i as isize))
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:142:21
    |
142 |                     k;
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:145:17
    |
145 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:148:13
    |
148 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:162:20
    |
162 |                 *(*p.offset(i as isize)).offset(j as isize) = f64::from(i32::from(i == j));
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:177:28
    |
177 |                 if fabs(*(*a.offset(j_0 as isize)).offset(i_0 as isize))
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:178:31
    |
178 |                     > fabs(*(*a.offset(max_j as isize)).offset(i_0 as isize))
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:188:43
    |
188 |                     let mut tmp: f64 = *(*p.offset(i_0 as isize)).offset(k as isize);
    |                                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:190:28
    |
190 |                         *(*p.offset(max_j as isize)).offset(k as isize);
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:189:24
    |
189 |                     *(*p.offset(i_0 as isize)).offset(k as isize) =
    |                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:191:24
    |
191 |                     *(*p.offset(max_j as isize)).offset(k as isize) = tmp;
    |                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:29
    |
162 |                 *(*p.offset(i as isize)).offset(j as isize) = f64::from(i32::from(i == j));
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:49
    |
162 |                 *(*p.offset(i as isize)).offset(j as isize) = f64::from(i32::from(i == j));
    |                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:164:17
    |
164 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:167:13
    |
167 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:177:37
    |
177 |                 if fabs(*(*a.offset(j_0 as isize)).offset(i_0 as isize))
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:177:59
    |
177 |                 if fabs(*(*a.offset(j_0 as isize)).offset(i_0 as isize))
    |                                                           ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:178:40
    |
178 |                     > fabs(*(*a.offset(max_j as isize)).offset(i_0 as isize))
    |                                        ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:178:64
    |
178 |                     > fabs(*(*a.offset(max_j as isize)).offset(i_0 as isize))
    |                                                                ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:183:17
    |
183 |                 j_0;
    |                 ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:188:52
    |
188 |                     let mut tmp: f64 = *(*p.offset(i_0 as isize)).offset(k as isize);
    |                                                    ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:188:74
    |
188 |                     let mut tmp: f64 = *(*p.offset(i_0 as isize)).offset(k as isize);
    |                                                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:37
    |
190 |                         *(*p.offset(max_j as isize)).offset(k as isize);
    |                                     ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:190:61
    |
190 |                         *(*p.offset(max_j as isize)).offset(k as isize);
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:189:33
    |
189 |                     *(*p.offset(i_0 as isize)).offset(k as isize) =
    |                                 ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:189:55
    |
189 |                     *(*p.offset(i_0 as isize)).offset(k as isize) =
    |                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:191:33
    |
191 |                     *(*p.offset(max_j as isize)).offset(k as isize) = tmp;
    |                                 ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:191:57
    |
191 |                     *(*p.offset(max_j as isize)).offset(k as isize) = tmp;
    |                                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:193:21
    |
193 |                     k;
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:197:13
    |
197 |             i_0;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:212:16
    |
212 |             *(*L.offset(i as isize)).offset(i as isize) = 1_f64;
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:228:33
    |
228 |                         s += *(*L.offset(j as isize)).offset(k as isize)
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:229:34
    |
229 | ...                   * *(*U.offset(k as isize)).offset(i_0 as isize);
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:233:24
    |
233 |                     *(*U.offset(j as isize)).offset(i_0 as isize) =
    |                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:240:33
    |
240 |                         s += *(*L.offset(j as isize)).offset(k_0 as isize)
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:241:34
    |
241 | ...                   * *(*U.offset(k_0 as isize)).offset(i_0 as isize);
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:247:34
    |
247 | ...                   / *(*U.offset(i_0 as isize)).offset(i_0 as isize);
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:245:24
    |
245 |                     *(*L.offset(j as isize)).offset(i_0 as isize) =
    |                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:212:25
    |
212 |             *(*L.offset(i as isize)).offset(i as isize) = 1_f64;
    |                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:212:45
    |
212 |             *(*L.offset(i as isize)).offset(i as isize) = 1_f64;
    |                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:214:13
    |
214 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
   --> src/main.rs:228:25
    |
228 | /                         s += *(*L.offset(j as isize)).offset(k as isize)
229 | |                             * *(*U.offset(k as isize)).offset(i_0 as isize);
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:228:42
    |
228 |                         s += *(*L.offset(j as isize)).offset(k as isize)
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:228:62
    |
228 |                         s += *(*L.offset(j as isize)).offset(k as isize)
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:229:43
    |
229 | ...                   * *(*U.offset(k as isize)).offset(i_0 as isize);
    |                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:229:63
    |
229 | ...                   * *(*U.offset(k as isize)).offset(i_0 as isize);
    |                                                         ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:231:25
    |
231 |                         k;
    |                         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
   --> src/main.rs:234:25
    |
234 |                         *(*Aprime.offset(j as isize)).offset(i_0 as isize) - s;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:234:42
    |
234 |                         *(*Aprime.offset(j as isize)).offset(i_0 as isize) - s;
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:234:62
    |
234 |                         *(*Aprime.offset(j as isize)).offset(i_0 as isize) - s;
    |                                                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:233:33
    |
233 |                     *(*U.offset(j as isize)).offset(i_0 as isize) =
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:233:53
    |
233 |                     *(*U.offset(j as isize)).offset(i_0 as isize) =
    |                                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:240:25
    |
240 | /                         s += *(*L.offset(j as isize)).offset(k_0 as isize)
241 | |                             * *(*U.offset(k_0 as isize)).offset(i_0 as isize);
    | |_____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:240:42
    |
240 |                         s += *(*L.offset(j as isize)).offset(k_0 as isize)
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:240:62
    |
240 |                         s += *(*L.offset(j as isize)).offset(k_0 as isize)
    |                                                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:241:43
    |
241 | ...                   * *(*U.offset(k_0 as isize)).offset(i_0 as isize);
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:241:65
    |
241 | ...                   * *(*U.offset(k_0 as isize)).offset(i_0 as isize);
    |                                                           ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:243:25
    |
243 |                         k_0;
    |                         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
   --> src/main.rs:246:25
    |
246 | /                         (*(*Aprime.offset(j as isize)).offset(i_0 as isize) - s)
247 | |                             / *(*U.offset(i_0 as isize)).offset(i_0 as isize);
    | |_____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:246:43
    |
246 |                         (*(*Aprime.offset(j as isize)).offset(i_0 as isize) - s)
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:246:63
    |
246 |                         (*(*Aprime.offset(j as isize)).offset(i_0 as isize) - s)
    |                                                               ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:247:43
    |
247 | ...                   / *(*U.offset(i_0 as isize)).offset(i_0 as isize);
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:247:65
    |
247 | ...                   / *(*U.offset(i_0 as isize)).offset(i_0 as isize);
    |                                                           ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:245:33
    |
245 |                     *(*L.offset(j as isize)).offset(i_0 as isize) =
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:245:53
    |
245 |                     *(*L.offset(j as isize)).offset(i_0 as isize) =
    |                                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:250:17
    |
250 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:253:13
    |
253 |             i_0;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:263:20
    |
263 |     [1_f64, 1_f64, 0_i32 as f64],
    |                    ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:28:17
   |
28 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:31:13
   |
31 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:53:13
   |
53 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:74:17
   |
74 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:77:13
   |
77 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:117:17
    |
117 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:120:13
    |
120 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:142:21
    |
142 |                     k;
    |                     ^^

warning: path statement with no effect
   --> src/main.rs:145:17
    |
145 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:148:13
    |
148 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:164:17
    |
164 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:167:13
    |
167 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:183:17
    |
183 |                 j_0;
    |                 ^^^^

warning: path statement with no effect
   --> src/main.rs:193:21
    |
193 |                     k;
    |                     ^^

warning: path statement with no effect
   --> src/main.rs:197:13
    |
197 |             i_0;
    |             ^^^^

warning: path statement with no effect
   --> src/main.rs:214:13
    |
214 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:231:25
    |
231 |                         k;
    |                         ^^

warning: path statement with no effect
   --> src/main.rs:243:25
    |
243 |                         k_0;
    |                         ^^^^

warning: path statement with no effect
   --> src/main.rs:250:17
    |
250 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:253:13
    |
253 |             i_0;
    |             ^^^^

warning: `c2rust_out` (bin "main") generated 132 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 132 warnings (132 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.90s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/luhn_test_of_credit_card_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (25 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:60:5
   |
60 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:34:20
   |
34 |         i = strlen(cc) as i32;
   |                    ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:41:45
   |
41 |             let mut digit: i32 = i32::from(*cc.offset(i as isize)) - '0' as i32;
   |                                             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:34:13
   |
34 |         i = strlen(cc) as i32;
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
34 |         i = i32::try_from(strlen(cc));
   |             ~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:13
   |
34 |         i = strlen(cc) as i32;
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:41:34
   |
41 |             let mut digit: i32 = i32::from(*cc.offset(i as isize)) - '0' as i32;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:55
   |
41 |             let mut digit: i32 = i32::from(*cc.offset(i as isize)) - '0' as i32;
   |                                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:70
   |
41 |             let mut digit: i32 = i32::from(*cc.offset(i as isize)) - '0' as i32;
   |                                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:13
   |
42 |             sum += if odd != 0_i32 { digit } else { m[digit as usize] };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:42:55
   |
42 |             sum += if odd != 0_i32 { digit } else { m[digit as usize] };
   |                                                       ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:55
   |
42 |             sum += if odd != 0_i32 { digit } else { m[digit as usize] };
   |                                                       ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:45:19
   |
45 |         i32::from(sum % 10_i32 == 0i32)
   |                   ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:9
   |
51 |         (b"49927398716\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:9
   |
52 |         (b"49927398717\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:9
   |
53 |         (b"1234567812345678\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:9
   |
54 |         (b"1234567812345670\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:61:20
   |
61 |         while !(cc[i as usize]).is_null() {
   |                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:20
   |
61 |         while !(cc[i as usize]).is_null() {
   |                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:62:24
   |
62 |             if luhn(cc[i as usize]) != 0_i32 {
   |                        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:24
   |
62 |             if luhn(cc[i as usize]) != 0_i32 {
   |                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:44
   |
65 |                     build_str_from_raw_ptr(cc[i as usize] as *mut u8)
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:65:47
   |
65 |                     build_str_from_raw_ptr(cc[i as usize] as *mut u8)
   |                                               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:47
   |
65 |                     build_str_from_raw_ptr(cc[i as usize] as *mut u8)
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:44
   |
70 |                     build_str_from_raw_ptr(cc[i as usize] as *mut u8)
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:70:47
   |
70 |                     build_str_from_raw_ptr(cc[i as usize] as *mut u8)
   |                                               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:47
   |
70 |                     build_str_from_raw_ptr(cc[i as usize] as *mut u8)
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:74:13
   |
74 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:74:13
   |
74 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 29 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 29 warnings (29 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.75s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/machine_code)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/mad_libs)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (49 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:325:5
    |
325 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:47:1
   |
47 | / pub struct _IO_FILE {
48 | |     pub _flags: i32,
49 | |     pub _IO_read_ptr: *mut i8,
50 | |     pub _IO_read_end: *mut i8,
...  |
76 | |     pub _unused2: [i8; 20],
77 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
47 + #[non_exhaustive]
48 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:83:1
   |
83 | / pub struct dstr {
84 | |     pub data: *mut i8,
85 | |     pub alloc: u64,
86 | |     pub length: u64,
87 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
83 + #[non_exhaustive]
84 | pub struct dstr {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:22
   |
92 |         i32::from(((*s).length).wrapping_add(grow_amount) < (*s).alloc)
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:63
   |
92 |         i32::from(((*s).length).wrapping_add(grow_amount) < (*s).alloc)
   |                                                               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:100:24
    |
100 |         (*s).alloc = (*s).alloc.wrapping_mul(2);
    |                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:100:11
    |
100 |         (*s).alloc = (*s).alloc.wrapping_mul(2);
    |           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:101:46
    |
101 |         let mut attempt: *mut i8 = realloc((*s).data.cast::<libc::c_void>(), (*s).alloc).cast::<i8>();
    |                                              ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:101:80
    |
101 |         let mut attempt: *mut i8 = realloc((*s).data.cast::<libc::c_void>(), (*s).alloc).cast::<i8>();
    |                                                                                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:105:15
    |
105 |             (*s).data = attempt;
    |               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:138:16
    |
138 |         if !((*s).data).is_null() {
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:139:20
    |
139 |             free((*s).data.cast::<libc::c_void>());
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:168:73
    |
168 |                     if !(fgets(buffer.as_mut_ptr(), buffer_size as i32, fd)).is_null() {
    |                                                                         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:153:19
    |
153 |         let vla = buffer_size as usize;
    |                   ^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
153 |         let vla = usize::try_from(buffer_size);
    |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:19
    |
153 |         let vla = buffer_size as usize;
    |                   ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `i32` may truncate the value
   --> src/main.rs:168:53
    |
168 |                     if !(fgets(buffer.as_mut_ptr(), buffer_size as i32, fd)).is_null() {
    |                                                     ^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
168 |                     if !(fgets(buffer.as_mut_ptr(), i32::try_from(buffer_size), fd)).is_null() {
    |                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:168:53
    |
168 |                     if !(fgets(buffer.as_mut_ptr(), buffer_size as i32, fd)).is_null() {
    |                                                     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:176:48
    |
176 | ...                   ((*s).data).offset((*s).length as isize),
    |                                          ^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
176 |                             ((*s).data).offset(isize::try_from((*s).length)),
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:176:48
    |
176 | ...                   ((*s).data).offset((*s).length as isize),
    |                                          ^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:48
    |
176 | ...                   ((*s).data).offset((*s).length as isize),
    |                                          ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:181:29
    |
181 | ...                   ((*s).length as u64).wrapping_add(strlen(buffer.as_mut_ptr())) as u64;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:181:29
    |
181 | ...                   ((*s).length as u64).wrapping_add(strlen(buffer.as_mut_ptr())) as u64;
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:200:37
    |
200 |         let replace_l: u64 = strlen(replace);
    |                                     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:201:36
    |
201 |         let insert_l: u64 = strlen(insert);
    |                                    ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:202:36
    |
202 |         let mut start: *mut i8 = (*story).data;
    |                                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:204:35
    |
204 |             start = strstr(start, replace);
    |                                   ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:219:24
    |
219 |                     ((*story).length).wrapping_sub(
    |                        ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:220:72
    |
220 |                         start.offset(replace_l as isize).offset_from((*story).data) as u64,
    |                                                                        ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:224:23
    |
224 |                     (*story).length.wrapping_add(insert_l.wrapping_sub(replace_l));
    |                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:223:19
    |
223 |                 (*story).length =
    |                   ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:225:21
    |
225 |                 *((*story).data).offset((*story).length as isize) = 0;
    |                     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:225:43
    |
225 |                 *((*story).data).offset((*story).length as isize) = 0;
    |                                           ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:211:21
    |
211 |                     (b"Failed to allocate memory\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:217:34
    |
217 |                     start.offset(insert_l as isize).cast::<libc::c_void>(),
    |                                  ^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
217 |                     start.offset(isize::try_from(insert_l)).cast::<libc::c_void>(),
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:217:34
    |
217 |                     start.offset(insert_l as isize).cast::<libc::c_void>(),
    |                                  ^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:217:34
    |
217 |                     start.offset(insert_l as isize).cast::<libc::c_void>(),
    |                                  ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:218:21
    |
218 |                     start.offset(replace_l as isize) as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:218:34
    |
218 |                     start.offset(replace_l as isize) as *const libc::c_void,
    |                                  ^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
218 |                     start.offset(isize::try_from(replace_l)) as *const libc::c_void,
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:218:34
    |
218 |                     start.offset(replace_l as isize) as *const libc::c_void,
    |                                  ^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:218:34
    |
218 |                     start.offset(replace_l as isize) as *const libc::c_void,
    |                                  ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `isize` to `u64` may lose the sign of the value
   --> src/main.rs:220:25
    |
220 |                         start.offset(replace_l as isize).offset_from((*story).data) as u64,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:220:25
    |
220 |                         start.offset(replace_l as isize).offset_from((*story).data) as u64,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:220:38
    |
220 |                         start.offset(replace_l as isize).offset_from((*story).data) as u64,
    |                                      ^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
220 |                         start.offset(isize::try_from(replace_l)).offset_from((*story).data) as u64,
    |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:220:38
    |
220 |                         start.offset(replace_l as isize).offset_from((*story).data) as u64,
    |                                      ^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:220:38
    |
220 |                         start.offset(replace_l as isize).offset_from((*story).data) as u64,
    |                                      ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:225:41
    |
225 |                 *((*story).data).offset((*story).length as isize) = 0;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
225 |                 *((*story).data).offset(isize::try_from((*story).length)) = 0;
    |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:225:41
    |
225 |                 *((*story).data).offset((*story).length as isize) = 0;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:225:41
    |
225 |                 *((*story).data).offset((*story).length as isize) = 0;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:246:34
    |
246 |         let mut end: *mut i8 = (*story).data;
    |                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:241:19
    |
241 |         let vla = buffer_size as usize;
    |                   ^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
241 |         let vla = usize::try_from(buffer_size);
    |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:241:19
    |
241 |         let vla = buffer_size as usize;
    |                   ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:243:21
    |
243 |         let vla_0 = buffer_size as usize;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
243 |         let vla_0 = usize::try_from(buffer_size);
    |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:243:21
    |
243 |         let vla_0 = buffer_size as usize;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:248:33
    |
248 |             start = strchr(end, '<' as i32);
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:252:33
    |
252 |             end = strchr(start, '>' as i32);
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:256:21
    |
256 |                     (b"Malformed brackets in input\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:263:17
    |
263 |                 (end.offset_from(start) as i64 + 1i64) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:263:17
    |
263 |                 (end.offset_from(start) as i64 + 1i64) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:263:17
    |
263 |                 (end.offset_from(start) as i64 + 1i64) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:263:18
    |
263 |                 (end.offset_from(start) as i64 + 1i64) as u64,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:267:76
    |
267 |                 .offset((end.offset_from(start) as i64 + 1i64) as isize) = '\0' as i8;
    |                                                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:267:25
    |
267 |                 .offset((end.offset_from(start) as i64 + 1i64) as isize) = '\0' as i8;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
267 |                 .offset(isize::try_from(end.offset_from(start) as i64 + 1i64)) = '\0' as i8;
    |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:267:25
    |
267 |                 .offset((end.offset_from(start) as i64 + 1i64) as isize) = '\0' as i8;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:267:25
    |
267 |                 .offset((end.offset_from(start) as i64 + 1i64) as isize) = '\0' as i8;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:267:26
    |
267 |                 .offset((end.offset_from(start) as i64 + 1i64) as isize) = '\0' as i8;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
   --> src/main.rs:272:40
    |
272 |             fgets(insert.as_mut_ptr(), buffer_size as i32, stdin);
    |                                        ^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
272 |             fgets(insert.as_mut_ptr(), i32::try_from(buffer_size), stdin);
    |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:272:40
    |
272 |             fgets(insert.as_mut_ptr(), buffer_size as i32, stdin);
    |                                        ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:274:54
    |
274 |             if i32::from(*insert.as_mut_ptr().offset(il as isize)) == '\n' as i32 {
    |                                                      ^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
274 |             if i32::from(*insert.as_mut_ptr().offset(isize::try_from(il))) == '\n' as i32 {
    |                                                      ~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:274:54
    |
274 |             if i32::from(*insert.as_mut_ptr().offset(il as isize)) == '\n' as i32 {
    |                                                      ^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:274:54
    |
274 |             if i32::from(*insert.as_mut_ptr().offset(il as isize)) == '\n' as i32 {
    |                                                      ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:274:71
    |
274 |             if i32::from(*insert.as_mut_ptr().offset(il as isize)) == '\n' as i32 {
    |                                                                       ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:275:60
    |
275 |                 *insert.as_mut_ptr().offset(il as isize) = '\0' as i8;
    |                                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:275:45
    |
275 |                 *insert.as_mut_ptr().offset(il as isize) = '\0' as i8;
    |                                             ^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
275 |                 *insert.as_mut_ptr().offset(isize::try_from(il)) = '\0' as i8;
    |                                             ~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:275:45
    |
275 |                 *insert.as_mut_ptr().offset(il as isize) = '\0' as i8;
    |                                             ^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:275:45
    |
275 |                 *insert.as_mut_ptr().offset(il as isize) = '\0' as i8;
    |                                             ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:289:62
    |
289 |         let mut fd: *mut FILE = fopen(*argv.offset(1_isize), (b"r\0" as *const u8).cast::<i8>());
    |                                                              ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:293:17
    |
293 |                 (b"Could not open file: '%s\n\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:303:17
    |
303 |                 (b"Failed to allocate memory\0" as *const u8).cast::<i8>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:314:1
    |
314 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:318:13
    |
318 | /             (::std::ffi::CString::new(arg))
319 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:318:13
    |
318 | /             (::std::ffi::CString::new(arg))
319 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:327:20
    |
327 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
327 |             main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()),
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:327:20
    |
327 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:327:20
    |
327 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:327:20
    |
327 |             main_0((args.len() - 1) as i32, args.as_mut_ptr()),
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main" test) generated 85 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 84 warnings (84 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.98s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/magic_8_ball)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:36:5
   |
36 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:30:25
   |
30 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/magic_squares_of_doubly_even_order)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (37 fixes)
warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:44:25
   |
44 |         if n < 4_i32 || n % 4_i32 != 0_i32 {
   |                         ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:55:20
   |
55 |             malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
   |                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:20
   |
55 |             malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
   |                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:47
   |
58 |             let fresh0 = &mut (*result.offset(i as isize));
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:60:24
   |
60 |                 malloc((n as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:24
   |
60 |                 malloc((n as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:62:13
   |
62 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:69:26
   |
69 |                 bitPos = c / mult + r / mult.wrapping_mul(4);
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:73:21
   |
73 |                     size - i
   |                     ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:34
   |
70 |                 *(*result.offset(r as isize)).offset(c as isize) = if bits & 1_i32 << bitPos != 0_i32 {
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:54
   |
70 |                 *(*result.offset(r as isize)).offset(c as isize) = if bits & 1_i32 << bitPos != 0_i32 {
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:76:17
   |
76 |                 c;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:78:17
   |
78 |                 i;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:81:13
   |
81 |             r;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:93:9
   |
93 |         count;
   |         -^^^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:116:47
    |
116 |                     (baseWidth - numDigits(*(*square.offset(i as isize)).offset(j as isize))).unsigned_abs()
    |                                               ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:119:24
    |
119 |                     *(*square.offset(i as isize)).offset(j as isize)
    |                        ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:104:34
    |
104 |         let mut baseWidth: i32 = numDigits(rows.wrapping_mul(rows)) + 3;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:108:13
    |
108 |             (rows * rows + 1_i32) * rows / 2_i32
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:21
    |
116 | /                     (baseWidth - numDigits(*(*square.offset(i as isize)).offset(j as isize))).unsigned_abs()
117 | |                         as usize,
    | |________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:116:21
    |
116 |                     (baseWidth - numDigits(*(*square.offset(i as isize)).offset(j as isize))).unsigned_abs()
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:61
    |
116 |                     (baseWidth - numDigits(*(*square.offset(i as isize)).offset(j as isize))).unsigned_abs()
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:81
    |
116 |                     (baseWidth - numDigits(*(*square.offset(i as isize)).offset(j as isize))).unsigned_abs()
    |                                                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:119:38
    |
119 |                     *(*square.offset(i as isize)).offset(j as isize)
    |                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:119:58
    |
119 |                     *(*square.offset(i as isize)).offset(j as isize)
    |                                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:122:17
    |
122 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:126:13
    |
126 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:137:25
    |
137 |                 .offset(i32::from(*(*argV.offset(1_isize)).offset(0_isize)) as isize))
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u32` to `i32` may wrap around the value
   --> src/main.rs:138:19
    |
138 |                 & _ISdigit as i32
    |                   ^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:138:19
    |
138 |                 & _ISdigit as i32
    |                   ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:153:1
    |
153 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:157:13
    |
157 | /             (::std::ffi::CString::new(arg))
158 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:157:13
    |
157 | /             (::std::ffi::CString::new(arg))
158 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:163:33
    |
163 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
163 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:163:33
    |
163 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:163:33
    |
163 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:163:33
    |
163 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:62:13
   |
62 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:76:17
   |
76 |                 c;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:78:17
   |
78 |                 i;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:81:13
   |
81 |             r;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:93:9
   |
93 |         count;
   |         ^^^^^^

warning: path statement with no effect
   --> src/main.rs:122:17
    |
122 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:126:13
    |
126 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 44 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 43 warnings (43 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.95s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/magic_squares_of_odd_order)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:16:5
   |
16 |     (x + y * 2_i32 + 1_i32) % n
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:16:5
   |
16 |     (x + y * 2_i32 + 1_i32) % n
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:29:25
   |
29 |         if n < 3_i32 || n % 2_i32 == 0_i32 {
   |                         ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:38:17
   |
38 |                 j;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:26
   |
40 |             print!("{}", '\n' as i32);
   |                          ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:42:13
   |
42 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:44:44
   |
44 |         print!("\n Magic Constant: {}.\n", (n * n + 1_i32) / 2_i32 * n);
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:49:1
   |
49 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:53:13
   |
53 | /             (::std::ffi::CString::new(arg))
54 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:53:13
   |
53 | /             (::std::ffi::CString::new(arg))
54 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:59:33
   |
59 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
59 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:59:33
   |
59 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:33
   |
59 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:59:33
   |
59 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:38:17
   |
38 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:42:13
   |
42 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 16 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 15 warnings (15 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/magic_squares_of_singly_even_order)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/magnanimous_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/mandelbrot_set)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/map_range)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (16 fixes)
warning: floating-point arithmetic detected
  --> src/main.rs:16:5
   |
16 |     b1 + (s - a1) * (b2 - b1) / (a2 - a1)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:23:14
   |
23 |         puts((b"Mapping [0,10] to [-1,0] at intervals of 1:\0" as *const u8).cast::<i8>());
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:33:9
   |
33 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:33:9
   |
33 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 5 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 5 warnings (5 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.65s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/matrix_chain_multiplication)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (27 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:17:35
   |
17 | pub static mut m: *mut *mut i32 = 0 as *const *mut i32 as *mut *mut i32;
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:17:35
   |
17 | pub static mut m: *mut *mut i32 = 0 as *const *mut i32 as *mut *mut i32;
   |                                   ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:19:35
   |
19 | pub static mut s: *mut *mut i32 = 0 as *const *mut i32 as *mut *mut i32;
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:19:35
   |
19 | pub static mut s: *mut *mut i32 = 0 as *const *mut i32 as *mut *mut i32;
   |                                   ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:56:29
   |
56 |                     temp = *dims.offset(i as isize)
   |                             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:57:28
   |
57 |                         * *dims.offset((k.wrapping_add(1i32)) as isize)
   |                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:58:28
   |
58 |                         * *dims.offset((j.wrapping_add(1i32)) as isize);
   |                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: statement with no effect
  --> src/main.rs:31:9
   |
31 |         n;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:32:20
   |
32 |         m = malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
   |                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:20
   |
32 |         m = malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
   |                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:42
   |
35 |             let fresh0 = &mut (*m.offset(i as isize));
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:36:30
   |
36 |             *fresh0 = calloc(n as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                              ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:30
   |
36 |             *fresh0 = calloc(n as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                              ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:38:13
   |
38 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:40:20
   |
40 |         s = malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
   |                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:20
   |
40 |         s = malloc((n as u64).wrapping_mul(::core::mem::size_of::<*mut i32>() as u64)).cast::<*mut i32>();
   |                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:42
   |
43 |             let fresh1 = &mut (*s.offset(i as isize));
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:44:30
   |
44 |             *fresh1 = calloc(n as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                              ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:30
   |
44 |             *fresh1 = calloc(n as u64, ::core::mem::size_of::<i32>() as u64).cast::<i32>();
   |                              ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:46:13
   |
46 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:51:23
   |
51 |             while i < n - len {
   |                       ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:29
   |
53 |                 *(*m.offset(i as isize)).offset(j as isize) = 2_147_483_647_i32;
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:49
   |
53 |                 *(*m.offset(i as isize)).offset(j as isize) = 2_147_483_647_i32;
   |                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:56:28
   |
56 |                       temp = *dims.offset(i as isize)
   |  ____________________________^
57 | |                         * *dims.offset((k.wrapping_add(1i32)) as isize)
58 | |                         * *dims.offset((j.wrapping_add(1i32)) as isize);
   | |_______________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:41
   |
56 |                     temp = *dims.offset(i as isize)
   |                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:40
   |
57 |                         * *dims.offset((k.wrapping_add(1i32)) as isize)
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:40
   |
58 |                         * *dims.offset((j.wrapping_add(1i32)) as isize);
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:59:28
   |
59 |                       cost = *(*m.offset(i as isize)).offset(k as isize)
   |  ____________________________^
60 | |                         + *(*m.offset((k.wrapping_add(1i32)) as isize)).offset(j as isize)
61 | |                         + temp;
   | |______________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:40
   |
59 |                     cost = *(*m.offset(i as isize)).offset(k as isize)
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:60
   |
59 |                     cost = *(*m.offset(i as isize)).offset(k as isize)
   |                                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:39
   |
60 |                         + *(*m.offset((k.wrapping_add(1i32)) as isize)).offset(j as isize)
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:80
   |
60 |                         + *(*m.offset((k.wrapping_add(1i32)) as isize)).offset(j as isize)
   |                                                                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:43
   |
62 |                     if cost < *(*m.offset(i as isize)).offset(j as isize) {
   |                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:63
   |
62 |                     if cost < *(*m.offset(i as isize)).offset(j as isize) {
   |                                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:37
   |
63 |                         *(*m.offset(i as isize)).offset(j as isize) = cost;
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:57
   |
63 |                         *(*m.offset(i as isize)).offset(j as isize) = cost;
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:37
   |
64 |                         *(*s.offset(i as isize)).offset(j as isize) = k;
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:57
   |
64 |                         *(*s.offset(i as isize)).offset(j as isize) = k;
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:67:21
   |
67 |                     k;
   |                     ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:70:17
   |
70 |                 i;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:73:13
   |
73 |             len;
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:83:26
   |
83 |             print!("{}", i + 65_i32);
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:54
   |
86 |             print_optimal_chain_order(i, *(*s.offset(i as isize)).offset(j as isize));
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:74
   |
86 |             print_optimal_chain_order(i, *(*s.offset(i as isize)).offset(j as isize));
   |                                                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:87:39
   |
87 |             print_optimal_chain_order(*(*s.offset(i as isize)).offset(j as isize) + 1, j);
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:51
   |
87 |             print_optimal_chain_order(*(*s.offset(i as isize)).offset(j as isize) + 1, j);
   |                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:71
   |
87 |             print_optimal_chain_order(*(*s.offset(i as isize)).offset(j as isize) + 1, j);
   |                                                                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:107:23
    |
107 |             n = sizes[i as usize];
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:23
    |
107 |             n = sizes[i as usize];
    |                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:110:42
    |
110 |                 print!("{}", *(dims_list[i as usize]).offset(j as isize));
    |                                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:42
    |
110 |                 print!("{}", *(dims_list[i as usize]).offset(j as isize));
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:62
    |
110 |                 print!("{}", *(dims_list[i as usize]).offset(j as isize));
    |                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:117:17
    |
117 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:119:50
    |
119 |             optimal_matrix_chain_order(dims_list[i as usize], n);
    |                                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:119:50
    |
119 |             optimal_matrix_chain_order(dims_list[i as usize], n);
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:46
    |
124 |                 *(*m.offset(0_isize)).offset((n - 2i32) as isize)
    |                                              ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:124:46
    |
124 |                 *(*m.offset(0_isize)).offset((n - 2i32) as isize)
    |                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:128:33
    |
128 |                 free((*m.offset(j as isize)).cast::<libc::c_void>());
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:130:17
    |
130 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:33
    |
135 |                 free((*s.offset(j as isize)).cast::<libc::c_void>());
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:137:17
    |
137 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:141:13
    |
141 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:31:9
   |
31 |         n;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:38:13
   |
38 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:46:13
   |
46 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:67:21
   |
67 |                     k;
   |                     ^^

warning: path statement with no effect
  --> src/main.rs:70:17
   |
70 |                 i;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:73:13
   |
73 |             len;
   |             ^^^^

warning: path statement with no effect
   --> src/main.rs:117:17
    |
117 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:130:17
    |
130 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:137:17
    |
137 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:141:13
    |
141 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 73 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 73 warnings (73 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.15s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/matrix_exponentiation_operator)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (73 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:27:1
   |
27 | / pub struct _IO_FILE {
28 | |     pub _flags: i32,
29 | |     pub _IO_read_ptr: *mut i8,
30 | |     pub _IO_read_end: *mut i8,
...  |
56 | |     pub _unused2: [i8; 20],
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
27 + #[non_exhaustive]
28 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:63:1
   |
63 | / pub struct squareMtxStruct {
64 | |     pub dim: i32,
65 | |     pub cells: *mut f64,
66 | |     pub m: *mut *mut f64,
67 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
63 + #[non_exhaustive]
64 | pub struct squareMtxStruct {
   |

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:72:1
   |
72 | / pub extern "C" fn NewSquareMtx(
73 | |     mut dim: i32,
74 | |     mut fillFunc: FillFunc,
75 | |     mut ff_data: *mut libc::c_void,
76 | | ) -> SquareMtx {
   | |______________^
   |
note: first possible panic found here
  --> src/main.rs:97:33
   |
97 |                         None => panic!("non-null function pointer"),
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:95:81
   |
95 | ...                   fillFunc_m(*((*sm).m).offset(rw as isize), rw, dim, ff_data)
   |                                                                           ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:85:17
   |
85 |                 ((dim.wrapping_mul(dim)) as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:17
   |
85 |                 ((dim.wrapping_mul(dim)) as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:87:30
   |
87 |             (*sm).m = malloc((dim as u64).wrapping_mul(::core::mem::size_of::<*mut f64>() as u64)).cast::<*mut f64>();
   |                              ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:30
   |
87 |             (*sm).m = malloc((dim as u64).wrapping_mul(::core::mem::size_of::<*mut f64>() as u64)).cast::<*mut f64>();
   |                              ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: taken reference of right operand
  --> src/main.rs:88:16
   |
88 |             if !((*sm).cells).is_null() & &!((*sm).m).is_null() {
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------------
   |                                           |
   |                                           help: use the right value directly: `!((*sm).m).is_null()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref
   = note: `#[warn(clippy::op_ref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:58
   |
91 |                     let fresh0 = &mut (*((*sm).m).offset(rw as isize));
   |                                                          ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:52
   |
92 |                     *fresh0 = ((*sm).cells).offset((dim.wrapping_mul(rw)) as isize);
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:58
   |
95 | ...                   fillFunc_m(*((*sm).m).offset(rw as isize), rw, dim, ff_data)
   |                                                    ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:100:21
    |
100 |                     rw;
    |                     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:24
    |
107 |                 return 0 as SquareMtx;
    |                        ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:123:38
    |
123 |         let mut m0rw: *mut f64 = *((*m0).m).offset(rw as isize);
    |                                      ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:130:29
    |
130 |                     * *(*((*m0).m).offset(ix as isize)).offset(col as isize);
    |                             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:134:14
    |
134 |             *cells.offset(col as isize) = sum;
    |              ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:52
    |
123 |         let mut m0rw: *mut f64 = *((*m0).m).offset(rw as isize);
    |                                                    ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:129:17
    |
129 | /                 sum += *m0rw.offset(ix as isize)
130 | |                     * *(*((*m0).m).offset(ix as isize)).offset(col as isize);
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:129:37
    |
129 |                 sum += *m0rw.offset(ix as isize)
    |                                     ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:43
    |
130 |                     * *(*((*m0).m).offset(ix as isize)).offset(col as isize);
    |                                           ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:64
    |
130 |                     * *(*((*m0).m).offset(ix as isize)).offset(col as isize);
    |                                                                ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:132:17
    |
132 |                 ix;
    |                 ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:134:27
    |
134 |             *cells.offset(col as isize) = sum;
    |                           ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:136:13
    |
136 |             col;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:150:37
    |
150 |         let mut mleft: SquareMtx = *mplcnds.offset(0_isize);
    |                                     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:151:37
    |
151 |         let mut mrigt: SquareMtx = *mplcnds.offset(1_isize);
    |                                     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:166:14
    |
166 |             *cells.offset(col as isize) = sum;
    |              ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:55
    |
153 |         let mut m0rw: *mut f64 = *((*mleft).m).offset(rw as isize);
    |                                                       ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:161:17
    |
161 | /                 sum += *m0rw.offset(ix as isize)
162 | |                     * *(*((*mrigt).m).offset(ix as isize)).offset(col as isize);
    | |_______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:37
    |
161 |                 sum += *m0rw.offset(ix as isize)
    |                                     ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:46
    |
162 |                     * *(*((*mrigt).m).offset(ix as isize)).offset(col as isize);
    |                                              ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:162:67
    |
162 |                     * *(*((*mrigt).m).offset(ix as isize)).offset(col as isize);
    |                                                                   ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:164:17
    |
164 |                 ix;
    |                 ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:166:27
    |
166 |             *cells.offset(col as isize) = sum;
    |                           ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:168:13
    |
168 |             col;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:182:22
    |
182 |         while rw < (*left).dim {
    |                      ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:184:21
    |
184 |                 *((*mr).m).offset(rw as isize),
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:186:19
    |
186 |                 (*left).dim,
    |                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:184:35
    |
184 |                 *((*mr).m).offset(rw as isize),
    |                                   ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:190:13
    |
190 |             rw;
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:207:14
    |
207 |             *cells.offset(col as isize) = 0.0f64;
    |              ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:211:10
    |
211 |         *cells.offset(rw as isize) = 1.0f64;
    |          ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:207:27
    |
207 |             *cells.offset(col as isize) = 0.0f64;
    |                           ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:209:13
    |
209 |             col;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:211:23
    |
211 |         *cells.offset(rw as isize) = 1.0f64;
    |                       ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:222:49
    |
222 |             *cells.offset(col as isize) = *(*((*m1).m).offset(rw as isize)).offset(col as isize);
    |                                                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:222:14
    |
222 |             *cells.offset(col as isize) = *(*((*m1).m).offset(rw as isize)).offset(col as isize);
    |              ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:222:63
    |
222 |             *cells.offset(col as isize) = *(*((*m1).m).offset(rw as isize)).offset(col as isize);
    |                                                               ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:222:84
    |
222 |             *cells.offset(col as isize) = *(*((*m1).m).offset(rw as isize)).offset(col as isize);
    |                                                                                    ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:222:27
    |
222 |             *cells.offset(col as isize) = *(*((*m1).m).offset(rw as isize)).offset(col as isize);
    |                           ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:224:13
    |
224 |             col;
    |             ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:233:16
    |
233 |         free((*m).m.cast::<libc::c_void>());
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:234:16
    |
234 |         free((*m).cells.cast::<libc::c_void>());
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:244:15
    |
244 |             (*m0).dim,
    |               ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:251:15
    |
251 |             (*m0).dim,
    |               ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:273:27
    |
273 |                         (*m0).dim,
    |                           ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:294:23
    |
294 |                     (*m0).dim,
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:246:18
    |
246 |             Some(ffIdentity as unsafe extern "C" fn(*mut f64, i32, i32, *mut libc::c_void) -> ()),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:249:33
    |
249 |         let mut v1: SquareMtx = 0 as SquareMtx;
    |                                 ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:258:17
    |
258 |                 ffCopy as unsafe extern "C" fn(*mut f64, i32, i32, SquareMtx) -> (),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:262:36
    |
262 |         let mut base1: SquareMtx = 0 as SquareMtx;
    |                                    ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:266:16
    |
266 |             if exp % 2_i32 != 0_i32 {
    |                ^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:279:29
    |
279 | /                             ffMatxMulply
280 | | // SAFETY: machine generated unsafe code
281 | |                                 as unsafe extern "C" fn(*mut f64, i32, i32, *mut SquareMtx) -> (),
    | |_________________________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:301:25
    |
301 |                         ffMatxSquare as unsafe extern "C" fn(*mut f64, i32, i32, SquareMtx) -> (),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:325:34
    |
325 | pub static mut fout: *mut FILE = 0 as *const FILE as *mut FILE;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:325:34
    |
325 | pub static mut fout: *mut FILE = 0 as *const FILE as *mut FILE;
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:332:28
    |
332 |         let mut d: i32 = (*mtx).dim;
    |                            ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:336:13
    |
336 |             mn,
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:337:15
    |
337 |             (*mtx).dim,
    |               ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:347:27
    |
347 |                     *(*((*mtx).m).offset(rw as isize)).offset(col as isize),
    |                           ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:335:13
    |
335 |             (b"%s dim:%d =\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:341:27
    |
341 |             fprintf(fout, (b" |\0" as *const u8).cast::<i8>());
    |                           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:346:21
    |
346 |                     (b"%8.5f \0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:347:42
    |
347 |                     *(*((*mtx).m).offset(rw as isize)).offset(col as isize),
    |                                          ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:347:63
    |
347 |                     *(*((*mtx).m).offset(rw as isize)).offset(col as isize),
    |                                                               ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:350:17
    |
350 |                 col;
    |                 ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:352:27
    |
352 |             fprintf(fout, (b" |\n\0" as *const u8).cast::<i8>());
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:354:13
    |
354 |             rw;
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:356:23
    |
356 |         fprintf(fout, (b"\n\0" as *const u8).cast::<i8>());
    |                       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:374:18
    |
374 |                 *cells.offset(0_isize) = c1;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:375:18
    |
375 |                 *cells.offset(1_isize) = s1;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:376:18
    |
376 |                 *cells.offset(2_isize) = 0.0f64;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:379:18
    |
379 |                 *cells.offset(0_isize) = -s1;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:380:18
    |
380 |                 *cells.offset(1_isize) = c1;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:381:18
    |
381 |                 *cells.offset(2_isize) = f64::from(0_i32);
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:384:18
    |
384 |                 *cells.offset(0_isize) = 0.0f64;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:385:18
    |
385 |                 *cells.offset(1_isize) = 0.0f64;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:386:18
    |
386 |                 *cells.offset(2_isize) = 1.0f64;
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: floating-point arithmetic detected
   --> src/main.rs:369:30
    |
369 |         let mut theta: f64 = 3.1415926536f64 / 6.0f64;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: approximate value of `f64::consts::PI` found
   --> src/main.rs:369:30
    |
369 |         let mut theta: f64 = 3.1415926536f64 / 6.0f64;
    |                              ^^^^^^^^^^^^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
    = note: `#[warn(clippy::approx_constant)]` on by default

warning: floating-point arithmetic detected
   --> src/main.rs:379:42
    |
379 |                 *cells.offset(0_isize) = -s1;
    |                                          ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:399:18
    |
399 |             Some(fillInit as unsafe extern "C" fn(*mut f64, i32, i32, *mut libc::c_void) -> ()),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:406:13
    |
406 |             (b"matrx_exp.txt\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:407:13
    |
407 |             (b"w\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:409:28
    |
409 |         SquareMtxPrint(m0, (b"m0\0" as *const u8).cast::<i8>());
    |                            ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:411:28
    |
411 |         SquareMtxPrint(m1, (b"m0^5\0" as *const u8).cast::<i8>());
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:413:28
    |
413 |         SquareMtxPrint(m2, (b"m0^9\0" as *const u8).cast::<i8>());
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:415:28
    |
415 |         SquareMtxPrint(m3, (b"m0^2\0" as *const u8).cast::<i8>());
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
   --> src/main.rs:100:21
    |
100 |                     rw;
    |                     ^^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:132:17
    |
132 |                 ix;
    |                 ^^^

warning: path statement with no effect
   --> src/main.rs:136:13
    |
136 |             col;
    |             ^^^^

warning: path statement with no effect
   --> src/main.rs:164:17
    |
164 |                 ix;
    |                 ^^^

warning: path statement with no effect
   --> src/main.rs:168:13
    |
168 |             col;
    |             ^^^^

warning: path statement with no effect
   --> src/main.rs:190:13
    |
190 |             rw;
    |             ^^^

warning: path statement with no effect
   --> src/main.rs:209:13
    |
209 |             col;
    |             ^^^^

warning: path statement with no effect
   --> src/main.rs:224:13
    |
224 |             col;
    |             ^^^^

warning: path statement with no effect
   --> src/main.rs:350:17
    |
350 |                 col;
    |                 ^^^^

warning: path statement with no effect
   --> src/main.rs:354:13
    |
354 |             rw;
    |             ^^^

warning: `c2rust_out` (bin "main" test) generated 110 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 110 warnings (110 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.11s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/matrix_multiplication)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (48 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:17:1
   |
17 | / pub struct matrix_t {
18 | |     pub h: i32,
19 | |     pub w: i32,
20 | |     pub x: *mut f64,
21 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
17 + #[non_exhaustive]
18 | pub struct matrix_t {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:17
   |
35 |             a = a.offset(1);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:36:29
   |
36 |             r += *fresh1 * *b;
   |                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:37:17
   |
37 |             b = b.offset(step as isize);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: floating-point arithmetic detected
  --> src/main.rs:36:13
   |
36 |             r += *fresh1 * *b;
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:26
   |
37 |             b = b.offset(step as isize);
   |                          ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:50:35
   |
50 |                     .wrapping_mul(w as u64)
   |                                   ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:35
   |
50 |                     .wrapping_mul(w as u64)
   |                                   ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:51:35
   |
51 |                     .wrapping_mul(h as u64),
   |                                   ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:51:35
   |
51 |                     .wrapping_mul(h as u64),
   |                                   ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:14
   |
70 |         if (*a).w != (*b).h {
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:24
   |
70 |         if (*a).w != (*b).h {
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:73:23
   |
73 |         r = mat_new((*a).h, (*b).w);
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:73:31
   |
73 |         r = mat_new((*a).h, (*b).w);
   |                               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:75:16
   |
75 |         pa = (*a).x;
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:77:21
   |
77 |         while i < (*a).h {
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:79:25
   |
79 |             while j < (*b).w {
   |                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:82:38
   |
82 |                 *fresh2 = dot(pa, ((*b).x).offset(j as isize), (*a).w, (*b).w);
   |                                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:82:66
   |
82 |                 *fresh2 = dot(pa, ((*b).x).offset(j as isize), (*a).w, (*b).w);
   |                                                                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:82:74
   |
82 |                 *fresh2 = dot(pa, ((*b).x).offset(j as isize), (*a).w, (*b).w);
   |                                                                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:88:30
   |
88 |             pa = pa.offset((*a).w as isize);
   |                              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:20
   |
71 |             return 0 as matrix;
   |                    ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:51
   |
82 |                 *fresh2 = dot(pa, ((*b).x).offset(j as isize), (*a).w, (*b).w);
   |                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:84:17
   |
84 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:87:13
   |
87 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:28
   |
88 |             pa = pa.offset((*a).w as isize);
   |                            ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:100:33
    |
100 |         let mut p: *mut f64 = (*a).x;
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:102:21
    |
102 |         while i < (*a).h {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:104:25
    |
104 |             while j < (*a).w {
    |                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: statement with no effect
   --> src/main.rs:109:17
    |
109 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:112:13
    |
112 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:26
    |
113 |             print!("{}", '\n' as i32);
    |                          ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:115:22
    |
115 |         print!("{}", '\n' as i32);
    |                      ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:127:9
    |
127 |         4.0f64 / 3_f64,
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:128:9
    |
128 |         -13.0f64 / 3_f64,
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:129:9
    |
129 |         19.0f64 / 4_f64,
    |         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:130:9
    |
130 |         -7.0f64 / 3_f64,
    |         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:131:9
    |
131 |         3.0f64 / 2_f64,
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:133:9
    |
133 |         7.0f64 / 6_f64,
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:134:9
    |
134 |         -1.0f64 / 6_f64,
    |         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:135:9
    |
135 |         1.0f64 / 4_f64,
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:136:9
    |
136 |         -1.0f64 / 6_f64,
    |         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: path statement with no effect
  --> src/main.rs:84:17
   |
84 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:87:13
   |
87 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:109:17
    |
109 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:112:13
    |
112 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 47 warnings (47 duplicates)
warning: `c2rust_out` (bin "main" test) generated 47 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.85s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/matrix_transposition)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (34 fixes)
warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:23:19
   |
23 |         let vla = src_h as usize;
   |                   ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:23:19
   |
23 |         let vla = src_h as usize;
   |                   ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:25:21
   |
25 |         let vla_0 = src_w as usize;
   |                     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:21
   |
25 |         let vla_0 = src_w as usize;
   |                     ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:32:31
   |
32 |                     *s.offset(i as isize * vla_0 as isize).offset(j as isize);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:31
   |
32 |                     *s.offset(i as isize * vla_0 as isize).offset(j as isize);
   |                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `isize` may wrap around the value
  --> src/main.rs:32:44
   |
32 |                     *s.offset(i as isize * vla_0 as isize).offset(j as isize);
   |                                            ^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:44
   |
32 |                     *s.offset(i as isize * vla_0 as isize).offset(j as isize);
   |                                            ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:67
   |
32 |                     *s.offset(i as isize * vla_0 as isize).offset(j as isize);
   |                                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:31:27
   |
31 |                 *d.offset(j as isize * vla as isize).offset(i as isize) =
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:27
   |
31 |                 *d.offset(j as isize * vla as isize).offset(i as isize) =
   |                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `isize` may wrap around the value
  --> src/main.rs:31:40
   |
31 |                 *d.offset(j as isize * vla as isize).offset(i as isize) =
   |                                        ^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:40
   |
31 |                 *d.offset(j as isize * vla as isize).offset(i as isize) =
   |                                        ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:61
   |
31 |                 *d.offset(j as isize * vla as isize).offset(i as isize) =
   |                                                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:34:17
   |
34 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:37:13
   |
37 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:62:34
   |
62 |                 print!("{}{}", b[i as usize][j as usize], '\n' as i32)
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:34
   |
62 |                 print!("{}{}", b[i as usize][j as usize], '\n' as i32)
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:62:46
   |
62 |                 print!("{}{}", b[i as usize][j as usize], '\n' as i32)
   |                                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:46
   |
62 |                 print!("{}{}", b[i as usize][j as usize], '\n' as i32)
   |                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:59
   |
62 |                 print!("{}{}", b[i as usize][j as usize], '\n' as i32)
   |                                                           ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:64:34
   |
64 |                 print!("{}{}", b[i as usize][j as usize], ' ' as i32)
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:34
   |
64 |                 print!("{}{}", b[i as usize][j as usize], ' ' as i32)
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:64:46
   |
64 |                 print!("{}{}", b[i as usize][j as usize], ' ' as i32)
   |                                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:46
   |
64 |                 print!("{}{}", b[i as usize][j as usize], ' ' as i32)
   |                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:59
   |
64 |                 print!("{}{}", b[i as usize][j as usize], ' ' as i32)
   |                                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:67:13
   |
67 |             j;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:70:9
   |
70 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:34:17
   |
34 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:37:13
   |
37 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:67:13
   |
67 |             j;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:70:9
   |
70 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 33 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 33 warnings (33 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.64s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/maximum_triangle_path_sum)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (183 fixes)
warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:26:20
   |
26 |       let len: i32 = (::core::mem::size_of::<[i32; 171]>() as u64)
   |  ____________________^
27 | |         .wrapping_div(::core::mem::size_of::<i32>() as u64) as i32;
   | |__________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
26 ~     let len: i32 = i32::try_from((::core::mem::size_of::<[i32; 171]>() as u64)
27 ~         .wrapping_div(::core::mem::size_of::<i32>() as u64));
   |

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:30:25
   |
30 |         let base: i32 = ((sqrt(f64::from(8_i32 * len.wrapping_add(1i32))) - 1_f64) / 2_f64) as i32;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:25
   |
30 |         let base: i32 = ((sqrt(f64::from(8_i32 * len.wrapping_add(1i32))) - 1_f64) / 2_f64) as i32;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:30:25
   |
30 |         let base: i32 = ((sqrt(f64::from(8_i32 * len.wrapping_add(1i32))) - 1_f64) / 2_f64) as i32;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:30:42
   |
30 |         let base: i32 = ((sqrt(f64::from(8_i32 * len.wrapping_add(1i32))) - 1_f64) / 2_f64) as i32;
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:34:13
   |
34 |         i = len - base.wrapping_sub(1);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:36:13
   |
36 | /             tri[i as usize] += if tri[(i.wrapping_add(step)) as usize]
37 | |                 > tri[(i + step.wrapping_add(1i32)) as usize]
38 | |             {
39 | |                 tri[(i.wrapping_add(step)) as usize]
40 | |             } else {
41 | |                 tri[(i + step.wrapping_add(1i32)) as usize]
42 | |             };
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:36:39
   |
36 |             tri[i as usize] += if tri[(i.wrapping_add(step)) as usize]
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:39
   |
36 |             tri[i as usize] += if tri[(i.wrapping_add(step)) as usize]
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:37:23
   |
37 |                 > tri[(i + step.wrapping_add(1i32)) as usize]
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:23
   |
37 |                 > tri[(i + step.wrapping_add(1i32)) as usize]
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:39:21
   |
39 |                 tri[(i.wrapping_add(step)) as usize]
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:21
   |
39 |                 tri[(i.wrapping_add(step)) as usize]
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:41:21
   |
41 |                 tri[(i + step.wrapping_add(1i32)) as usize]
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:21
   |
41 |                 tri[(i + step.wrapping_add(1i32)) as usize]
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:36:17
   |
36 |             tri[i as usize] += if tri[(i.wrapping_add(step)) as usize]
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:17
   |
36 |             tri[i as usize] += if tri[(i.wrapping_add(step)) as usize]
   |                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:46:17
   |
46 |                 step;
   |                 ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:46:17
   |
46 |                 step;
   |                 ^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 22 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 22 warnings (22 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.76s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/mcnuggets_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:21:16
   |
21 |             if sixes * 6_i32 == i {
   |                ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:23:17
   |
23 |                 i;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:28:24
   |
28 |                     if sixes * 6_i32 + nines * 9_i32 == i {
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:30:25
   |
30 |                         i;
   |                         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:35:32
   |
35 | ...                   if sixes * 6_i32 + nines * 9_i32 + twenties * 20_i32 == i {
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:37:33
   |
37 | ...                   i;
   |                       ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:41:33
   |
41 | ...                   twenties;
   |                       -^^^^^^^^
   |                       |
   |                       help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:45:25
   |
45 |                         nines;
   |                         -^^^^^
   |                         |
   |                         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:49:17
   |
49 |                 sixes;
   |                 -^^^^^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:54:9
   |
54 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:23:17
   |
23 |                 i;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:30:25
   |
30 |                         i;
   |                         ^^

warning: path statement with no effect
  --> src/main.rs:37:33
   |
37 | ...                   i;
   |                       ^^

warning: path statement with no effect
  --> src/main.rs:41:33
   |
41 | ...                   twenties;
   |                       ^^^^^^^^^

warning: path statement with no effect
  --> src/main.rs:45:25
   |
45 |                         nines;
   |                         ^^^^^^

warning: path statement with no effect
  --> src/main.rs:49:17
   |
49 |                 sixes;
   |                 ^^^^^^

warning: path statement with no effect
  --> src/main.rs:54:9
   |
54 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 18 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 18 warnings (18 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.58s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/mean_angle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (30 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:25:29
   |
25 |             x_part += cos((*angles.offset(i as isize)).to_radians());
   |                             ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:26:29
   |
26 |             y_part += sin((*angles.offset(i as isize)).to_radians());
   |                             ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: floating-point arithmetic detected
  --> src/main.rs:25:13
   |
25 |             x_part += cos((*angles.offset(i as isize)).to_radians());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:43
   |
25 |             x_part += cos((*angles.offset(i as isize)).to_radians());
   |                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:26:13
   |
26 |             y_part += sin((*angles.offset(i as isize)).to_radians());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:43
   |
26 |             y_part += sin((*angles.offset(i as isize)).to_radians());
   |                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:28:13
   |
28 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:30:15
   |
30 |         atan2(y_part / f64::from(size), x_part / f64::from(size)).to_degrees()
   |               ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:30:41
   |
30 |         atan2(y_part / f64::from(size), x_part / f64::from(size)).to_degrees()
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: path statement with no effect
  --> src/main.rs:28:13
   |
28 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 11 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 11 warnings (11 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.71s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/median)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (21 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:20:1
   |
20 | / pub struct floatList {
21 | |     pub list: *mut libc::c_float,
22 | |     pub size: i32,
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
20 + #[non_exhaustive]
21 | pub struct floatList {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:15
   |
42 |             (*fl).list.cast::<libc::c_void>(),
   |               ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:43:15
   |
43 |             (*fl).size as u64,
   |               ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:49:29
   |
49 |             * f64::from(*((*fl).list).offset(((*fl).size / 2i32) as isize)
   |                             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:49:49
   |
49 |             * f64::from(*((*fl).list).offset(((*fl).size / 2i32) as isize)
   |                                                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:50:23
   |
50 |                 + *((*fl).list).offset((((*fl).size - 1i32) / 2i32) as isize)))
   |                       ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:50:44
   |
50 |                 + *((*fl).list).offset((((*fl).size - 1i32) / 2i32) as isize)))
   |                                            ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:43:13
   |
43 |             (*fl).size as u64,
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:13
   |
43 |             (*fl).size as u64,
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:18
   |
46 |             Some(floatcmp as unsafe extern "C" fn(*const libc::c_void, *const libc::c_void) -> i32),
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:48:9
   |
48 | /         (0.5f64
49 | |             * f64::from(*((*fl).list).offset(((*fl).size / 2i32) as isize)
50 | |                 + *((*fl).list).offset((((*fl).size - 1i32) / 2i32) as isize)))
51 | |             as libc::c_float
   | |____________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:9
   |
48 | /         (0.5f64
49 | |             * f64::from(*((*fl).list).offset(((*fl).size / 2i32) as isize)
50 | |                 + *((*fl).list).offset((((*fl).size - 1i32) / 2i32) as isize)))
51 | |             as libc::c_float
   | |____________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:48:9
   |
48 | /         (0.5f64
49 | |             * f64::from(*((*fl).list).offset(((*fl).size / 2i32) as isize)
50 | |                 + *((*fl).list).offset((((*fl).size - 1i32) / 2i32) as isize)))
   | |_______________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:46
   |
49 |             * f64::from(*((*fl).list).offset(((*fl).size / 2i32) as isize)
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:40
   |
50 |                 + *((*fl).list).offset((((*fl).size - 1i32) / 2i32) as isize)))
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:50:41
   |
50 |                 + *((*fl).list).offset((((*fl).size - 1i32) / 2i32) as isize)))
   |                                         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:57:9
   |
57 |         5.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:9
   |
57 |         5.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:58:9
   |
58 |         2.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:9
   |
58 |         2.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:59:9
   |
59 |         6.2f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:9
   |
59 |         6.2f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:60:9
   |
60 |         8.8f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:9
   |
60 |         8.8f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:61:9
   |
61 |         4.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:9
   |
61 |         4.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:62:9
   |
62 |         4.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:9
   |
62 |         4.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:68:19
   |
68 |               size: (::core::mem::size_of::<[libc::c_float; 6]>() as u64)
   |  ___________________^
69 | |                 .wrapping_div(::core::mem::size_of::<libc::c_float>() as u64)
70 | |                 as i32,
   | |______________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
68 ~             size: i32::try_from((::core::mem::size_of::<[libc::c_float; 6]>() as u64)
69 ~                 .wrapping_div(::core::mem::size_of::<libc::c_float>() as u64)),
   |

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:74:9
   |
74 |         5.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:9
   |
74 |         5.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:75:9
   |
75 |         2.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:9
   |
75 |         2.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:76:9
   |
76 |         8.8f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:76:9
   |
76 |         8.8f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:77:9
   |
77 |         4.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:9
   |
77 |         4.6f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `f32` may truncate the value
  --> src/main.rs:78:9
   |
78 |         4.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:9
   |
78 |         4.1f64 as libc::c_float,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:84:19
   |
84 |               size: (::core::mem::size_of::<[libc::c_float; 5]>() as u64)
   |  ___________________^
85 | |                 .wrapping_div(::core::mem::size_of::<libc::c_float>() as u64)
86 | |                 as i32,
   | |______________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
84 ~             size: i32::try_from((::core::mem::size_of::<[libc::c_float; 5]>() as u64)
85 ~                 .wrapping_div(::core::mem::size_of::<libc::c_float>() as u64)),
   |

warning: `c2rust_out` (bin "main") generated 41 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 41 warnings (41 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.85s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/memory_allocation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:24:65
   |
24 |             (::core::mem::size_of::<i32>() as u64).wrapping_mul((100 + 1i32) as u64),
   |                                                                 ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.00s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/menu)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (18 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:70:5
   |
70 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:35:1
   |
35 | / pub struct _IO_FILE {
36 | |     pub _flags: i32,
37 | |     pub _IO_read_ptr: *mut i8,
38 | |     pub _IO_read_end: *mut i8,
...  |
64 | |     pub _unused2: [i8; 20],
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
35 + #[non_exhaustive]
36 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:13
   |
72 |             (b"fee fie\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:13
   |
73 |             (b"huff and puff\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:13
   |
74 |             (b"mirror mirror\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:13
   |
75 |             (b"tick tock\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:37
   |
78 |         let mut prompt: *const i8 = (b"Which is from the three pigs?\0" as *const u8).cast::<i8>();
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:36
   |
81 |             build_str_from_raw_ptr(menu_select(items.as_mut_ptr(), prompt) as *mut u8)
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:100:22
    |
100 |             while !(*items.offset(i as isize)).is_null() {
    |                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:104:45
    |
104 |                     build_str_from_raw_ptr(*items.offset(i as isize) as *mut u8)
    |                                             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:128:10
    |
128 |         *items.offset((choice.wrapping_sub(1i32)) as isize)
    |          ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:100:35
    |
100 |             while !(*items.offset(i as isize)).is_null() {
    |                                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:103:21
    |
103 |                     i + 1_i32,
    |                     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:44
    |
104 |                     build_str_from_raw_ptr(*items.offset(i as isize) as *mut u8)
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:58
    |
104 |                     build_str_from_raw_ptr(*items.offset(i as isize) as *mut u8)
    |                                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:107:17
    |
107 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:54
    |
111 |                 print!("{} ", build_str_from_raw_ptr(prompt as *mut u8));
    |                                                      ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:117:17
    |
117 |                 ::core::mem::size_of::<[i8; 8192]>() as i32,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
117 |                 i32::try_from(::core::mem::size_of::<[i8; 8192]>()),
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:117:17
    |
117 |                 ::core::mem::size_of::<[i8; 8192]>() as i32,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:128:23
    |
128 |         *items.offset((choice.wrapping_sub(1i32)) as isize)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
   --> src/main.rs:107:17
    |
107 |                 i;
    |                 ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 22 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 22 warnings (22 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.57s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/middle_three_digits)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:50:5
   |
50 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:13
   |
35 |             (b"%d\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:38:13
   |
38 |         l = strlen(buf.as_mut_ptr()) as i32;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
38 |         l = i32::try_from(strlen(buf.as_mut_ptr()));
   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:13
   |
38 |         l = strlen(buf.as_mut_ptr()) as i32;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:13
   |
42 |         l = l / 2_i32 - 1_i32;
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:43:13
   |
43 |         buf[(l.wrapping_add(3i32)) as usize] = 0;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:13
   |
43 |         buf[(l.wrapping_add(3i32)) as usize] = 0;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:33
   |
44 |         buf.as_mut_ptr().offset(l as isize)
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:58:15
   |
58 |         while (i as u64)
   |               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:15
   |
58 |         while (i as u64)
   |               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:62:24
   |
62 |             m = mid3(x[i as usize]);
   |                        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:24
   |
62 |             m = mid3(x[i as usize]);
   |                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:21
   |
64 |                 m = (b"error\0" as *const u8).cast::<i8>() as *mut i8;
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:21
   |
64 |                 m = (b"error\0" as *const u8).cast::<i8>() as *mut i8;
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:68:19
   |
68 |                 x[i as usize],
   |                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:19
   |
68 |                 x[i as usize],
   |                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:72:13
   |
72 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:72:13
   |
72 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 19 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 19 warnings (19 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.70s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/modular_exponentiation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (4 fixes)
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.45s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/modular_inverse)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:25:28
   |
25 |         b = a.wrapping_rem(b);
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:28:14
   |
28 |         x0 = x1 - q.wrapping_mul(x0);
   |              ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.41s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/monte_carlo_methods)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (16 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:24:1
   |
24 | / pub struct _IO_FILE {
25 | |     pub _flags: i32,
26 | |     pub _IO_read_ptr: *mut i8,
27 | |     pub _IO_read_end: *mut i8,
...  |
53 | |     pub _unused2: [i8; 20],
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
24 + #[non_exhaustive]
25 | pub struct _IO_FILE {
   |

warning: floating-point arithmetic detected
  --> src/main.rs:71:21
   |
71 |                 x = f64::from(rand()) / (2147483647_f64 + 1.0f64);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:72:21
   |
72 |                 y = f64::from(rand()) / (2147483647_f64 + 1.0f64);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:73:33
   |
73 |                 if x.mul_add(x, y * y) < 1_f64 {
   |                                 ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: statement with no effect
  --> src/main.rs:75:21
   |
75 |                     hit;
   |                     ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:78:17
   |
78 |                 i;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:80:17
   |
80 |                 sampled;
   |                 ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: floating-point arithmetic detected
  --> src/main.rs:82:19
   |
82 |             val = hit as f64 / sampled as f64;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/main.rs:82:19
   |
82 |             val = hit as f64 / sampled as f64;
   |                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:19
   |
82 |             val = hit as f64 / sampled as f64;
   |                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/main.rs:82:32
   |
82 |             val = hit as f64 / sampled as f64;
   |                                ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:32
   |
82 |             val = hit as f64 / sampled as f64;
   |                                ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:83:21
   |
83 |             error = sqrt(val * (1_f64 - val) / sampled as f64) * 4_f64;
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/main.rs:83:48
   |
83 |             error = sqrt(val * (1_f64 - val) / sampled as f64) * 4_f64;
   |                                                ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:48
   |
83 |             error = sqrt(val * (1_f64 - val) / sampled as f64) * 4_f64;
   |                                                ^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:84:13
   |
84 |             val *= 4_f64;
   |             ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:17
   |
87 |                 (b"Pi = %f +/- %5.3e at %ldM samples.\r\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:75:21
   |
75 |                     hit;
   |                     ^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:78:17
   |
78 |                 i;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:80:17
   |
80 |                 sampled;
   |                 ^^^^^^^^

warning: `c2rust_out` (bin "main") generated 21 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 21 warnings (21 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.75s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/monty_hall_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/morse_code)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (83 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:32:1
   |
32 | / pub struct _IO_FILE {
33 | |     pub _flags: i32,
34 | |     pub _IO_read_ptr: *mut i8,
35 | |     pub _IO_read_end: *mut i8,
...  |
61 | |     pub _unused2: [i8; 20],
62 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
32 + #[non_exhaustive]
33 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:45
   |
75 | pub static mut dd: [*mut i8; 2] = unsafe { [dih.as_ptr() as *mut _, dah.as_ptr() as *mut _] };
   |                                             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:75:69
   |
75 | pub static mut dd: [*mut i8; 2] = unsafe { [dih.as_ptr() as *mut _, dah.as_ptr() as *mut _] };
   |                                                                     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:5
   |
78 |     (b"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,?'!/()&:;=+-_\"$@\0" as *const u8).cast::<i8>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:5
   |
81 |     (b"13\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:5
   |
82 |     (b"3111\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:5
   |
83 |     (b"3131\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:5
   |
84 |     (b"311\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:5
   |
85 |     (b"1\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:5
   |
86 |     (b"1131\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:5
   |
87 |     (b"331\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:5
   |
88 |     (b"1111\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:5
   |
89 |     (b"11\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:5
   |
90 |     (b"1333\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:5
   |
91 |     (b"313\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:5
   |
92 |     (b"1311\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:5
   |
93 |     (b"33\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:94:5
   |
94 |     (b"31\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:95:5
   |
95 |     (b"333\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:5
   |
96 |     (b"1331\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:5
   |
97 |     (b"3313\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:5
   |
98 |     (b"131\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:5
   |
99 |     (b"111\0" as *const u8).cast::<i8>(),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:100:5
    |
100 |     (b"3\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:101:5
    |
101 |     (b"113\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:5
    |
102 |     (b"1113\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:5
    |
103 |     (b"133\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:5
    |
104 |     (b"3113\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:5
    |
105 |     (b"3133\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:106:5
    |
106 |     (b"3311\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:5
    |
107 |     (b"33333\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:5
    |
108 |     (b"13333\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:109:5
    |
109 |     (b"11333\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:5
    |
110 |     (b"11133\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:5
    |
111 |     (b"11113\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:5
    |
112 |     (b"11111\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:5
    |
113 |     (b"31111\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:5
    |
114 |     (b"33111\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:115:5
    |
115 |     (b"33311\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:5
    |
116 |     (b"33331\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:5
    |
117 |     (b"131313\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:118:5
    |
118 |     (b"331133\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:119:5
    |
119 |     (b"113311\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:5
    |
120 |     (b"133331\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:5
    |
121 |     (b"313133\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:5
    |
122 |     (b"31131\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:123:5
    |
123 |     (b"31331\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:5
    |
124 |     (b"313313\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:125:5
    |
125 |     (b"13111\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:126:5
    |
126 |     (b"333111\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:127:5
    |
127 |     (b"313131\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:128:5
    |
128 |     (b"31113\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:129:5
    |
129 |     (b"13131\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:5
    |
130 |     (b"311113\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:131:5
    |
131 |     (b"113313\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:132:5
    |
132 |     (b"131131\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:133:5
    |
133 |     (b"1113113\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:134:5
    |
134 |     (b"133131\0" as *const u8).cast::<i8>(),
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:140:16
    |
140 |         while *morse != 0 {
    |                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:20
    |
141 |             strcat(s, dd[i32::from('3' as i32 == i32::from(*morse)) as usize]);
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:61
    |
141 |             strcat(s, dd[i32::from('3' as i32 == i32::from(*morse)) as usize]);
    |                                                             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:142:21
    |
142 |             morse = morse.offset(1);
    |                     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:145:16
    |
145 |         strcat(s, medium.as_mut_ptr());
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:141:26
    |
141 |             strcat(s, dd[i32::from('3' as i32 == i32::from(*morse)) as usize]);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:26
    |
141 |             strcat(s, dd[i32::from('3' as i32 == i32::from(*morse)) as usize]);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:36
    |
141 |             strcat(s, dd[i32::from('3' as i32 == i32::from(*morse)) as usize]);
    |                                    ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:143:13
    |
143 |             morse;
    |             ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:154:17
    |
154 |         sprintf(o, (b"beep\0" as *const u8).cast::<i8>());
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:155:16
    |
155 |         while *i != 0 {
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:156:51
    |
156 |             pc = strchr(ascii, toupper(i32::from(*i)));
    |                                                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:158:24
    |
158 |                 strcat(o, word.as_mut_ptr());
    |                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:162:17
    |
162 |             i = i.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:165:16
    |
165 |         strcat(o, word.as_mut_ptr());
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:154:20
    |
154 |         sprintf(o, (b"beep\0" as *const u8).cast::<i8>());
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:160:31
    |
160 |                 append(o, itu[pc.offset_from(ascii) as i64 as usize]);
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
160 |                 append(o, itu[usize::try_from(pc.offset_from(ascii) as i64)]);
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/main.rs:160:31
    |
160 |                 append(o, itu[pc.offset_from(ascii) as i64 as usize]);
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:31
    |
160 |                 append(o, itu[pc.offset_from(ascii) as i64 as usize]);
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:31
    |
160 |                 append(o, itu[pc.offset_from(ascii) as i64 as usize]);
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:163:13
    |
163 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:180:21
    |
180 |                     (b"0123456789\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this operation will always return zero. This is likely not the intended outcome
   --> src/main.rs:183:24
    |
183 |                   return 0_i32 * fprintf(
    |  ________________________^
184 | |                     stderr,
185 | |                     (b"use: %s [duration]   dit in ms, default %d\n\0" as *const u8).cast::<i8>(),
186 | |                     *av,
187 | |                     dit,
188 | |                 );
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op
    = note: `#[warn(clippy::erasing_op)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:185:21
    |
185 |                     (b"use: %s [duration]   dit in ms, default %d\n\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:202:13
    |
202 |             (b" -n -f 440 -l %d -D %d\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:203:13
    |
203 |             3 * dit,
    |             ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:208:13
    |
208 |             (b" -n -f 440 -l %d -D %d\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:214:13
    |
214 |             (b" -n -D %d\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:215:13
    |
215 |             (3 - 1) * dit,
    |             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:219:13
    |
219 |             (b" -n -D %d\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:220:13
    |
220 |             (7 - (3 - 1) - 1) * dit,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `expect()` on a `Result` value
   --> src/main.rs:233:13
    |
233 | /             (::std::ffi::CString::new(arg))
234 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:239:33
    |
239 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
239 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:239:33
    |
239 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:239:33
    |
239 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:239:33
    |
239 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
   --> src/main.rs:143:13
    |
143 |             morse;
    |             ^^^^^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:163:13
    |
163 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 97 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:229:1
    |
229 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:233:13
    |
233 | /             (::std::ffi::CString::new(arg))
234 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 98 warnings (97 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.84s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/move_to_front_algorithm)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/multiplication_tables)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:19:33
   |
19 |             print!("{:3}{}", j, ' ' as i32)
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:21:33
   |
21 |             print!("{:3}{}", j, '\n' as i32)
   |                                 ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:24:9
   |
24 |         j;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:34:9
   |
34 |         j;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:43:33
   |
43 |                 print!("{:3} ", i * j)
   |                                 ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:46:13
   |
46 |             j;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:50:9
   |
50 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:24:9
   |
24 |         j;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:34:9
   |
34 |         j;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:46:13
   |
46 |             j;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:50:9
   |
50 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 12 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.65s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/munchausen_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (10 fixes)
warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:22:38
   |
22 |                 let mut digit: i32 = number % 10;
   |                                      ^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:23:23
   |
23 |                 sum = (f64::from(sum) + pow(f64::from(digit), f64::from(digit))) as i32;
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:23:23
   |
23 |                 sum = (f64::from(sum) + pow(f64::from(digit), f64::from(digit))) as i32;
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:23:23
   |
23 |                 sum = (f64::from(sum) + pow(f64::from(digit), f64::from(digit))) as i32;
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: statement with no effect
  --> src/main.rs:30:13
   |
30 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:30:13
   |
30 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 7 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 7 warnings (7 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.61s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/munching_squares)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (56 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:28:1
   |
28 | / pub struct _IO_FILE {
29 | |     pub _flags: i32,
30 | |     pub _IO_read_ptr: *mut i8,
31 | |     pub _IO_read_end: *mut i8,
...  |
57 | |     pub _unused2: [i8; 20],
58 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
28 + #[non_exhaustive]
29 | pub struct _IO_FILE {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:71:18
   |
71 |                 *p.offset(0_isize) = c as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:72:18
   |
72 |                 *p.offset(1_isize) = x as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:73:18
   |
73 |                 *p.offset(2_isize) = 0;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:76:18
   |
76 |                 *p.offset(0_isize) = x as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:77:18
   |
77 |                 *p.offset(1_isize) = c as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:78:18
   |
78 |                 *p.offset(2_isize) = 0;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:81:18
   |
81 |                 *p.offset(0_isize) = 0;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:82:18
   |
82 |                 *p.offset(1_isize) = c as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:18
   |
83 |                 *p.offset(2_isize) = x as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:86:18
   |
86 |                 *p.offset(0_isize) = 0;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:87:18
   |
87 |                 *p.offset(1_isize) = x as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:88:18
   |
88 |                 *p.offset(2_isize) = c as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:91:18
   |
91 |                 *p.offset(0_isize) = x as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:18
   |
92 |                 *p.offset(1_isize) = 0;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:93:18
   |
93 |                 *p.offset(2_isize) = c as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:96:18
   |
96 |                 *p.offset(0_isize) = c as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:97:18
   |
97 |                 *p.offset(1_isize) = 0;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:98:18
   |
98 |                 *p.offset(2_isize) = x as u8;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:66:26
   |
66 |         let mut c: i32 = (255_f64 * sat) as i32;
   |                          ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:66:26
   |
66 |         let mut c: i32 = (255_f64 * sat) as i32;
   |                          ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:66:26
   |
66 |         let mut c: i32 = (255_f64 * sat) as i32;
   |                          ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:67:9
   |
67 |         hue /= 60_f64;
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:68:13
   |
68 |         x = (1_f64 - fabs(fmod(hue, 2_f64) - 1_f64)) * 255_f64;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:69:15
   |
69 |         match hue as i32 {
   |               ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:15
   |
69 |         match hue as i32 {
   |               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:71:38
   |
71 |                 *p.offset(0_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
71 |                 *p.offset(0_isize) = u8::try_from(c);
   |                                      ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:71:38
   |
71 |                 *p.offset(0_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:38
   |
71 |                 *p.offset(0_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `u8` may truncate the value
  --> src/main.rs:72:38
   |
72 |                 *p.offset(1_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
  --> src/main.rs:72:38
   |
72 |                 *p.offset(1_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:38
   |
72 |                 *p.offset(1_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `u8` may truncate the value
  --> src/main.rs:76:38
   |
76 |                 *p.offset(0_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
  --> src/main.rs:76:38
   |
76 |                 *p.offset(0_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:76:38
   |
76 |                 *p.offset(0_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:77:38
   |
77 |                 *p.offset(1_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
77 |                 *p.offset(1_isize) = u8::try_from(c);
   |                                      ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:77:38
   |
77 |                 *p.offset(1_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:38
   |
77 |                 *p.offset(1_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:82:38
   |
82 |                 *p.offset(1_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
82 |                 *p.offset(1_isize) = u8::try_from(c);
   |                                      ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:82:38
   |
82 |                 *p.offset(1_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:38
   |
82 |                 *p.offset(1_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `u8` may truncate the value
  --> src/main.rs:83:38
   |
83 |                 *p.offset(2_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
  --> src/main.rs:83:38
   |
83 |                 *p.offset(2_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:38
   |
83 |                 *p.offset(2_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `u8` may truncate the value
  --> src/main.rs:87:38
   |
87 |                 *p.offset(1_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
  --> src/main.rs:87:38
   |
87 |                 *p.offset(1_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:38
   |
87 |                 *p.offset(1_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:88:38
   |
88 |                 *p.offset(2_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
88 |                 *p.offset(2_isize) = u8::try_from(c);
   |                                      ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:88:38
   |
88 |                 *p.offset(2_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:38
   |
88 |                 *p.offset(2_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `u8` may truncate the value
  --> src/main.rs:91:38
   |
91 |                 *p.offset(0_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
  --> src/main.rs:91:38
   |
91 |                 *p.offset(0_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:38
   |
91 |                 *p.offset(0_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:93:38
   |
93 |                 *p.offset(2_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
93 |                 *p.offset(2_isize) = u8::try_from(c);
   |                                      ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:93:38
   |
93 |                 *p.offset(2_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:38
   |
93 |                 *p.offset(2_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:96:38
   |
96 |                 *p.offset(0_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
96 |                 *p.offset(0_isize) = u8::try_from(c);
   |                                      ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:96:38
   |
96 |                 *p.offset(0_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:38
   |
96 |                 *p.offset(0_isize) = c as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `f64` to `u8` may truncate the value
  --> src/main.rs:98:38
   |
98 |                 *p.offset(2_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
  --> src/main.rs:98:38
   |
98 |                 *p.offset(2_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:38
   |
98 |                 *p.offset(2_isize) = x as u8;
   |                                      ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:111:42
    |
111 |         let mut colors: *mut u8 = malloc((size.wrapping_mul(3i32)) as u64).cast::<u8>();
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:42
    |
111 |         let mut colors: *mut u8 = malloc((size.wrapping_mul(3i32)) as u64).cast::<u8>();
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:112:39
    |
112 |         let mut pix: *mut u8 = malloc((size * size.wrapping_mul(3i32)) as u64).cast::<u8>();
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:39
    |
112 |         let mut pix: *mut u8 = malloc((size * size.wrapping_mul(3i32)) as u64).cast::<u8>();
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:112:39
    |
112 |         let mut pix: *mut u8 = malloc((size * size.wrapping_mul(3i32)) as u64).cast::<u8>();
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: floating-point arithmetic detected
   --> src/main.rs:118:17
    |
118 |                 f64::from(i) * 240.0f64 / f64::from(size),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:119:17
    |
119 |                 f64::from(i) * 1.0f64 / f64::from(size),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:120:31
    |
120 |                 colors.offset((3 * i) as isize),
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:120:31
    |
120 |                 colors.offset((3 * i) as isize),
    |                               ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:123:13
    |
123 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:132:21
    |
132 |                     colors.offset(((i ^ j) * 3i32) as isize) as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:132:35
    |
132 |                     colors.offset(((i ^ j) * 3i32) as isize) as *const libc::c_void,
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:132:35
    |
132 |                     colors.offset(((i ^ j) * 3i32) as isize) as *const libc::c_void,
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:136:17
    |
136 |                 j;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:140:13
    |
140 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:143:13
    |
143 |             (b"xor.ppm\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:144:13
    |
144 |             (b"wb\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:148:13
    |
148 |             (b"P6\n%d %d\n255\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:13
    |
153 |             pix as *const libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:154:13
    |
154 |             (size * size.wrapping_mul(3i32)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:154:13
    |
154 |             (size * size.wrapping_mul(3i32)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:154:13
    |
154 |             (size * size.wrapping_mul(3i32)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
   --> src/main.rs:123:13
    |
123 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:136:17
    |
136 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:140:13
    |
140 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 88 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 88 warnings (88 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.82s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/mutual_recursion)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (16 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:17:9
   |
17 |         n - M(F(n.wrapping_sub(1)))
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:9
   |
26 |         n - F(M(n.wrapping_sub(1)))
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:36:9
   |
36 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:43:9
   |
43 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:36:9
   |
36 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:43:9
   |
43 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 7 warnings (3 duplicates)
warning: `c2rust_out` (bin "main" test) generated 7 warnings (5 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.35s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/negative_base_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/next_highest_int_from_digits)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (27 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:42:5
   |
42 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:33:26
   |
33 |         let mut c: i8 = *str.offset(i as isize);
   |                          ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:34:36
   |
34 |         *str.offset(i as isize) = *str.offset(j as isize);
   |                                    ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:34:10
   |
34 |         *str.offset(i as isize) = *str.offset(j as isize);
   |          ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:10
   |
35 |         *str.offset(j as isize) = c;
   |          ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:37
   |
33 |         let mut c: i8 = *str.offset(i as isize);
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:47
   |
34 |         *str.offset(i as isize) = *str.offset(j as isize);
   |                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:21
   |
34 |         *str.offset(i as isize) = *str.offset(j as isize);
   |                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:21
   |
35 |         *str.offset(j as isize) = c;
   |                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:46:13
   |
46 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:48:13
   |
48 |             j;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:57:35
   |
57 |         let mut len: i32 = strlen(str) as i32;
   |                                   ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:66:27
   |
66 |             if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(j as isize)) {
   |                           ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:66:64
   |
66 |             if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(j as isize)) {
   |                                                                ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:35
   |
70 |                     if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(k as isize)) {
   |                                   ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:72
   |
70 |                     if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(k as isize)) {
   |                                                                        ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:57:28
   |
57 |         let mut len: i32 = strlen(str) as i32;
   |                            ^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
57 |         let mut len: i32 = i32::try_from(strlen(str));
   |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:28
   |
57 |         let mut len: i32 = strlen(str) as i32;
   |                            ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: equal expressions as operands to `!=`
  --> src/main.rs:59:20
   |
59 |             return 0_i32 != 0_i32;
   |                    ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
   = note: `#[warn(clippy::eq_op)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:66:38
   |
66 |             if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(j as isize)) {
   |                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:66:75
   |
66 |             if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(j as isize)) {
   |                                                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:46
   |
70 |                     if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(k as isize)) {
   |                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:83
   |
70 |                     if i32::from(*str.offset(i as isize)) < i32::from(*str.offset(k as isize)) {
   |                                                                                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: equal expressions as operands to `!=`
  --> src/main.rs:79:9
   |
79 |         0_i32 != 0_i32
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:13
   |
91 |             (b"%u\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `u32` may truncate the value
   --> src/main.rs:100:9
    |
100 |         strtoul(str.as_mut_ptr(), std::ptr::null_mut::<*mut i8>(), 10) as u32
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
100 |         u32::try_from(strtoul(str.as_mut_ptr(), std::ptr::null_mut::<*mut i8>(), 10))
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:100:9
    |
100 |         strtoul(str.as_mut_ptr(), std::ptr::null_mut::<*mut i8>(), 10) as u32
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
   --> src/main.rs:106:22
    |
106 |       let count: i32 = (::core::mem::size_of::<[u32; 8]>() as u64)
    |  ______________________^
107 | |         .wrapping_div(::core::mem::size_of::<i32>() as u64) as i32;
    | |__________________________________________________________________^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
106 ~     let count: i32 = i32::try_from((::core::mem::size_of::<[u32; 8]>() as u64)
107 ~         .wrapping_div(::core::mem::size_of::<i32>() as u64));
    |

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:112:21
    |
112 |             numbers[i as usize],
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:21
    |
112 |             numbers[i as usize],
    |                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:113:38
    |
113 |             next_highest_int(numbers[i as usize])
    |                                      ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:113:38
    |
113 |             next_highest_int(numbers[i as usize])
    |                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:116:9
    |
116 |         i;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:131:36
    |
131 |             build_str_from_raw_ptr(big.as_ptr() as *mut u8),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:46:13
   |
46 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:48:13
   |
48 |             j;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:116:9
    |
116 |         i;
    |         ^^

warning: `c2rust_out` (bin "main") generated 38 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 38 warnings (38 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.69s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/nimber_arithmetic)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (14 fixes)
warning: statement with no effect
  --> src/main.rs:24:9
   |
24 |         q;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:55:9
   |
55 |         (3i32 << h.wrapping_sub(1u32)) as u32,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:9
   |
55 |         (3i32 << h.wrapping_sub(1u32)) as u32,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:60:1
   |
60 | / pub extern "C" fn print_table(
61 | |     mut n: u32,
62 | |     mut op: i8,
63 | | // SAFETY: machine generated unsafe code
64 | |     mut func: Option<unsafe extern "C" fn(u32, u32) -> u32>,
65 | | ) {
   | |_^
   |
note: first possible panic found here
  --> src/main.rs:90:29
   |
90 |                     None => panic!("non-null function pointer"),
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: statement with no effect
  --> src/main.rs:71:9
   |
71 |         a;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:78:9
   |
78 |         a_0;
   |         ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:93:17
   |
93 |                 a_1;
   |                 ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:97:13
   |
97 |             b;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:105:9
    |
105 |         '+' as i8,
    |         ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:14
    |
107 |         Some(nimsum as unsafe extern "C" fn(u32, u32) -> u32),
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:9
    |
112 |         '*' as i8,
    |         ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:114:14
    |
114 |         Some(nimprod as unsafe extern "C" fn(u32, u32) -> u32),
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:24:9
   |
24 |         q;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:71:9
   |
71 |         a;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:78:9
   |
78 |         a_0;
   |         ^^^^

warning: path statement with no effect
  --> src/main.rs:93:17
   |
93 |                 a_1;
   |                 ^^^^

warning: path statement with no effect
  --> src/main.rs:97:13
   |
97 |             b;
   |             ^^

warning: `c2rust_out` (bin "main") generated 18 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 18 warnings (18 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.69s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/nim_game)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:19
   |
22 |             scanf((b"%i\0" as *const u8).cast::<i8>(), &mut uin as *mut i32);
   |                   ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:56
   |
22 |             scanf((b"%i\0" as *const u8).cast::<i8>(), &mut uin as *mut i32);
   |                                                        ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:41:36
   |
41 |     let mut remainingTokens: i32 = numTokens - take;
   |                                    ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:49:25
   |
49 |     let mut take: i32 = numTokens % 4;
   |                         ^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:50:36
   |
50 |     let mut remainingTokens: i32 = numTokens - take;
   |                                    ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 6 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 6 warnings (6 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.67s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/n_plus_one_half)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: statement with no effect
  --> src/main.rs:23:9
   |
23 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:23:9
   |
23 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.54s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/n_queens_problem)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: operator precedence can trip the unwary
  --> src/main.rs:32:35
   |
32 |                         } else if i + j & 1 != 0 {
   |                                   ^^^^^^^^^ help: consider parenthesizing your expression: `(i + j) & 1`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
   = note: `#[warn(clippy::precedence)]` on by default

error[E0277]: no implementation for `i32 & &bool`
  --> src/main.rs:53:21
   |
53 |                     & &!(*hist.offset(j_0 as isize) == i_0
   |                     ^ no implementation for `i32 & &bool`
   |
   = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `i32`
   = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
             <&'a i32 as std::ops::BitAnd<i32>>
             <&i32 as std::ops::BitAnd<&i32>>
             <i32 as std::ops::BitAnd<&i32>>
             <i32 as std::ops::BitAnd>

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 3 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/n_smooth_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (29 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:186:5
    |
186 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:26:1
   |
26 | / pub struct _IO_FILE {
27 | |     pub _flags: i32,
28 | |     pub _IO_read_ptr: *mut i8,
29 | |     pub _IO_read_end: *mut i8,
...  |
55 | |     pub _unused2: [i8; 20],
56 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
26 + #[non_exhaustive]
27 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:29
   |
65 |             fprintf(stderr, (b"Out of memory\n\0" as *const u8).cast::<i8>());
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:76:50
   |
76 |         let mut ptr: *mut libc::c_void = realloc(p, n);
   |                                                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:29
   |
78 |             fprintf(stderr, (b"Out of memory\n\0" as *const u8).cast::<i8>());
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: equal expressions as operands to `!=`
  --> src/main.rs:91:16
   |
91 |         return 0_i32 != 0_i32;
   |                ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
   = note: `#[warn(clippy::eq_op)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:95:27
   |
95 |         if n.wrapping_rem(p) == 0 {
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: equal expressions as operands to `!=`
  --> src/main.rs:96:20
   |
96 |             return 0_i32 != 0_i32;
   |                    ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:132:10
    |
132 |         *primes = buffer;
    |          ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:127:32
    |
127 |                 *buffer.offset(fresh0 as isize) = p;
    |                                ^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:127:32
    |
127 |                 *buffer.offset(fresh0 as isize) = p;
    |                                ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:130:13
    |
130 |             p;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
   --> src/main.rs:148:9
    |
148 |         i;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:161:9
    |
161 |         n;
    |         ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:170:9
    |
170 |         n_0;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:179:9
    |
179 |         n_1;
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:130:13
    |
130 |             p;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:148:9
    |
148 |         i;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:161:9
    |
161 |         n;
    |         ^^

warning: path statement with no effect
   --> src/main.rs:170:9
    |
170 |         n_0;
    |         ^^^^

warning: path statement with no effect
   --> src/main.rs:179:9
    |
179 |         n_1;
    |         ^^^^

warning: `c2rust_out` (bin "main") generated 22 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 22 warnings (22 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.93s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/nth)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (40 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:67:5
   |
67 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
  --> src/main.rs:82:5
   |
82 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
  --> src/main.rs:97:5
   |
97 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:52:13
   |
52 |             buf,
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:13
   |
31 |             (b"th\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:13
   |
31 |             (b"th\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:13
   |
32 |             (b"st\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:13
   |
32 |             (b"st\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:13
   |
33 |             (b"nd\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:13
   |
33 |             (b"nd\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:13
   |
34 |             (b"rd\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:13
   |
34 |             (b"rd\0" as *const u8).cast::<i8>() as *mut i8,
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:37:15
   |
37 |         match num % 10_i32 {
   |               ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:39:24
   |
39 |                 i = if num % 100_i32 == 11_i32 { 0_i32 } else { 1_i32 };
   |                        ^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:42:24
   |
42 |                 i = if num % 100_i32 == 12_i32 { 0_i32 } else { 2_i32 };
   |                        ^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:45:24
   |
45 |                 i = if num % 100_i32 == 13_i32 { 0_i32 } else { 3_i32 };
   |                        ^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:13
   |
54 |             (b"%d%s\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:56:22
   |
56 |             suffixes[i as usize],
   |                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:22
   |
56 |             suffixes[i as usize],
   |                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:75:13
   |
75 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:78:18
   |
78 |     print!("{}", '\n' as i32);
   |                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:90:13
   |
90 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:18
   |
93 |     print!("{}", '\n' as i32);
   |                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:105:13
    |
105 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:108:18
    |
108 |     print!("{}", '\n' as i32);
    |                  ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:75:13
   |
75 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:90:13
   |
90 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:105:13
    |
105 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 29 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 29 warnings (29 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.71s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/null_object)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (6 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:19:18
   |
19 |             puts((b"object is null\0" as *const u8).cast::<i8>());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.56s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/number_names)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/numerical_integration)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/old_lady_swallowed_a_fly)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/one_dimensional_cellular_automata)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (22 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:28:45
   |
28 |                 trans[(i32::from(i32::from(*cell.offset((i.wrapping_sub(1i32)) as isize)) != '_' as i32)
   |                                             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:30:44
   |
30 |                     + i32::from(i32::from(*cell.offset(i as isize)) != '_' as i32) * 2_i32
   |                                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:31:44
   |
31 |                     + i32::from(i32::from(*cell.offset((i.wrapping_add(1i32)) as isize)) != '_' as i32))
   |                                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:27:14
   |
27 |             *backup.offset(i as isize) =
   |              ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:33:42
   |
33 |             diff += i32::from(i32::from(*backup.offset(i as isize)) != i32::from(*cell.offset(i as isize)));
   |                                          ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:33:83
   |
33 |             diff += i32::from(i32::from(*backup.offset(i as isize)) != i32::from(*cell.offset(i as isize)));
   |                                                                                   ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:37:16
   |
37 |         strcpy(cell, backup as *const i8);
   |                ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:28:23
   |
28 |                   trans[(i32::from(i32::from(*cell.offset((i.wrapping_sub(1i32)) as isize)) != '_' as i32)
   |  _______________________^
29 | |                     * 4_i32
30 | |                     + i32::from(i32::from(*cell.offset(i as isize)) != '_' as i32) * 2_i32
31 | |                     + i32::from(i32::from(*cell.offset((i.wrapping_add(1i32)) as isize)) != '_' as i32))
32 | |                     as usize];
   | |____________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:23
   |
28 |                   trans[(i32::from(i32::from(*cell.offset((i.wrapping_sub(1i32)) as isize)) != '_' as i32)
   |  _______________________^
29 | |                     * 4_i32
30 | |                     + i32::from(i32::from(*cell.offset(i as isize)) != '_' as i32) * 2_i32
31 | |                     + i32::from(i32::from(*cell.offset((i.wrapping_add(1i32)) as isize)) != '_' as i32))
32 | |                     as usize];
   | |____________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:28:23
   |
28 |                   trans[(i32::from(i32::from(*cell.offset((i.wrapping_sub(1i32)) as isize)) != '_' as i32)
   |  _______________________^
29 | |                     * 4_i32
30 | |                     + i32::from(i32::from(*cell.offset(i as isize)) != '_' as i32) * 2_i32
31 | |                     + i32::from(i32::from(*cell.offset((i.wrapping_add(1i32)) as isize)) != '_' as i32))
   | |________________________________________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:57
   |
28 |                 trans[(i32::from(i32::from(*cell.offset((i.wrapping_sub(1i32)) as isize)) != '_' as i32)
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:94
   |
28 |                 trans[(i32::from(i32::from(*cell.offset((i.wrapping_sub(1i32)) as isize)) != '_' as i32)
   |                                                                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:56
   |
30 |                     + i32::from(i32::from(*cell.offset(i as isize)) != '_' as i32) * 2_i32
   |                                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:72
   |
30 |                     + i32::from(i32::from(*cell.offset(i as isize)) != '_' as i32) * 2_i32
   |                                                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:56
   |
31 |                     + i32::from(i32::from(*cell.offset((i.wrapping_add(1i32)) as isize)) != '_' as i32))
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:93
   |
31 |                     + i32::from(i32::from(*cell.offset((i.wrapping_add(1i32)) as isize)) != '_' as i32))
   |                                                                                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:28
   |
27 |             *backup.offset(i as isize) =
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:33:13
   |
33 |             diff += i32::from(i32::from(*backup.offset(i as isize)) != i32::from(*cell.offset(i as isize)));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:56
   |
33 |             diff += i32::from(i32::from(*backup.offset(i as isize)) != i32::from(*cell.offset(i as isize)));
   |                                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:95
   |
33 |             diff += i32::from(i32::from(*backup.offset(i as isize)) != i32::from(*cell.offset(i as isize)));
   |                                                                                               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:35:13
   |
35 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:22
   |
37 |         strcpy(cell, backup as *const i8);
   |                      ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:54:17
   |
54 |                 (::core::mem::size_of::<[i8; 22]>() as u64).wrapping_sub(3) as i32,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
54 |                 i32::try_from((::core::mem::size_of::<[i8; 22]>() as u64).wrapping_sub(3)),
   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: path statement with no effect
  --> src/main.rs:35:13
   |
35 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 25 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 25 warnings (25 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.53s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/one_of_n_lines_in_a_file)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:17:28
   |
17 |     let mut randmax: i32 = 2147483647 / n.wrapping_mul(n);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:27:5
   |
27 |     r / (randmax / n)
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:40:9
   |
40 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:51:9
   |
51 |         i;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:52:9
   |
52 |         r[one_of_n(10) as usize] += 1_i32;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:52:11
   |
52 |         r[one_of_n(10) as usize] += 1_i32;
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:11
   |
52 |         r[one_of_n(10) as usize] += 1_i32;
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: unnecessary operation
  --> src/main.rs:53:9
   |
53 |         r[one_of_n(10) as usize];
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: statement can be written as: `assert!(r.len() > one_of_n(10) as usize);`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation
   = note: `#[warn(clippy::unnecessary_operation)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:53:11
   |
53 |         r[one_of_n(10) as usize];
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:11
   |
53 |         r[one_of_n(10) as usize];
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:58:30
   |
58 |             print!("{}{}", r[i as usize], '\n' as i32)
   |                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:30
   |
58 |             print!("{}{}", r[i as usize], '\n' as i32)
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:43
   |
58 |             print!("{}{}", r[i as usize], '\n' as i32)
   |                                           ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:60:30
   |
60 |             print!("{}{}", r[i as usize], ' ' as i32)
   |                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:30
   |
60 |             print!("{}{}", r[i as usize], ' ' as i32)
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:43
   |
60 |             print!("{}{}", r[i as usize], ' ' as i32)
   |                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:63:9
   |
63 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:40:9
   |
40 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:51:9
   |
51 |         i;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:63:9
   |
63 |         i;
   |         ^^

warning: `c2rust_out` (bin "main" test) generated 21 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 21 warnings (21 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.58s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/optional_parameters)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/ordered_words)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:9:12
  |
9 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib test) generated 2 warnings (2 duplicates)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/palindrome_dates)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:35:5
   |
35 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:29:25
   |
29 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/palindrome_detection)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (24 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:21:20
   |
21 |         l = strlen(s) as i32;
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:24:27
   |
24 |             if i32::from(*s.offset(i as isize)) != i32::from(*s.offset((l - i.wrapping_sub(1i32)) as isize))
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:24:63
   |
24 |             if i32::from(*s.offset(i as isize)) != i32::from(*s.offset((l - i.wrapping_sub(1i32)) as isize))
   |                                                               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:21:13
   |
21 |         l = strlen(s) as i32;
   |             ^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
21 |         l = i32::try_from(strlen(s));
   |             ~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:21:13
   |
21 |         l = strlen(s) as i32;
   |             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:24:36
   |
24 |             if i32::from(*s.offset(i as isize)) != i32::from(*s.offset((l - i.wrapping_sub(1i32)) as isize))
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:24:72
   |
24 |             if i32::from(*s.offset(i as isize)) != i32::from(*s.offset((l - i.wrapping_sub(1i32)) as isize))
   |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:24:72
   |
24 |             if i32::from(*s.offset(i as isize)) != i32::from(*s.offset((l - i.wrapping_sub(1i32)) as isize))
   |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:29:13
   |
29 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:23
   |
42 |         if i32::from(*s.offset(b as isize)) != i32::from(*s.offset((e.wrapping_sub(1i32)) as isize)) {
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:59
   |
42 |         if i32::from(*s.offset(b as isize)) != i32::from(*s.offset((e.wrapping_sub(1i32)) as isize)) {
   |                                                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:39:12
   |
39 |         if e - 1_i32 <= b {
   |            ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:32
   |
42 |         if i32::from(*s.offset(b as isize)) != i32::from(*s.offset((e.wrapping_sub(1i32)) as isize)) {
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:68
   |
42 |         if i32::from(*s.offset(b as isize)) != i32::from(*s.offset((e.wrapping_sub(1i32)) as isize)) {
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:52:32
   |
52 |         let mut t: *const i8 = (b"ingirumimusnocteetconsumimurigni\0" as *const u8).cast::<i8>();
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:54:13
   |
54 |             (b"sequence \"%s\" is%s palindrome\n\0" as *const u8).cast::<i8>();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:55:26
   |
55 |         let mut l: i32 = strlen(t) as i32;
   |                          ^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
55 |         let mut l: i32 = i32::try_from(strlen(t));
   |                          ~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:26
   |
55 |         let mut l: i32 = strlen(t) as i32;
   |                          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:33
   |
57 |             printf(template, t, (b"\0" as *const u8).cast::<i8>())
   |                                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:59:33
   |
59 |             printf(template, t, (b"n't\0" as *const u8).cast::<i8>())
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:33
   |
62 |             printf(template, t, (b"\0" as *const u8).cast::<i8>())
   |                                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:33
   |
64 |             printf(template, t, (b"n't\0" as *const u8).cast::<i8>())
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:29:13
   |
29 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 24 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 24 warnings (24 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.61s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/pangram_checker)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (24 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:67:5
   |
67 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:37:17
   |
37 |             s = s.offset(1);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:13
   |
31 |             (b"abcdefghjiklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\0" as *const u8).cast::<i8>();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:33
   |
39 |             if i32::from(ch) == '\0' as i32 {
   |                                 ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:19
   |
48 |             idx = (p.offset_from(alpha) as i64 % 26i64) as i32;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:48:19
   |
48 |             idx = (p.offset_from(alpha) as i64 % 26i64) as i32;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:20
   |
48 |             idx = (p.offset_from(alpha) as i64 % 26i64) as i32;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:49:13
   |
49 |             total += i32::from(wasused[idx as usize] == 0);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:49:40
   |
49 |             total += i32::from(wasused[idx as usize] == 0);
   |                                        ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:40
   |
49 |             total += i32::from(wasused[idx as usize] == 0);
   |                                        ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:50:21
   |
50 |             wasused[idx as usize] = 1;
   |                     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:21
   |
50 |             wasused[idx as usize] = 1;
   |                     ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:9
   |
62 |         (b"The quick brown fox jumps over the lazy dog.\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:9
   |
63 |         (b"The qu1ck brown fox jumps over the lazy d0g.\0" as *const u8).cast::<i8>(),
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:69:33
   |
69 |             if is_pangram(tests[i as usize]) != 0_i32 {
   |                                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:33
   |
69 |             if is_pangram(tests[i as usize]) != 0_i32 {
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:44
   |
72 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8)
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:72:50
   |
72 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:50
   |
72 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:44
   |
77 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8)
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:77:50
   |
77 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:50
   |
77 |                     build_str_from_raw_ptr(tests[i as usize] as *mut u8)
   |                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:81:13
   |
81 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:81:13
   |
81 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 25 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 25 warnings (25 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.70s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/parametric_polymorphism)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:50:12
   |
50 |         if (*root).value < (*n).value {
   |            ^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:50:28
   |
50 |         if (*root).value < (*n).value {
   |                            ^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:51:16
   |
51 |             if ((*root).left).is_null() {
   |                ^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:52:17
   |
52 |                 (*root).left = n;
   |                 ^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:53:24
   |
53 |                 return (*root).left;
   |                        ^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:55:24
   |
55 |                 root = (*root).left;
   |                        ^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:57:19
   |
57 |         } else if ((*root).right).is_null() {
   |                   ^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:58:13
   |
58 |             (*root).right = n;
   |             ^^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:59:20
   |
59 |             return (*root).right;
   |                    ^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:61:20
   |
61 |             root = (*root).right;
   |                    ^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:83:12
   |
83 |         if (*root).value < (*n).value {
   |            ^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:83:28
   |
83 |         if (*root).value < (*n).value {
   |                            ^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:84:16
   |
84 |             if ((*root).left).is_null() {
   |                ^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:85:17
   |
85 |                 (*root).left = n;
   |                 ^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:86:24
   |
86 |                 return (*root).left;
   |                        ^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:88:24
   |
88 |                 root = (*root).left;
   |                        ^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:90:19
   |
90 |         } else if ((*root).right).is_null() {
   |                   ^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:91:13
   |
91 |             (*root).right = n;
   |             ^^^^^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:92:20
   |
92 |             return (*root).right;
   |                    ^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> src/main.rs:94:20
   |
94 |             root = (*root).right;
   |                    ^^^^^^^^^^^^^ dereference of raw pointer
   |
   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

For more information about this error, try `rustc --explain E0133`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 20 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 20 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/parse_an_ip_address)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/partition_an_integer_x_into_n_primes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:9:12
  |
9 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib test) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib) generated 2 warnings (2 duplicates)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/pascals_triangle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:29:40
   |
29 |                 num = num.wrapping_mul((n.wrapping_add(k)) as u64);
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:40
   |
29 |                 num = num.wrapping_mul((n.wrapping_add(k)) as u64);
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:30:40
   |
30 |                 den = den.wrapping_mul(k as u64);
   |                                        ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:30:40
   |
30 |                 den = den.wrapping_mul(k as u64);
   |                                        ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:31:27
   |
31 |                 catalan = num.wrapping_div(den) as i32;
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
31 |                 catalan = i32::try_from(num.wrapping_div(den));
   |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:27
   |
31 |                 catalan = num.wrapping_div(den) as i32;
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:31:44
   |
31 |                 catalan = num.wrapping_div(den) as i32;
   |                                            ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:33:17
   |
33 |                 k;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:37:13
   |
37 |             n;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:33:17
   |
33 |                 k;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:37:13
   |
37 |             n;
   |             ^^

warning: `c2rust_out` (bin "main") generated 12 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 12 warnings (12 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.61s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/perfect_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (13 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:18:28
   |
18 |         let mut max: i32 = sqrt(f64::from(n)) as i32 + 1;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:18:28
   |
18 |         let mut max: i32 = sqrt(f64::from(n)) as i32 + 1;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:18:28
   |
18 |         let mut max: i32 = sqrt(f64::from(n)) as i32 + 1;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:23:16
   |
23 |             if n % i == 0_i32 {
   |                ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:23:16
   |
23 |             if n % i == 0_i32 {
   |                ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:25:34
   |
25 |                 let mut q: i32 = n / i;
   |                                  ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:31:13
   |
31 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:45:9
   |
45 |         n;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:31:13
   |
31 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:45:9
   |
45 |         n;
   |         ^^

warning: `c2rust_out` (bin "main") generated 11 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 11 warnings (11 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.65s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/perfect_shuffle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:11:5
   |
11 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: no implementation for `bool & &i32`
   --> src/main.rs:141:28
    |
141 |         if !orig.is_null() & &CreateDeck(dest, nCards) != 0 {
    |                            ^ no implementation for `bool & &i32`
    |
    = help: the trait `std::ops::BitAnd<&i32>` is not implemented for `bool`
    = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
              <&'a bool as std::ops::BitAnd<bool>>
              <&bool as std::ops::BitAnd<&bool>>
              <bool as std::ops::BitAnd<&bool>>
              <bool as std::ops::BitAnd<std::simd::Mask<T, LANES>>>
              <bool as std::ops::BitAnd>

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/permutations)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (29 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:57
   |
33 |         while i32::from(*(*argv.offset(1_isize)).offset(x as isize)) != '\0' as i32 {
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:73
   |
33 |         while i32::from(*(*argv.offset(1_isize)).offset(x as isize)) != '\0' as i32 {
   |                                                                         ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:35:13
   |
35 |             x;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:62
   |
44 |                 if i32::from(*(*argv.offset(1_isize)).offset((v.wrapping_sub(1i32)) as isize))
   |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:65
   |
45 |                     > i32::from(*(*argv.offset(1_isize)).offset(v as isize))
   |                                                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:67
   |
47 |                     m = i32::from(*(*argv.offset(1_isize)).offset((v.wrapping_sub(1i32)) as isize));
   |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:49:57
   |
49 |                         *(*argv.offset(1_isize)).offset(v as isize);
   |                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:53
   |
48 |                     *(*argv.offset(1_isize)).offset((v.wrapping_sub(1i32)) as isize) =
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `i8` may truncate the value
  --> src/main.rs:50:67
   |
50 |                     *(*argv.offset(1_isize)).offset(v as isize) = m as i8;
   |                                                                   ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
50 |                     *(*argv.offset(1_isize)).offset(v as isize) = i8::try_from(m);
   |                                                                   ~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:67
   |
50 |                     *(*argv.offset(1_isize)).offset(v as isize) = m as i8;
   |                                                                   ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:50:53
   |
50 |                     *(*argv.offset(1_isize)).offset(v as isize) = m as i8;
   |                                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:53:17
   |
53 |                 v;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:56:13
   |
56 |             f;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:58:19
   |
58 |         let vla = x as usize;
   |                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:58:19
   |
58 |         let vla = x as usize;
   |                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:82
   |
63 |             *a.as_mut_ptr().offset(k as isize) = *(*argv.offset(1_isize)).offset(k as isize);
   |                                                                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:36
   |
63 |             *a.as_mut_ptr().offset(k as isize) = *(*argv.offset(1_isize)).offset(k as isize);
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:65:13
   |
65 |             k;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:46
   |
68 |         *a.as_mut_ptr().offset(k as isize) = '\0' as i8;
   |                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:32
   |
68 |         *a.as_mut_ptr().offset(k as isize) = '\0' as i8;
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:76:52
   |
76 |             while i32::from(*a.as_mut_ptr().offset(i as isize))
   |                                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:52
   |
77 |                 > i32::from(*a.as_mut_ptr().offset((i.wrapping_add(1i32)) as isize))
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:80:17
   |
80 |                 i;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:83:52
   |
83 |             while i32::from(*a.as_mut_ptr().offset(j as isize))
   |                                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:52
   |
84 |                 < i32::from(*a.as_mut_ptr().offset(i as isize))
   |                                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:87:17
   |
87 |                 j;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:40
   |
89 |             c = *a.as_mut_ptr().offset(j as isize);
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:73
   |
90 |             *a.as_mut_ptr().offset(j as isize) = *a.as_mut_ptr().offset(i as isize);
   |                                                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:36
   |
90 |             *a.as_mut_ptr().offset(j as isize) = *a.as_mut_ptr().offset(i as isize);
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:36
   |
91 |             *a.as_mut_ptr().offset(i as isize) = c;
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:93:13
   |
93 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:44
   |
96 |                 c = *a.as_mut_ptr().offset(i as isize);
   |                                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:77
   |
97 |                 *a.as_mut_ptr().offset(i as isize) = *a.as_mut_ptr().offset(j as isize);
   |                                                                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:40
   |
97 |                 *a.as_mut_ptr().offset(i as isize) = *a.as_mut_ptr().offset(j as isize);
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:40
   |
98 |                 *a.as_mut_ptr().offset(j as isize) = c;
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:100:17
    |
100 |                 i;
    |                 ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:102:17
    |
102 |                 j;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:105:13
    |
105 |             y;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: used `expect()` on a `Result` value
   --> src/main.rs:115:13
    |
115 | /             (::std::ffi::CString::new(arg))
116 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:121:33
    |
121 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
121 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:121:33
    |
121 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:33
    |
121 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:121:33
    |
121 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
  --> src/main.rs:35:13
   |
35 |             x;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:53:17
   |
53 |                 v;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:56:13
   |
56 |             f;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:65:13
   |
65 |             k;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:80:17
   |
80 |                 i;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:87:17
   |
87 |                 j;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:93:13
   |
93 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:100:17
    |
100 |                 i;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:102:17
    |
102 |                 j;
    |                 ^^

warning: path statement with no effect
   --> src/main.rs:105:13
    |
105 |             y;
    |             ^^

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:111:1
    |
111 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:115:13
    |
115 | /             (::std::ffi::CString::new(arg))
116 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main") generated 54 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 55 warnings (54 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.75s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/phrase_reversals)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/population_count)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (14 fixes)
warning: casting `u32` to `i32` may wrap around the value
  --> src/main.rs:16:23
   |
16 |         print!("{} ", n.count_ones() as i32);
   |                       ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:16:23
   |
16 |         print!("{} ", n.count_ones() as i32);
   |                       ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:19:9
   |
19 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:27:11
   |
27 |     while ne + no < 60_i32 {
   |           ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `u32` to `i32` may wrap around the value
  --> src/main.rs:28:12
   |
28 |         if (n_0 as u32).count_ones() as i32 & 1_i32 == 0_i32 {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:12
   |
28 |         if (n_0 as u32).count_ones() as i32 & 1_i32 == 0_i32 {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:28:12
   |
28 |         if (n_0 as u32).count_ones() as i32 & 1_i32 == 0_i32 {
   |            ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:12
   |
28 |         if (n_0 as u32).count_ones() as i32 & 1_i32 == 0_i32 {
   |            ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:32:17
   |
32 |                 ne;
   |                 -^^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:37:16
   |
37 |             od[fresh0 as usize] = n_0;
   |                ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:37:16
   |
37 |             od[fresh0 as usize] = n_0;
   |                ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:40:9
   |
40 |         n_0;
   |         -^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:46:26
   |
46 |         print!("{} ", od[i_0 as usize]);
   |                          ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:26
   |
46 |         print!("{} ", od[i_0 as usize]);
   |                          ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:48:9
   |
48 |         i_0;
   |         -^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:19:9
   |
19 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:32:17
   |
32 |                 ne;
   |                 ^^^

warning: path statement with no effect
  --> src/main.rs:40:9
   |
40 |         n_0;
   |         ^^^^

warning: path statement with no effect
  --> src/main.rs:48:9
   |
48 |         i_0;
   |         ^^^^

warning: `c2rust_out` (bin "main" test) generated 20 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 20 warnings (20 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.60s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/power_set)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:29:1
   |
29 | / pub struct node {
30 | |     pub s: *mut i8,
31 | |     pub prev: *mut node,
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
29 + #[non_exhaustive]
30 | pub struct node {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:44:56
   |
44 |                 print!(" {}", build_str_from_raw_ptr((*up).s.cast::<u8>()));
   |                                                        ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:45:24
   |
45 |                 up = (*up).prev;
   |                        ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:49:21
   |
49 |             me.s = *v;
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:51:22
   |
51 |             powerset(v.offset(1_isize), n.wrapping_sub(1), up);
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:52:22
   |
52 |             powerset(v.offset(1_isize), n.wrapping_sub(1), &mut me);
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:26
   |
42 |             print!("{}", '[' as i32);
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:18
   |
47 |             puts((b" ]\0" as *const u8).cast::<i8>());
   |                  ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `expect()` on a `Result` value
  --> src/main.rs:73:13
   |
73 | /             (::std::ffi::CString::new(arg))
74 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:79:33
   |
79 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
79 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:79:33
   |
79 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:33
   |
79 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:79:33
   |
79 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: `c2rust_out` (bin "main") generated 14 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:69:1
   |
69 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:73:13
   |
73 | /             (::std::ffi::CString::new(arg))
74 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 15 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.97s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/price_fraction)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (17 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:14
   |
36 |     [-1_f64, 0_i32 as f64],
   |              ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:44:21
   |
44 |         while table[i as usize][0_usize] > f64::from(0_i32) {
   |                     ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:21
   |
44 |         while table[i as usize][0_usize] > f64::from(0_i32) {
   |                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:45:26
   |
45 |             if x < table[i as usize][0_usize] {
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:45:26
   |
45 |             if x < table[i as usize][0_usize] {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:46:30
   |
46 |                 return table[i as usize][1_usize];
   |                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:46:30
   |
46 |                 return table[i as usize][1_usize];
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:49:13
   |
49 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:61:13
   |
61 |             f64::from(i) / 100.0f64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:62:23
   |
62 |             price_fix(f64::from(i) / 100.0f64)
   |                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: statement with no effect
  --> src/main.rs:65:9
   |
65 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:49:13
   |
49 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:65:9
   |
65 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.64s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/prime_conspiracy)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:8:12
  |
8 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib test) generated 2 warnings (2 duplicates)
       Fixed src/main.rs (72 fixes)
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
  --> src/main.rs:10:12
   |
10 | #![feature(label_break_value)]
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(stable_features)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:23:1
   |
23 | / pub struct Transition {
24 | |     pub a: u8,
25 | |     pub b: u8,
26 | |     pub c: u32,
27 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
23 + #[non_exhaustive]
24 | pub struct Transition {
   |

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:40:36
   |
40 |                 let mut idx: i32 = i * j.wrapping_add(10);
   |                                    ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:41:47
   |
41 |                 transitions[idx as usize].a = i as u8;
   |                                               ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
41 |                 transitions[idx as usize].a = u8::try_from(i);
   |                                               ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:41:47
   |
41 |                 transitions[idx as usize].a = i as u8;
   |                                               ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:47
   |
41 |                 transitions[idx as usize].a = i as u8;
   |                                               ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:41:29
   |
41 |                 transitions[idx as usize].a = i as u8;
   |                             ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:29
   |
41 |                 transitions[idx as usize].a = i as u8;
   |                             ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:42:47
   |
42 |                 transitions[idx as usize].b = j as u8;
   |                                               ^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
42 |                 transitions[idx as usize].b = u8::try_from(j);
   |                                               ~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:42:47
   |
42 |                 transitions[idx as usize].b = j as u8;
   |                                               ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:47
   |
42 |                 transitions[idx as usize].b = j as u8;
   |                                               ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:42:29
   |
42 |                 transitions[idx as usize].b = j as u8;
   |                             ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:29
   |
42 |                 transitions[idx as usize].b = j as u8;
   |                             ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:43:29
   |
43 |                 transitions[idx as usize].c = 0;
   |                             ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:29
   |
43 |                 transitions[idx as usize].c = 0;
   |                             ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:45:17
   |
45 |                 j;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:48:13
   |
48 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:55:22
   |
55 |     let mut pd: u8 = (prev % 10i32) as u8;
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:55:22
   |
55 |     let mut pd: u8 = (prev % 10i32) as u8;
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:55:22
   |
55 |     let mut pd: u8 = (prev % 10i32) as u8;
   |                      ^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:56:22
   |
56 |     let mut cd: u8 = (curr % 10i32) as u8;
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:22
   |
56 |     let mut cd: u8 = (curr % 10i32) as u8;
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:56:22
   |
56 |     let mut cd: u8 = (curr % 10i32) as u8;
   |                      ^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:63:38
   |
63 |             if i32::from(transitions[i as usize].a) == i32::from(pd) {
   |                                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:38
   |
63 |             if i32::from(transitions[i as usize].a) == i32::from(pd) {
   |                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:65:42
   |
65 |                 if i32::from(transitions[i as usize].b) == i32::from(cd) {
   |                                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:42
   |
65 |                 if i32::from(transitions[i as usize].b) == i32::from(cd) {
   |                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:66:62
   |
66 |                     transitions[i as usize].c = (transitions[i as usize].c).wrapping_add(1);
   |                                                              ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:66:62
   |
66 |                     transitions[i as usize].c = (transitions[i as usize].c).wrapping_add(1);
   |                                                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:66:33
   |
66 |                     transitions[i as usize].c = (transitions[i as usize].c).wrapping_add(1);
   |                                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:66:33
   |
66 |                     transitions[i as usize].c = (transitions[i as usize].c).wrapping_add(1);
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:67:21
   |
67 |                     transitions[i as usize].c;
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:67:33
   |
67 |                     transitions[i as usize].c;
   |                                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:33
   |
67 |                     transitions[i as usize].c;
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:72:13
   |
72 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:85:28
   |
85 |             if transitions[i as usize].c > 0 {
   |                            ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:85:28
   |
85 |             if transitions[i as usize].c > 0 {
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:88:43
   |
88 |                     i32::from(transitions[i as usize].a),
   |                                           ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:43
   |
88 |                     i32::from(transitions[i as usize].a),
   |                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:89:43
   |
89 |                     i32::from(transitions[i as usize].b),
   |                                           ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:43
   |
89 |                     i32::from(transitions[i as usize].b),
   |                                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:90:33
   |
90 |                     transitions[i as usize].c,
   |                                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:33
   |
90 |                     transitions[i as usize].c,
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:91:21
   |
91 |                     100.0f64 * f64::from(transitions[i as usize].c) / f64::from(limit)
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:91:54
   |
91 |                     100.0f64 * f64::from(transitions[i as usize].c) / f64::from(limit)
   |                                                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:54
   |
91 |                     100.0f64 * f64::from(transitions[i as usize].c) / f64::from(limit)
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:95:13
   |
95 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:106:8
    |
106 |     if n % 2_i32 == 0_i32 {
    |        ^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:109:8
    |
109 |     if n % 3_i32 == 0_i32 {
    |        ^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:112:8
    |
112 |     if n % 5_i32 == 0_i32 {
    |        ^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:115:8
    |
115 |     if n % 7_i32 == 0_i32 {
    |        ^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:118:8
    |
118 |     if n % 11_i32 == 0_i32 {
    |        ^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:121:8
    |
121 |     if n % 13_i32 == 0_i32 {
    |        ^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:124:8
    |
124 |     if n % 17_i32 == 0_i32 {
    |        ^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:127:8
    |
127 |     if n % 19_i32 == 0_i32 {
    |        ^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:137:16
    |
137 |             if n % t == 0_i32 {
    |                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:137:16
    |
137 |             if n % t == 0_i32 {
    |                ^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: equal expressions as operands to `!=`
   --> src/main.rs:138:24
    |
138 |                 return 0_i32 != 0_i32;
    |                        ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
    = note: `#[warn(clippy::eq_op)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:143:16
    |
143 |             if t * t == s {
    |                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:146:21
    |
146 |                     (b"t * t == s\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:147:21
    |
147 |                     (b"main.c\0" as *const u8).cast::<i8>(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:153:16
    |
153 |             if t * t == s {
    |                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:156:25
    |
156 |                         (b"t * t == s\0" as *const u8).cast::<i8>(),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:157:25
    |
157 |                         (b"main.c\0" as *const u8).cast::<i8>(),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:164:20
    |
164 |                 if n % t == 0_i32 {
    |                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:164:20
    |
164 |                 if n % t == 0_i32 {
    |                    ^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: equal expressions as operands to `!=`
   --> src/main.rs:165:28
    |
165 |                     return 0_i32 != 0_i32;
    |                            ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:170:20
    |
170 |                 if t * t == s {
    |                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:173:25
    |
173 |                         (b"t * t == s\0" as *const u8).cast::<i8>(),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:174:25
    |
174 |                         (b"main.c\0" as *const u8).cast::<i8>(),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:180:20
    |
180 |                 if t * t == s {
    |                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:183:29
    |
183 | ...                   (b"t * t == s\0" as *const u8).cast::<i8>(),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:184:29
    |
184 | ...                   (b"main.c\0" as *const u8).cast::<i8>(),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:209:13
    |
209 |             count;
    |             -^^^^^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:217:17
    |
217 |                 count;
    |                 -^^^^^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:45:17
   |
45 |                 j;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:48:13
   |
48 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:72:13
   |
72 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:95:13
   |
95 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:209:13
    |
209 |             count;
    |             ^^^^^^

warning: path statement with no effect
   --> src/main.rs:217:17
    |
217 |                 count;
    |                 ^^^^^^

warning: `c2rust_out` (bin "main") generated 82 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 82 warnings (82 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.88s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/prime_decomposition)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/primorial_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/priority_queue)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/proper_divisors)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:17:12
   |
17 |         if n % i == 0_i32 {
   |            ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:17:12
   |
17 |         if n % i == 0_i32 {
   |            ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: statement with no effect
  --> src/main.rs:19:13
   |
19 |             count;
   |             -^^^^^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:25:9
   |
25 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:38:11
   |
38 |     while n % 2_i32 == 0_i32 {
   |           ^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:40:9
   |
40 |         count;
   |         ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:43:5
   |
43 |     prod *= count.wrapping_add(1);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:45:11
   |
45 |     while i * i <= n {
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:47:15
   |
47 |         while n % i == 0_i32 {
   |               ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:47:15
   |
47 |         while n % i == 0_i32 {
   |               ^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: statement with no effect
  --> src/main.rs:49:13
   |
49 |             count;
   |             ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:50:32
   |
50 |             n = n.wrapping_div(i);
   |                                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:52:9
   |
52 |         prod *= count.wrapping_add(1);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
  --> src/main.rs:67:9
   |
67 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:79:9
   |
79 |         i_0;
   |         -^^^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:19:13
   |
19 |             count;
   |             ^^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:25:9
   |
25 |         i;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:40:9
   |
40 |         count;
   |         ^^^^^^

warning: path statement with no effect
  --> src/main.rs:49:13
   |
49 |             count;
   |             ^^^^^^

warning: path statement with no effect
  --> src/main.rs:67:9
   |
67 |         i;
   |         ^^

warning: path statement with no effect
  --> src/main.rs:79:9
   |
79 |         i_0;
   |         ^^^^

warning: `c2rust_out` (bin "main") generated 22 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 22 warnings (22 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.51s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/pythagorean_mean)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:29:23
   |
29 |             sum = sum.wrapping_add(f);
   |                       ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/pythagorean_quadruples)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (23 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:13
   |
34 |             (2200 * 2200 * 2 + 1i32) as u64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:28
   |
42 |                 *ab.offset((a2 + b.wrapping_mul(b)) as isize) = 1_i32;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:28
   |
42 |                 *ab.offset((a2 + b.wrapping_mul(b)) as isize) = 1_i32;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:44:17
   |
44 |                 b;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:47:13
   |
47 |             a;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:31
   |
56 |                 if *ab.offset(s1 as isize) != 0_i32 {
   |                               ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:57:23
   |
57 |                     r[d as usize] = 1_i32;
   |                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:23
   |
57 |                     r[d as usize] = 1_i32;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:62:17
   |
62 |                 d;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/main.rs:65:13
   |
65 |             c;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:69:18
   |
69 |             if r[d as usize] == 0_i32 {
   |                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:18
   |
69 |             if r[d as usize] == 0_i32 {
   |                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:73:13
   |
73 |             d;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: docs for function which may panic missing `# Panics` section
  --> src/main.rs:81:1
   |
81 | pub fn main() {
   | ^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/main.rs:85:13
   |
85 | /             (::std::ffi::CString::new(arg))
86 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
  --> src/main.rs:85:13
   |
85 | /             (::std::ffi::CString::new(arg))
86 | |                 .expect("Failed to convert argument into CString.")
   | |___________________________________________________________________^
   |
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/main.rs:91:33
   |
91 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
91 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/main.rs:91:33
   |
91 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:33
   |
91 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:91:33
   |
91 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
  --> src/main.rs:44:17
   |
44 |                 b;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:47:13
   |
47 |             a;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:62:17
   |
62 |                 d;
   |                 ^^

warning: path statement with no effect
  --> src/main.rs:65:13
   |
65 |             c;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:73:13
   |
73 |             d;
   |             ^^

warning: `c2rust_out` (bin "main") generated 24 warnings (24 duplicates)
warning: `c2rust_out` (bin "main" test) generated 25 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.66s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/pythagorean_triples)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (41 fixes)
warning: casting `i64` to `u64` may lose the sign of the value
  --> src/main.rs:22:9
   |
22 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:9
   |
22 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/main.rs:25:9
   |
25 |         -1_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:9
   |
25 |         -1_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/main.rs:28:9
   |
28 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:28:9
   |
28 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/main.rs:33:9
   |
33 |         -1_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:9
   |
33 |         -1_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/main.rs:36:9
   |
36 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:9
   |
36 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/main.rs:39:9
   |
39 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:9
   |
39 |         -2_i64 as u64,
   |         ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:50:28
   |
50 |         let mut p: u64 = (*in_0.offset(0_isize))
   |                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:51:28
   |
51 |             .wrapping_add(*in_0.offset(1_isize))
   |                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:52:28
   |
52 |             .wrapping_add(*in_0.offset(2_isize));
   |                            ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:62:32
   |
62 |                 .wrapping_mul(*in_0.offset(0_isize))
   |                                ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:63:70
   |
63 |                 .wrapping_add((U[i as usize][1_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                                                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:64:70
   |
64 |                 .wrapping_add((U[i as usize][2_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                                                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:66:32
   |
66 |                 .wrapping_mul(*in_0.offset(0_isize))
   |                                ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:67:70
   |
67 |                 .wrapping_add((U[i as usize][4_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                                                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:68:70
   |
68 |                 .wrapping_add((U[i as usize][5_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                                                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:70:32
   |
70 |                 .wrapping_mul(*in_0.offset(0_isize))
   |                                ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:71:70
   |
71 |                 .wrapping_add((U[i as usize][7_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                                                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:72:70
   |
72 |                 .wrapping_add((U[i as usize][8_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                                                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: statement with no effect
  --> src/main.rs:57:9
   |
57 |         prim;
   |         ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:58:58
   |
58 |         total = total.wrapping_add(max_peri.wrapping_div(p));
   |                                                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:61:29
   |
61 |             t[0_usize] = (U[i as usize][0_usize])
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:29
   |
61 |             t[0_usize] = (U[i as usize][0_usize])
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:63:34
   |
63 |                 .wrapping_add((U[i as usize][1_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:34
   |
63 |                 .wrapping_add((U[i as usize][1_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:64:34
   |
64 |                 .wrapping_add((U[i as usize][2_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:34
   |
64 |                 .wrapping_add((U[i as usize][2_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:65:29
   |
65 |             t[1_usize] = (U[i as usize][3_usize])
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:29
   |
65 |             t[1_usize] = (U[i as usize][3_usize])
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:67:34
   |
67 |                 .wrapping_add((U[i as usize][4_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:34
   |
67 |                 .wrapping_add((U[i as usize][4_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:68:34
   |
68 |                 .wrapping_add((U[i as usize][5_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:34
   |
68 |                 .wrapping_add((U[i as usize][5_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:69:29
   |
69 |             t[2_usize] = (U[i as usize][6_usize])
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:29
   |
69 |             t[2_usize] = (U[i as usize][6_usize])
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:71:34
   |
71 |                 .wrapping_add((U[i as usize][7_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:34
   |
71 |                 .wrapping_add((U[i as usize][7_usize]).wrapping_mul(*in_0.offset(1_isize)))
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:72:34
   |
72 |                 .wrapping_add((U[i as usize][8_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                  ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:34
   |
72 |                 .wrapping_add((U[i as usize][8_usize]).wrapping_mul(*in_0.offset(2_isize)));
   |                                  ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:75:13
   |
75 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:57:9
   |
57 |         prim;
   |         ^^^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:75:13
   |
75 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 48 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 48 warnings (48 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.74s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/quaternion_type)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:11:5
   |
11 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `i`
   --> src/main.rs:244:17
    |
244 |         let mut i: u64 = 0;
    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `ri`
   --> src/main.rs:245:17
    |
245 |         let mut ri: f64 = 0.0f64;
    |                 ^^ help: if this is intentional, prefix it with an underscore: `_ri`

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:278:9
    |
278 |         (*q).q[0 as usize],
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:278:9
    |
278 |         (*q).q[0 as usize],
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:279:9
    |
279 |         (*q).q[1 as usize],
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:279:9
    |
279 |         (*q).q[1 as usize],
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:280:9
    |
280 |         (*q).q[2 as usize],
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:280:9
    |
280 |         (*q).q[2 as usize],
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:281:9
    |
281 |         (*q).q[3 as usize]
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
   --> src/main.rs:281:9
    |
281 |         (*q).q[3 as usize]
    |         ^^^^^^^^^^^^^^^^^^ dereference of raw pointer
    |
    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior
    = note: this error originates in the macro `$crate::format_args` which comes from the expansion of the macro `print` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unnecessary `unsafe` block
   --> src/main.rs:271:5
    |
271 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

For more information about this error, try `rustc --explain E0133`.
warning: `c2rust_out` (bin "main" test) generated 5 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 8 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 5 warnings (5 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 8 previous errors; 5 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/queue_definition)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/quickselect_algorithm)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (11 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:24:17
   |
24 |             if *v.offset(i as isize) <= *v.offset((len.wrapping_sub(1i32)) as isize) {
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:24:42
   |
24 |             if *v.offset(i as isize) <= *v.offset((len.wrapping_sub(1i32)) as isize) {
   |                                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:25:24
   |
25 |                 tmp = *v.offset(i as isize);
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:26:42
   |
26 |                 *v.offset(i as isize) = *v.offset(st as isize);
   |                                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:26:18
   |
26 |                 *v.offset(i as isize) = *v.offset(st as isize);
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:27:18
   |
27 |                 *v.offset(st as isize) = tmp;
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:34:16
   |
34 |         tmp = *v.offset((len.wrapping_sub(1i32)) as isize);
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:57
   |
35 |         *v.offset((len.wrapping_sub(1i32)) as isize) = *v.offset(st as isize);
   |                                                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:35:10
   |
35 |         *v.offset((len.wrapping_sub(1i32)) as isize) = *v.offset(st as isize);
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:36:10
   |
36 |         *v.offset(st as isize) = tmp;
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:38:14
   |
38 |             *v.offset(st as isize)
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:42:21
   |
42 |             qselect(v.offset(st as isize), len - st, k - st)
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:24:26
   |
24 |             if *v.offset(i as isize) <= *v.offset((len.wrapping_sub(1i32)) as isize) {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:24:51
   |
24 |             if *v.offset(i as isize) <= *v.offset((len.wrapping_sub(1i32)) as isize) {
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:25:33
   |
25 |                 tmp = *v.offset(i as isize);
   |                                 ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:51
   |
26 |                 *v.offset(i as isize) = *v.offset(st as isize);
   |                                                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:27
   |
26 |                 *v.offset(i as isize) = *v.offset(st as isize);
   |                           ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:27:27
   |
27 |                 *v.offset(st as isize) = tmp;
   |                           ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:29:17
   |
29 |                 st;
   |                 -^^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:32:13
   |
32 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:25
   |
34 |         tmp = *v.offset((len.wrapping_sub(1i32)) as isize);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:66
   |
35 |         *v.offset((len.wrapping_sub(1i32)) as isize) = *v.offset(st as isize);
   |                                                                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:35:19
   |
35 |         *v.offset((len.wrapping_sub(1i32)) as isize) = *v.offset(st as isize);
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:36:19
   |
36 |         *v.offset(st as isize) = tmp;
   |                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `if` chain can be rewritten with `match`
  --> src/main.rs:37:9
   |
37 | /         if k == st {
38 | |             *v.offset(st as isize)
39 | |         } else if st > k {
40 | |             qselect(v, st, k)
41 | |         } else {
42 | |             qselect(v.offset(st as isize), len - st, k - st)
43 | |         }
   | |_________^
   |
   = help: consider rewriting the `if` chain to use `cmp` and `match`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain
   = note: `#[warn(clippy::comparison_chain)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:23
   |
38 |             *v.offset(st as isize)
   |                       ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:30
   |
42 |             qselect(v.offset(st as isize), len - st, k - st)
   |                              ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:44
   |
42 |             qselect(v.offset(st as isize), len - st, k - st)
   |                                            ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:42:54
   |
42 |             qselect(v.offset(st as isize), len - st, k - st)
   |                                                      ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:17
   |
57 |                 x.as_mut_ptr() as *const libc::c_void,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:62:13
   |
62 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:29:17
   |
29 |                 st;
   |                 ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:32:13
   |
32 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:62:13
   |
62 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 35 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 35 warnings (35 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.74s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/ramer_douglas_line_simplification)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:8:12
  |
8 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib test) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib) generated 2 warnings (2 duplicates)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:11:5
   |
11 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused label
  --> src/main.rs:63:9
   |
63 |         'c_2158: {
   |         ^^^^^^^
   |
   = note: `#[warn(unused_labels)]` on by default

warning: unused label
  --> src/main.rs:82:9
   |
82 |         'c_2115: {
   |         ^^^^^^^

warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
  --> src/main.rs:10:12
   |
10 | #![feature(label_break_value)]
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(stable_features)]` on by default

error[E0599]: no method named `wrapping_mul` found for type `f64` in the current scope
  --> src/main.rs:36:44
   |
36 |         let mut d: f64 = sqrt(dx * dx + dy.wrapping_mul(dy));
   |                                            ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 5 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 5 warnings (5 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 5 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/random_number)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (14 fixes)
warning: floating-point arithmetic detected
  --> src/main.rs:21:9
   |
21 |         (f64::from(rand()) + 1.0f64) / (2147483647_f64 + 1.0f64)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:29:9
   |
29 | /         sqrt(-2_f64 * log(drand()))
30 | |             * cos(2_f64 * 3.141_592_653_589_793_f64 * drand())
   | |______________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: approximate value of `f64::consts::PI` found
  --> src/main.rs:30:27
   |
30 |             * cos(2_f64 * 3.141_592_653_589_793_f64 * drand())
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using the constant directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
   = note: `#[warn(clippy::approx_constant)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:39:15
   |
39 |         rands[i as usize] = 0.5f64.mul_add(random_normal(), 1.0f64);
   |               ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:39:15
   |
39 |         rands[i as usize] = 0.5f64.mul_add(random_normal(), 1.0f64);
   |               ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:41:9
   |
41 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:41:9
   |
41 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 8 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 8 warnings (8 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.49s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/random_number_generator)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (13 fixes)
warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:29:17
   |
29 |             b = (b as u64 | (st & 1u64) << q) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
29 |             b = i32::try_from(b as u64 | (st & 1u64) << q);
   |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:17
   |
29 |             b = (b as u64 | (st & 1u64) << q) as i32;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:29:18
   |
29 |             b = (b as u64 | (st & 1u64) << q) as i32;
   |                  ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:18
   |
29 |             b = (b as u64 | (st & 1u64) << q) as i32;
   |                  ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:31:21
   |
31 |             state = i as u64;
   |                     ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:21
   |
31 |             state = i as u64;
   |                     ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:32:19
   |
32 |             while (i as u64) < (::core::mem::size_of::<u64>() as u64).wrapping_mul(8) {
   |                   ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:19
   |
32 |             while (i as u64) < (::core::mem::size_of::<u64>() as u64).wrapping_mul(8) {
   |                   ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:33:20
   |
33 |                 if rule as u64
   |                    ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:33:20
   |
33 |                 if rule as u64
   |                    ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:36:38
   |
36 | ...                   & (st >> (i - 1_i32)
   |                                ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:40:51
   |
40 | ...                   .wrapping_sub(i as u64)))
   |                                     ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:51
   |
40 | ...                   .wrapping_sub(i as u64)))
   |                                     ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:46:17
   |
46 |                 i;
   |                 ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:51:9
   |
51 |         p;
   |         ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:18
   |
53 |     print!("{}", '\n' as i32);
   |                  ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:46:17
   |
46 |                 i;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:51:9
   |
51 |         p;
   |         ^^

warning: `c2rust_out` (bin "main") generated 19 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 19 warnings (19 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.87s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/range_consolidation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/range_expansion)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:22:5
   |
22 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: no implementation for `{integer} & &bool`
  --> src/main.rs:51:22
   |
51 |                 == 0 & &{
   |                      ^ no implementation for `{integer} & &bool`
   |
   = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `{integer}`
   = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
             <&'a i128 as std::ops::BitAnd<i128>>
             <&'a i16 as std::ops::BitAnd<i16>>
             <&'a i32 as std::ops::BitAnd<i32>>
             <&'a i64 as std::ops::BitAnd<i64>>
             <&'a i8 as std::ops::BitAnd<i8>>
             <&'a isize as std::ops::BitAnd<isize>>
             <&'a u128 as std::ops::BitAnd<u128>>
             <&'a u16 as std::ops::BitAnd<u16>>
           and 40 others

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/range_extraction)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/rational)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (30 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:17:1
   |
17 | / pub struct frac {
18 | |     pub num: i64,
19 | |     pub den: i64,
20 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
17 + #[non_exhaustive]
18 | pub struct frac {
   |

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:28
   |
26 |         n = m.wrapping_rem(n);
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i64` to `i32` may truncate the value
  --> src/main.rs:42:22
   |
42 |     let mut g: i32 = gcd(num, den) as i32;
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
42 |     let mut g: i32 = i32::try_from(gcd(num, den));
   |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:22
   |
42 |     let mut g: i32 = gcd(num, den) as i32;
   |                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:44:9
   |
44 |         num /= i64::from(g);
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:45:9
   |
45 |         den /= i64::from(g);
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:51:15
   |
51 |         den = -den;
   |               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:52:15
   |
52 |         num = -num;
   |               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:61:14
   |
61 |     frac_new(a.num * b.den + b.num * a.den, a.den * b.den)
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:61:45
   |
61 |     frac_new(a.num * b.den + b.num * a.den, a.den * b.den)
   |                                             ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:66:14
   |
66 |     frac_new(a.num * b.den - b.num + a.den, a.den * b.den)
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:66:45
   |
66 |     frac_new(a.num * b.den - b.num + a.den, a.den * b.den)
   |                                             ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:71:14
   |
71 |     frac_new(a.num * b.num, a.den * b.den)
   |              ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:71:29
   |
71 |     frac_new(a.num * b.num, a.den * b.den)
   |                             ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:76:14
   |
76 |     frac_new(a.num * b.den, a.den * b.num)
   |              ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:76:29
   |
76 |     frac_new(a.num * b.den, a.den * b.num)
   |                             ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `i32` may truncate the value
  --> src/main.rs:81:22
   |
81 |     let mut l: i32 = (a.num * b.den) as i32;
   |                      ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
81 |     let mut l: i32 = i32::try_from(a.num * b.den);
   |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:22
   |
81 |     let mut l: i32 = (a.num * b.den) as i32;
   |                      ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:81:22
   |
81 |     let mut l: i32 = (a.num * b.den) as i32;
   |                      ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `i32` may truncate the value
  --> src/main.rs:82:22
   |
82 |     let mut r: i32 = (a.den * b.num) as i32;
   |                      ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
82 |     let mut r: i32 = i32::try_from(a.den * b.num);
   |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:22
   |
82 |     let mut r: i32 = (a.den * b.num) as i32;
   |                      ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:82:22
   |
82 |     let mut r: i32 = (a.den * b.num) as i32;
   |                      ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `i32` may truncate the value
  --> src/main.rs:88:5
   |
88 |     (a.den / a.num) as i32
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
88 |     i32::try_from(a.den / a.num)
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:5
   |
88 |     (a.den / a.num) as i32
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:88:5
   |
88 |     (a.den / a.num) as i32
   |     ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: floating-point arithmetic detected
  --> src/main.rs:93:5
   |
93 |     a.den as f64 / a.num as f64
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/main.rs:93:5
   |
93 |     a.den as f64 / a.num as f64
   |     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:5
   |
93 |     a.den as f64 / a.num as f64
   |     ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/main.rs:93:20
   |
93 |     a.den as f64 / a.num as f64
   |                    ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:20
   |
93 |     a.den as f64 / a.num as f64
   |                    ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:105:15
    |
105 |         while k * k < n {
    |               ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:106:16
    |
106 |             if n % k == 0_i32 {
    |                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
   --> src/main.rs:106:16
    |
106 |             if n % k == 0_i32 {
    |                ^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
    = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:109:44
    |
109 |                 kf = frac_new(1, i64::from(n / k));
    |                                            ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:113:13
    |
113 |             k;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
   --> src/main.rs:119:9
    |
119 |         n;
    |         -^
    |         |
    |         help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:113:13
    |
113 |             k;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:119:9
    |
119 |         n;
    |         ^^

warning: `c2rust_out` (bin "main" test) generated 39 warnings (33 duplicates)
warning: `c2rust_out` (bin "main") generated 39 warnings (7 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.49s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/ray_casting_algorithm)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_sub` found for type `f64` in the current scope
   --> src/main.rs:174:23
    |
174 |         max_x = max_x.wrapping_sub(min_x);
    |                       ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_sub` found for type `f64` in the current scope
   --> src/main.rs:176:23
    |
176 |         max_y = max_y.wrapping_sub(min_y);
    |                       ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
   --> src/main.rs:178:23
    |
178 |         max_x = max_x.wrapping_add(max_y);
    |                       ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 3 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 3 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling proc-macro2 v1.0.64
   Compiling quote v1.0.29
   Compiling unicode-ident v1.0.10
   Compiling syn v1.0.109
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/regular_expression)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
   Compiling c2rust-bitfields-derive v0.2.1
    Checking c2rust-bitfields v0.3.0
warning: unused `#[macro_use]` import
 --> lib.rs:9:1
  |
9 | #[macro_use]
  | ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `c2rust_out` (lib) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib test) generated 2 warnings (2 duplicates)
       Fixed src/main.rs (47 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:46:1
   |
46 | / pub struct re_pattern_buffer {
47 | |     pub __buffer: *mut re_dfa_t,
48 | |     pub __allocated: u64,
49 | |     pub __used: u64,
...  |
64 | |     pub c2rust_padding: [u8; 7],
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
46 + #[non_exhaustive]
47 | pub struct re_pattern_buffer {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:70:1
   |
70 | / pub struct regmatch_t {
71 | |     pub rm_so: i32,
72 | |     pub rm_eo: i32,
73 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
70 + #[non_exhaustive]
71 | pub struct regmatch_t {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:33
   |
89 |         let mut tp: *const i8 = (b"string$\0" as *const u8).cast::<i8>();
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:90:33
   |
90 |         let mut t1: *const i8 = (b"this is a matching string\0" as *const u8).cast::<i8>();
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:33
   |
91 |         let mut t2: *const i8 = (b"this is not a matching string!\0" as *const u8).cast::<i8>();
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:33
   |
92 |         let mut ss: *const i8 = (b"istyfied\0" as *const u8).cast::<i8>();
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:93:28
   |
93 |         regcomp(&mut preg, (b"string$\0" as *const u8).cast::<i8>(), 1);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: the function `regexec` doesn't need a mutable reference
  --> src/main.rs:94:20
   |
94 |         if regexec(&mut preg, t1, 0, std::ptr::null_mut::<regmatch_t>(), 0) == 0_i32 {
   |                    ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed
   = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:40
   |
97 |                 build_str_from_raw_ptr(t1 as *mut u8),
   |                                        ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:98:40
   |
98 |                 build_str_from_raw_ptr(tp as *mut u8)
   |                                        ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:40
    |
103 |                 build_str_from_raw_ptr(t1 as *mut u8),
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:40
    |
104 |                 build_str_from_raw_ptr(tp as *mut u8)
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: the function `regexec` doesn't need a mutable reference
   --> src/main.rs:107:20
    |
107 |         if regexec(&mut preg, t2, 0, std::ptr::null_mut::<regmatch_t>(), 0) == 0_i32 {
    |                    ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:110:40
    |
110 |                 build_str_from_raw_ptr(t2 as *mut u8),
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:40
    |
111 |                 build_str_from_raw_ptr(tp as *mut u8)
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:116:40
    |
116 |                 build_str_from_raw_ptr(t2 as *mut u8),
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:40
    |
117 |                 build_str_from_raw_ptr(tp as *mut u8)
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:28
    |
121 |         regcomp(&mut preg, (b"a[a-z]+\0" as *const u8).cast::<i8>(), 1);
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: the function `regexec` doesn't need a mutable reference
   --> src/main.rs:122:20
    |
122 |         if regexec(&mut preg, t1, 1, substmatch.as_mut_ptr(), 0) == 0_i32 {
    |                    ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:124:17
    |
124 |                 ((substmatch[0_usize].rm_so + 1i32) as u64)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:124:17
    |
124 |                 ((substmatch[0_usize].rm_so + 1i32) as u64)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:124:18
    |
124 |                 ((substmatch[0_usize].rm_so + 1i32) as u64)
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:126:61
    |
126 |                     .wrapping_add((strlen(t1)).wrapping_sub(substmatch[0_usize].rm_eo as u64))
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:126:61
    |
126 |                     .wrapping_add((strlen(t1)).wrapping_sub(substmatch[0_usize].rm_eo as u64))
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:132:17
    |
132 |                 (substmatch[0_usize].rm_so + 1i32) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:132:17
    |
132 |                 (substmatch[0_usize].rm_so + 1i32) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:132:17
    |
132 |                 (substmatch[0_usize].rm_so + 1i32) as u64,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:17
    |
135 |                 (&mut *ns.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as isize) as *mut i8).cast::<libc::c_void>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:135:34
    |
135 |                 (&mut *ns.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as isize) as *mut i8).cast::<libc::c_void>(),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:140:17
    |
140 | /                 (&mut *ns.offset(
141 | |                     ((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as u64)
142 | | // SAFETY: machine generated unsafe code
143 | |                         .wrapping_add((strlen as unsafe extern "C" fn(*const i8) -> u64)(ss))
144 | |                         as isize,
145 | |                 ) as *mut i8).cast::<libc::c_void>(),
    | |_____________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:141:21
    |
141 | /                     ((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as u64)
142 | | // SAFETY: machine generated unsafe code
143 | |                         .wrapping_add((strlen as unsafe extern "C" fn(*const i8) -> u64)(ss))
144 | |                         as isize,
    | |________________________________^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
141 ~                     isize::try_from(((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as u64)
142 + // SAFETY: machine generated unsafe code
143 ~                         .wrapping_add((strlen as unsafe extern "C" fn(*const i8) -> u64)(ss))),
    |

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:141:21
    |
141 | /                     ((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as u64)
142 | | // SAFETY: machine generated unsafe code
143 | |                         .wrapping_add((strlen as unsafe extern "C" fn(*const i8) -> u64)(ss))
144 | |                         as isize,
    | |________________________________^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:21
    |
141 | /                     ((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as u64)
142 | | // SAFETY: machine generated unsafe code
143 | |                         .wrapping_add((strlen as unsafe extern "C" fn(*const i8) -> u64)(ss))
144 | |                         as isize,
    | |________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:141:21
    |
141 |                     ((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as u64)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:21
    |
141 |                     ((*substmatch.as_mut_ptr().offset(0_isize)).rm_so as u64)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:143:39
    |
143 |                         .wrapping_add((strlen as unsafe extern "C" fn(*const i8) -> u64)(ss))
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:146:17
    |
146 |                 (&*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize) as *const i8).cast::<libc::c_void>(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:146:30
    |
146 |                 (&*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize) as *const i8).cast::<libc::c_void>(),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:147:36
    |
147 |                 strlen(&*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize)),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:150:17
    |
150 | /                 (substmatch[0_usize].rm_so as u64)
151 | |                     .wrapping_add(strlen(ss))
152 | |                     .wrapping_add(strlen(
153 | |                         &*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize),
154 | |                     )) as isize,
    | |_______________________________^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
150 ~                 isize::try_from((substmatch[0_usize].rm_so as u64)
151 +                     .wrapping_add(strlen(ss))
152 +                     .wrapping_add(strlen(
153 +                         &*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize),
154 ~                     ))),
    |

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/main.rs:150:17
    |
150 | /                 (substmatch[0_usize].rm_so as u64)
151 | |                     .wrapping_add(strlen(ss))
152 | |                     .wrapping_add(strlen(
153 | |                         &*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize),
154 | |                     )) as isize,
    | |_______________________________^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:150:17
    |
150 | /                 (substmatch[0_usize].rm_so as u64)
151 | |                     .wrapping_add(strlen(ss))
152 | |                     .wrapping_add(strlen(
153 | |                         &*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize),
154 | |                     )) as isize,
    | |_______________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:150:17
    |
150 |                 (substmatch[0_usize].rm_so as u64)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:150:17
    |
150 |                 (substmatch[0_usize].rm_so as u64)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:153:37
    |
153 |                         &*t1.offset((*substmatch.as_mut_ptr().offset(0_isize)).rm_eo as isize),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:161:40
    |
161 |                 build_str_from_raw_ptr(t1 as *mut u8)
    |                                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `c2rust_out` (bin "main") generated 47 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 47 warnings (47 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 7.11s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/remove_duplicate_elements)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (19 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:23:17
   |
23 |             if *a.offset(i as isize) == e {
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:23:26
   |
23 |             if *a.offset(i as isize) == e {
   |                          ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
23 |             if *a.offset(isize::try_from(i)) == e {
   |                          ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:23:26
   |
23 |             if *a.offset(i as isize) == e {
   |                          ^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:23:26
   |
23 |             if *a.offset(i as isize) == e {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:27:13
   |
27 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: equal expressions as operands to `!=`
  --> src/main.rs:29:9
   |
29 |         0_i32 != 0_i32
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op
   = note: `#[warn(clippy::eq_op)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:40:29
   |
40 |             if !elem(a, m, *a.offset(i as isize)) {
   |                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:43:47
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                                               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:43:18
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                  ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:40:38
   |
40 |             if !elem(a, m, *a.offset(i as isize)) {
   |                                      ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
40 |             if !elem(a, m, *a.offset(isize::try_from(i))) {
   |                                      ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:40:38
   |
40 |             if !elem(a, m, *a.offset(i as isize)) {
   |                                      ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:40:38
   |
40 |             if !elem(a, m, *a.offset(i as isize)) {
   |                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:43:56
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                                                        ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(isize::try_from(i));
   |                                                        ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:43:56
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                                                        ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:56
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:43:27
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                           ^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
43 |                 *a.offset(isize::try_from(fresh0)) = *a.offset(i as isize);
   |                           ~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:43:27
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                           ^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:43:27
   |
43 |                 *a.offset(fresh0 as isize) = *a.offset(i as isize);
   |                           ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:46:13
   |
46 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:64:10
   |
64 |         *b = malloc((m as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:66:15
   |
66 |             (*b).cast::<libc::c_void>(),
   |               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:60:13
   |
60 |             a as *const libc::c_void,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:63:26
   |
63 |         let mut m: i32 = nub(c, n) as i32;
   |                          ^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
63 |         let mut m: i32 = i32::try_from(nub(c, n));
   |                          ~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:63:26
   |
63 |         let mut m: i32 = nub(c, n) as i32;
   |                          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:64:21
   |
64 |         *b = malloc((m as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                     ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:64:21
   |
64 |         *b = malloc((m as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64)).cast::<i32>();
   |                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:13
   |
67 |             c as *const libc::c_void,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:68:13
   |
68 |             (m as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64),
   |             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:13
   |
68 |             (m as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64),
   |             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:71:9
   |
71 |         m as u64
   |         ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:9
   |
71 |         m as u64
   |         ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:88:37
   |
88 |             print!("{} ", *b.offset(i as isize));
   |                                     ^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
88 |             print!("{} ", *b.offset(isize::try_from(i)));
   |                                     ~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:88:37
   |
88 |             print!("{} ", *b.offset(i as isize));
   |                                     ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:37
   |
88 |             print!("{} ", *b.offset(i as isize));
   |                                     ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:90:13
   |
90 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:14
   |
92 |         puts((b"\0" as *const u8).cast::<i8>());
   |              ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:27:13
   |
27 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:46:13
   |
46 |             i;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:90:13
   |
90 |             i;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 40 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 40 warnings (40 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 3.94s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/repeat)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/repeat_a_string)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:22:36
   |
22 |         let mut slen: u64 = strlen(s);
   |                                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:23:40
   |
23 |         let mut dest: *mut i8 = malloc((n as u64).wrapping_mul(slen).wrapping_add(1)).cast::<i8>();
   |                                        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:23:40
   |
23 |         let mut dest: *mut i8 = malloc((n as u64).wrapping_mul(slen).wrapping_add(1)).cast::<i8>();
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:31:13
   |
31 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:32:26
   |
32 |             p = p.offset(slen as isize);
   |                          ^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
32 |             p = p.offset(isize::try_from(slen));
   |                          ~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:32:26
   |
32 |             p = p.offset(slen as isize);
   |                          ^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:32:26
   |
32 |             p = p.offset(slen as isize);
   |                          ^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:34:14
   |
34 |         *p = '\0' as i8;
   |              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:52
   |
42 |         let mut result: *mut i8 = string_repeat(5, (b"ha\0" as *const u8).cast::<i8>());
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:31:13
   |
31 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main" test) generated 11 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 11 warnings (11 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.52s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/rock_paper_scissors)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:22:5
   |
22 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: operator precedence can trip the unwary
  --> src/main.rs:34:19
   |
34 |           while i < n - 1
   |  ___________________^
35 | |             & &{
36 | |                 s -= *p.offset(i as isize);
37 | |                 s >= 0 as f64
38 | |             }
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
   = note: `#[warn(clippy::precedence)]` on by default
help: consider parenthesizing your expression
   |
34 ~         while i < (n - 1) & &{
35 +                 s -= *p.offset(i as isize);
36 +                 s >= 0 as f64
37 +             }
   |

error[E0277]: no implementation for `i32 & &bool`
  --> src/main.rs:35:13
   |
35 |             & &{
   |             ^ no implementation for `i32 & &bool`
   |
   = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `i32`
   = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
             <&'a i32 as std::ops::BitAnd<i32>>
             <&i32 as std::ops::BitAnd<&i32>>
             <i32 as std::ops::BitAnd<&i32>>
             <i32 as std::ops::BitAnd>

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 3 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/roman_numerals_decode)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:22:5
   |
22 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: no implementation for `i32 & &bool`
  --> src/main.rs:40:21
   |
40 |                     & &{
   |                     ^ no implementation for `i32 & &bool`
   |
   = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `i32`
   = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
             <&'a i32 as std::ops::BitAnd<i32>>
             <&i32 as std::ops::BitAnd<&i32>>
             <i32 as std::ops::BitAnd<&i32>>
             <i32 as std::ops::BitAnd>

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/roman_numerals_encode)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:184:5
    |
184 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
   --> src/main.rs:201:5
    |
201 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block

warning: exported structs should not be exhaustive
  --> src/main.rs:35:1
   |
35 | / pub struct _IO_FILE {
36 | |     pub _flags: i32,
37 | |     pub _IO_read_ptr: *mut i8,
38 | |     pub _IO_read_end: *mut i8,
...  |
64 | |     pub _unused2: [i8; 20],
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
35 + #[non_exhaustive]
36 | pub struct _IO_FILE {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:81:17
   |
81 |             s = s.offset(1);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:87:17
   |
87 |             s = s.offset(1);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:90:17
   |
90 |             s = s.offset(1);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:96:17
   |
96 |             s = s.offset(1);
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:102:17
    |
102 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:105:17
    |
105 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:111:17
    |
111 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:117:17
    |
117 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:120:17
    |
120 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:126:17
    |
126 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:132:17
    |
132 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:135:17
    |
135 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:17
    |
141 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:147:17
    |
147 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:150:17
    |
150 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:156:17
    |
156 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:162:17
    |
162 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:165:17
    |
165 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:171:17
    |
171 |             s = s.offset(1);
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:175:10
    |
175 |         *s = 0;
    |          ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:17
   |
74 |                 (b"Roman numeral for zero requested.\0" as *const u8).cast::<i8>(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:23
   |
82 |             *fresh0 = 'M' as i8;
   |                       ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:23
   |
88 |             *fresh1 = 'C' as i8;
   |                       ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:91:23
   |
91 |             *fresh2 = 'M' as i8;
   |                       ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:97:23
   |
97 |             *fresh3 = 'D' as i8;
   |                       ^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:23
    |
103 |             *fresh4 = 'C' as i8;
    |                       ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:106:23
    |
106 |             *fresh5 = 'D' as i8;
    |                       ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:112:23
    |
112 |             *fresh6 = 'C' as i8;
    |                       ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:118:23
    |
118 |             *fresh7 = 'X' as i8;
    |                       ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:121:23
    |
121 |             *fresh8 = 'C' as i8;
    |                       ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:127:23
    |
127 |             *fresh9 = 'L' as i8;
    |                       ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:133:24
    |
133 |             *fresh10 = 'X' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:136:24
    |
136 |             *fresh11 = 'L' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:142:24
    |
142 |             *fresh12 = 'X' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:148:24
    |
148 |             *fresh13 = 'I' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:151:24
    |
151 |             *fresh14 = 'X' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:157:24
    |
157 |             *fresh15 = 'V' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:163:24
    |
163 |             *fresh16 = 'I' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:166:24
    |
166 |             *fresh17 = 'V' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:24
    |
172 |             *fresh18 = 'I' as i8;
    |                        ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:193:13
    |
193 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
   --> src/main.rs:193:13
    |
193 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 46 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 46 warnings (46 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.55s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/root_mean_square)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (8 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:22:21
   |
22 |             sum += *v.offset(i as isize) * *v.offset(i as isize);
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:22:45
   |
22 |             sum += *v.offset(i as isize) * *v.offset(i as isize);
   |                                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: floating-point arithmetic detected
  --> src/main.rs:22:13
   |
22 |             sum += *v.offset(i as isize) * *v.offset(i as isize);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:30
   |
22 |             sum += *v.offset(i as isize) * *v.offset(i as isize);
   |                              ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:22:54
   |
22 |             sum += *v.offset(i as isize) * *v.offset(i as isize);
   |                                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:24:13
   |
24 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:26:14
   |
26 |         sqrt(sum / f64::from(n))
   |              ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `u64` to `i32` may truncate the value
  --> src/main.rs:38:13
   |
38 | /             (::core::mem::size_of::<[f64; 10]>() as u64)
39 | |                 .wrapping_div(::core::mem::size_of::<f64>() as u64) as i32,
   | |__________________________________________________________________________^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
38 ~             i32::try_from((::core::mem::size_of::<[f64; 10]>() as u64)
39 ~                 .wrapping_div(::core::mem::size_of::<f64>() as u64)),
   |

warning: path statement with no effect
  --> src/main.rs:24:13
   |
24 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 10 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 10 warnings (10 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.61s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/roots_of_unity)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (30 fixes)
warning: floating-point arithmetic detected
  --> src/main.rs:22:28
   |
22 |         let mut PI2: f64 = atan2(1_f64, 1_f64) * 8_f64;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:33:32
   |
33 |                 } else if n == 4_i32 * i {
   |                                ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:35:32
   |
35 |                 } else if n == 2_i32 * i {
   |                                ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:37:27
   |
37 |                 } else if 3_i32 * n == 4_i32 * i {
   |                           ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:37:40
   |
37 |                 } else if 3_i32 * n == 4_i32 * i {
   |                                        ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: floating-point arithmetic detected
  --> src/main.rs:40:25
   |
40 |                     a = f64::from(i) * PI2 / f64::from(n);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: strict comparison of `f32` or `f64`
  --> src/main.rs:47:20
   |
47 |                 if s == 1_f64 {
   |                    ^^^^^^^^^^ help: consider comparing them within some margin of error: `(s - 1_f64).abs() < error_margin`
   |
   = note: `f32::EPSILON` and `f64::EPSILON` are available for the `error_margin`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
   = note: requested on the command line with `-W clippy::float-cmp`

warning: strict comparison of `f32` or `f64`
  --> src/main.rs:49:27
   |
49 |                 } else if s == -1_f64 {
   |                           ^^^^^^^^^^^ help: consider comparing them within some margin of error: `(s - -1_f64).abs() < error_margin`
   |
   = note: `f32::EPSILON` and `f64::EPSILON` are available for the `error_margin`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp

warning: statement with no effect
  --> src/main.rs:62:17
   |
62 |                 i;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:65:13
   |
65 |             n;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:62:17
   |
62 |                 i;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:65:13
   |
65 |             n;
   |             ^^

warning: `c2rust_out` (bin "main") generated 13 warnings (13 duplicates)
warning: `c2rust_out` (bin "main" test) generated 13 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.66s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/rot_13)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (26 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:27:1
   |
27 | / pub struct _IO_FILE {
28 | |     pub _flags: i32,
29 | |     pub _IO_read_ptr: *mut i8,
30 | |     pub _IO_read_end: *mut i8,
...  |
56 | |     pub _unused2: [i8; 20],
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
27 + #[non_exhaustive]
28 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:27
   |
72 |         let mut ch: i32 = '\0' as i32;
   |                           ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `i8` may truncate the value
  --> src/main.rs:74:40
   |
74 |             rot13_table[ch as usize] = ch as i8;
   |                                        ^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
74 |             rot13_table[ch as usize] = i8::try_from(ch);
   |                                        ~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:40
   |
74 |             rot13_table[ch as usize] = ch as i8;
   |                                        ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/main.rs:74:25
   |
74 |             rot13_table[ch as usize] = ch as i8;
   |                         ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:74:25
   |
74 |             rot13_table[ch as usize] = ch as i8;
   |                         ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:76:13
   |
76 |             ch;
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:49
   |
79 |         while i32::from(*p.offset(13_isize)) != '\0' as i32 {
   |                                                 ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u8` to `i8` may wrap around the value
  --> src/main.rs:80:56
   |
80 |             rot13_table[*p.offset(0_isize) as usize] = *p.offset(13_isize) as i8;
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:56
   |
80 |             rot13_table[*p.offset(0_isize) as usize] = *p.offset(13_isize) as i8;
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:25
   |
80 |             rot13_table[*p.offset(0_isize) as usize] = *p.offset(13_isize) as i8;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u8` to `i8` may wrap around the value
  --> src/main.rs:81:57
   |
81 |             rot13_table[*p.offset(13_isize) as usize] = *p.offset(0_isize) as i8;
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:57
   |
81 |             rot13_table[*p.offset(13_isize) as usize] = *p.offset(0_isize) as i8;
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:25
   |
81 |             rot13_table[*p.offset(13_isize) as usize] = *p.offset(0_isize) as i8;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:83:13
   |
83 |             p;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:51
   |
86 |         while i32::from(*p_0.offset(13_isize)) != '\0' as i32 {
   |                                                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u8` to `i8` may wrap around the value
  --> src/main.rs:87:58
   |
87 |             rot13_table[*p_0.offset(0_isize) as usize] = *p_0.offset(13_isize) as i8;
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:58
   |
87 |             rot13_table[*p_0.offset(0_isize) as usize] = *p_0.offset(13_isize) as i8;
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:87:25
   |
87 |             rot13_table[*p_0.offset(0_isize) as usize] = *p_0.offset(13_isize) as i8;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u8` to `i8` may wrap around the value
  --> src/main.rs:88:59
   |
88 |             rot13_table[*p_0.offset(13_isize) as usize] = *p_0.offset(0_isize) as i8;
   |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:59
   |
88 |             rot13_table[*p_0.offset(13_isize) as usize] = *p_0.offset(0_isize) as i8;
   |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:88:25
   |
88 |             rot13_table[*p_0.offset(13_isize) as usize] = *p_0.offset(0_isize) as i8;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:90:13
   |
90 |             p_0;
   |             ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:104:41
    |
104 |             fputc(i32::from(rot13_table[ch as usize]), stdout);
    |                                         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:104:41
    |
104 |             fputc(i32::from(rot13_table[ch as usize]), stdout);
    |                                         ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:40
    |
117 |                     fopen(*argv.offset(i as isize), (b"r\0" as *const u8).cast::<i8>());
    |                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:117:53
    |
117 |                     fopen(*argv.offset(i as isize), (b"r\0" as *const u8).cast::<i8>());
    |                                                     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:119:41
    |
119 |                     perror(*argv.offset(i as isize));
    |                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:125:17
    |
125 |                 i;
    |                 -^
    |                 |
    |                 help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: used `expect()` on a `Result` value
   --> src/main.rs:138:13
    |
138 | /             (::std::ffi::CString::new(arg))
139 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:144:33
    |
144 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
144 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:144:33
    |
144 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:144:33
    |
144 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:144:33
    |
144 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: path statement with no effect
  --> src/main.rs:76:13
   |
76 |             ch;
   |             ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:83:13
   |
83 |             p;
   |             ^^

warning: path statement with no effect
  --> src/main.rs:90:13
   |
90 |             p_0;
   |             ^^^^

warning: path statement with no effect
   --> src/main.rs:125:17
    |
125 |                 i;
    |                 ^^

warning: `c2rust_out` (bin "main") generated 39 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:134:1
    |
134 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:138:13
    |
138 | /             (::std::ffi::CString::new(arg))
139 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 40 warnings (39 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.73s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/rpg_attributes_generator)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:23:5
   |
23 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> src/main.rs:17:25
   |
17 |         Some(r) => *r = result,
   |                    --   ^^^^^^ expected `i64`, found `u64`
   |                    |
   |                    expected due to the type of this binding

For more information about this error, try `rustc --explain E0308`.
warning: `c2rust_out` (bin "main") generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/runge_kutta_method)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:39:37
   |
39 |             Some(f_m) => dx * f_m(x.wrapping_add(dx), y.wrapping_add(k3)),
   |                                     ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:39:57
   |
39 |             Some(f_m) => dx * f_m(x.wrapping_add(dx), y.wrapping_add(k3)),
   |                                                         ^^^^^^^^^^^^ method not found in `f64`

error[E0599]: no method named `wrapping_add` found for type `f64` in the current scope
  --> src/main.rs:42:56
   |
42 |         return y + (k1 + 2 as f64 * k2 + 2 as f64 * k3.wrapping_add(k4)) / 6 as f64;
   |                                                        ^^^^^^^^^^^^ method not found in `f64`

For more information about this error, try `rustc --explain E0599`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to 3 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to 3 previous errors; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/run_length_encoding)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/self_describing_numbers)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: unused import: `c2rust_out::*`
  --> src/main.rs:10:5
   |
10 | use c2rust_out::*;
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: no implementation for `{integer} & &bool`
  --> src/main.rs:40:18
   |
40 |             != 0 & &{
   |                  ^ no implementation for `{integer} & &bool`
   |
   = help: the trait `std::ops::BitAnd<&bool>` is not implemented for `{integer}`
   = help: the following other types implement trait `std::ops::BitAnd<Rhs>`:
             <&'a i128 as std::ops::BitAnd<i128>>
             <&'a i16 as std::ops::BitAnd<i16>>
             <&'a i32 as std::ops::BitAnd<i32>>
             <&'a i64 as std::ops::BitAnd<i64>>
             <&'a i8 as std::ops::BitAnd<i8>>
             <&'a isize as std::ops::BitAnd<isize>>
             <&'a u128 as std::ops::BitAnd<u128>>
             <&'a u16 as std::ops::BitAnd<u16>>
           and 40 others

For more information about this error, try `rustc --explain E0277`.
warning: `c2rust_out` (bin "main" test) generated 2 warnings (1 duplicate)
error: could not compile `c2rust_out` (bin "main" test) due to previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main") generated 2 warnings (2 duplicates)
error: could not compile `c2rust_out` (bin "main") due to previous error; 2 warnings emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/semiprime)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/sequence_of_non_squares)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
 --> lib.rs:8:12
  |
8 | #![feature(label_break_value)]
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(stable_features)]` on by default

warning: `c2rust_out` (lib test) generated 2 warnings (1 duplicate)
warning: `c2rust_out` (lib) generated 2 warnings (2 duplicates)
       Fixed src/main.rs (17 fixes)
warning: the feature `label_break_value` has been stable since 1.65.0 and no longer requires an attribute to enable
  --> src/main.rs:10:12
   |
10 | #![feature(label_break_value)]
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(stable_features)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:26:9
   |
26 |         n + (0.5f64 + sqrt(f64::from(n))) as i32
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:26:13
   |
26 |         n + (0.5f64 + sqrt(f64::from(n))) as i32
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:26:13
   |
26 |         n + (0.5f64 + sqrt(f64::from(n))) as i32
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
  --> src/main.rs:26:13
   |
26 |         n + (0.5f64 + sqrt(f64::from(n))) as i32
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: statement with no effect
  --> src/main.rs:36:9
   |
36 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: strict comparison of `f32` or `f64`
  --> src/main.rs:44:16
   |
44 |             if j != floor(j) {
   |                ^^^^^^^^^^^^^ help: consider comparing them within some margin of error: `(j - floor(j)).abs() > error_margin`
   |
   = note: `f32::EPSILON` and `f64::EPSILON` are available for the `error_margin`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
   = note: requested on the command line with `-W clippy::float-cmp`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:47:21
   |
47 |                     (b"j != floor(j)\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:48:21
   |
48 |                     (b"main.c\0" as *const u8).cast::<i8>(),
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: strict comparison of `f32` or `f64`
  --> src/main.rs:53:16
   |
53 |             if j != floor(j) {
   |                ^^^^^^^^^^^^^ help: consider comparing them within some margin of error: `(j - floor(j)).abs() > error_margin`
   |
   = note: `f32::EPSILON` and `f64::EPSILON` are available for the `error_margin`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:56:25
   |
56 |                         (b"j != floor(j)\0" as *const u8).cast::<i8>(),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:57:25
   |
57 |                         (b"main.c\0" as *const u8).cast::<i8>(),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:63:13
   |
63 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:36:9
   |
36 |         i;
   |         ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:63:13
   |
63 |             i;
   |             ^^

warning: `c2rust_out` (bin "main") generated 16 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 16 warnings (16 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.66s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/set)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (35 fixes)
warning: unnecessary `unsafe` block
  --> src/main.rs:27:5
   |
27 |     unsafe {
   |     ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:49
   |
29 |         print!("{} is:", build_str_from_raw_ptr(name as *mut u8));
   |                                                 ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: statement with no effect
  --> src/main.rs:36:13
   |
36 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:22
   |
38 |         print!("{}", '\n' as i32);
   |                      ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:53:17
   |
53 |     show_set(a, (b"a\0" as *const u8).cast::<i8>());
   |                 ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:62:9
   |
62 |         i;
   |         -^
   |         |
   |         help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:68:17
   |
68 |     show_set(b, (b"b\0" as *const u8).cast::<i8>());
   |                 ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:69:21
   |
69 |     show_set(a | b, (b"union(a, b)\0" as *const u8).cast::<i8>());
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:71:17
   |
71 |     show_set(c, (b"c = common(a, b)\0" as *const u8).cast::<i8>());
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:72:22
   |
72 |     show_set(a & !b, (b"a - b\0" as *const u8).cast::<i8>());
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:73:22
   |
73 |     show_set(b & !a, (b"b - a\0" as *const u8).cast::<i8>());
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: path statement with no effect
  --> src/main.rs:36:13
   |
36 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:62:9
   |
62 |         i;
   |         ^^

warning: `c2rust_out` (bin "main") generated 14 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 14 warnings (14 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.83s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/sexy_primes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/short_circuit_evaluation)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
error[E0601]: `main` function not found in crate `main`
  |
  = note: consider adding a `main` function to `src/main.rs`

For more information about this error, try `rustc --explain E0601`.
warning: `c2rust_out` (bin "main") generated 1 warning (1 duplicate)
error: could not compile `c2rust_out` (bin "main") due to previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `c2rust_out` (bin "main" test) generated 1 warning (1 duplicate)
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/show_ascii_table)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (15 fixes)
warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:49
   |
38 |                         sprintf(k.as_mut_ptr(), (b"Spc\0" as *const u8).cast::<i8>());
   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:49
   |
41 |                         sprintf(k.as_mut_ptr(), (b"Del\0" as *const u8).cast::<i8>());
   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:44:49
   |
44 |                         sprintf(k.as_mut_ptr(), (b"%c\0" as *const u8).cast::<i8>(), j);
   |                                                 ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: path statement with no effect
  --> src/main.rs:56:13
   |
56 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 6 warnings (6 duplicates)
warning: `c2rust_out` (bin "main" test) generated 6 warnings (1 duplicate)
    Finished dev [unoptimized + debuginfo] target(s) in 1.60s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/show_the_epoch)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (6 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:30:1
   |
30 | / pub struct tm {
31 | |     pub tm_sec: i32,
32 | |     pub tm_min: i32,
33 | |     pub tm_hour: i32,
...  |
41 | |     pub tm_zone: *const i8,
42 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
30 + #[non_exhaustive]
31 | pub struct tm {
   |

warning: the function `gmtime` doesn't need a mutable reference
  --> src/main.rs:49:51
   |
49 |             build_str_from_raw_ptr(asctime(gmtime(&mut t)).cast::<u8>())
   |                                                   ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed
   = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default

warning: `c2rust_out` (bin "main") generated 3 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 3 warnings (3 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.63s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/sierpinski_arrowhead_curve)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (31 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:102:5
    |
102 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: exported structs should not be exhaustive
  --> src/main.rs:27:1
   |
27 | / pub struct _IO_FILE {
28 | |     pub _flags: i32,
29 | |     pub _IO_read_ptr: *mut i8,
30 | |     pub _IO_read_end: *mut i8,
...  |
56 | |     pub _unused2: [i8; 20],
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
27 + #[non_exhaustive]
28 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:63:1
   |
63 | / pub struct cursor_tag {
64 | |     pub x: f64,
65 | |     pub y: f64,
66 | |     pub angle: i32,
67 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
63 + #[non_exhaustive]
64 | pub struct cursor_tag {
   |

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:73:30
   |
73 |         (*cursor).angle = ((*cursor).angle + angle) % 360_i32;
   |                              ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:73:11
   |
73 |         (*cursor).angle = ((*cursor).angle + angle) % 360_i32;
   |           ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:73:27
   |
73 |         (*cursor).angle = ((*cursor).angle + angle) % 360_i32;
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:73:27
   |
73 |         (*cursor).angle = ((*cursor).angle + angle) % 360_i32;
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:81:70
   |
81 |         let mut theta: f64 = 3.141_592_653_589_793_f64 * f64::from((*cursor).angle) / 180.0f64;
   |                                                                      ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:82:11
   |
82 |         (*cursor).x += length * cos(theta);
   |           ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:83:11
   |
83 |         (*cursor).y += length * sin(theta);
   |           ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:85:13
   |
85 |             out,
   |             ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:87:15
   |
87 |             (*cursor).x,
   |               ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:88:15
   |
88 |             (*cursor).y,
   |               ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: floating-point arithmetic detected
  --> src/main.rs:81:30
   |
81 |         let mut theta: f64 = 3.141_592_653_589_793_f64 * f64::from((*cursor).angle) / 180.0f64;
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: approximate value of `f64::consts::PI` found
  --> src/main.rs:81:30
   |
81 |         let mut theta: f64 = 3.141_592_653_589_793_f64 * f64::from((*cursor).angle) / 180.0f64;
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using the constant directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
   = note: `#[warn(clippy::approx_constant)]` on by default

warning: floating-point arithmetic detected
  --> src/main.rs:82:9
   |
82 |         (*cursor).x += length * cos(theta);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:83:9
   |
83 |         (*cursor).y += length * sin(theta);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:13
   |
86 |             (b"L%g,%g\n\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: floating-point arithmetic detected
   --> src/main.rs:109:17
    |
109 |                 length / 2_f64,
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:111:17
    |
111 |                 -angle,
    |                 ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: floating-point arithmetic detected
   --> src/main.rs:114:47
    |
114 |             curve(out, order.wrapping_sub(1), length / 2_f64, cursor, angle);
    |                                               ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:119:17
    |
119 |                 length / 2_f64,
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:121:17
    |
121 |                 -angle,
    |                 ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:145:13
    |
145 |             out,
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:151:13
    |
151 |             out,
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:155:13
    |
155 |             out,
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:159:13
    |
159 |             out,
    |             ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:165:17
    |
165 |         fprintf(out, (b"'/>\n</svg>\n\0" as *const u8).cast::<i8>());
    |                 ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: floating-point arithmetic detected
   --> src/main.rs:132:40
    |
132 |         let side: f64 = 2.0f64.mul_add(-margin, f64::from(size));
    |                                        ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:140:52
    |
140 |         cursor.y = 0.5f64.mul_add(f64::from(size), 0.25f64 * sqrt(3_f64) * side);
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:146:13
    |
146 |             (b"<svg xmlns='http://www.w3.org/2000/svg' width='%d' height='%d'>\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:152:13
    |
152 |             (b"<rect width='100%%' height='100%%' fill='white'/>\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:156:13
    |
156 |             (b"<path stroke-width='1' stroke='black' fill='none' d='\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:160:13
    |
160 |             (b"M%g,%g\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:165:22
    |
165 |         fprintf(out, (b"'/>\n</svg>\n\0" as *const u8).cast::<i8>());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:172:39
    |
172 |         let mut filename: *const i8 = (b"sierpinski_arrowhead.svg\0" as *const u8).cast::<i8>();
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:176:50
    |
176 |         let mut out: *mut FILE = fopen(filename, (b"w\0" as *const u8).cast::<i8>());
    |                                                  ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `expect()` on a `Result` value
   --> src/main.rs:191:13
    |
191 | /             (::std::ffi::CString::new(arg))
192 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:197:33
    |
197 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
197 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:197:33
    |
197 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:197:33
    |
197 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:197:33
    |
197 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `c2rust_out` (bin "main") generated 43 warnings (1 duplicate)
warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:187:1
    |
187 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:191:13
    |
191 | /             (::std::ffi::CString::new(arg))
192 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: `c2rust_out` (bin "main" test) generated 44 warnings (43 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.78s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/sierpinski_triangle)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (48 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:30:1
   |
30 | / pub struct _IO_FILE {
31 | |     pub _flags: i32,
32 | |     pub _IO_read_ptr: *mut i8,
33 | |     pub _IO_read_end: *mut i8,
...  |
59 | |     pub _unused2: [i8; 20],
60 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
30 + #[non_exhaustive]
31 | pub struct _IO_FILE {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:66:1
   |
66 | / pub struct rgb {
67 | |     pub r: f64,
68 | |     pub g: f64,
69 | |     pub b: f64,
70 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
66 + #[non_exhaustive]
67 | pub struct rgb {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:37
   |
86 | pub static mut pix: *mut *mut rgb = 0 as *const *mut rgb as *mut *mut rgb;
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:86:37
   |
86 | pub static mut pix: *mut *mut rgb = 0 as *const *mut rgb as *mut *mut rgb;
   |                                     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:31
    |
102 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:102:50
    |
102 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                  ^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
    |
102 |         let mut p: *mut rgb = &mut *(*pix.offset(isize::try_from(y_0))).offset(x_0 as isize) as *mut rgb;
    |                                                  ~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:50
    |
102 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:102:72
    |
102 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                                        ^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
102 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(isize::try_from(x_0)) as *mut rgb;
    |                                                                        ~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:102:72
    |
102 |         let mut p: *mut rgb = &mut *(*pix.offset(y_0 as isize)).offset(x_0 as isize) as *mut rgb;
    |                                                                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:103:26
    |
103 |         let mut h: f64 = 6.0f64 * clen as f64 / cscale as f64;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: requested on the command line with `-W clippy::float-arithmetic`

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> src/main.rs:103:35
    |
103 |         let mut h: f64 = 6.0f64 * clen as f64 / cscale as f64;
    |                                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: requested on the command line with `-W clippy::cast-precision-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:35
    |
103 |         let mut h: f64 = 6.0f64 * clen as f64 / cscale as f64;
    |                                   ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `f64` causes a loss of precision (`i64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> src/main.rs:103:49
    |
103 |         let mut h: f64 = 6.0f64 * clen as f64 / cscale as f64;
    |                                                 ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:103:49
    |
103 |         let mut h: f64 = 6.0f64 * clen as f64 / cscale as f64;
    |                                                 ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:105:26
    |
105 |         let mut c: f64 = 1_f64 * VAL;
    |                          ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:106:26
    |
106 |         let mut X: f64 = c * (1_f64 - fabs(fmod(h, 2_f64) - 1_f64));
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `f64` to `i32` may truncate the value
   --> src/main.rs:107:15
    |
107 |         match h as i32 {
    |               ^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:107:15
    |
107 |         match h as i32 {
    |               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:109:17
    |
109 |                 (*p).r += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:110:17
    |
110 |                 (*p).g += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:113:17
    |
113 |                 (*p).r += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:114:17
    |
114 |                 (*p).g += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:117:17
    |
117 |                 (*p).g += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:118:17
    |
118 |                 (*p).b += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:121:17
    |
121 |                 (*p).g += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:122:17
    |
122 |                 (*p).b += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:125:17
    |
125 |                 (*p).r += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:126:17
    |
126 |                 (*p).b += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:129:17
    |
129 |                 (*p).r += c;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
   --> src/main.rs:130:17
    |
130 |                 (*p).b += X;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:141:26
    |
141 |         while i32::from(*str) != '\0' as i32 {
    |                          ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
    = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:143:19
    |
143 |             str = str.offset(1);
    |                   ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:141:34
    |
141 |         while i32::from(*str) != '\0' as i32 {
    |                                  ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:147:37
    |
147 |                         iter_string((b"XHXVX\0" as *const u8).cast::<i8>(), d.wrapping_sub(1));
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:150:25
    |
150 |                         clen;
    |                         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:151:31
    |
151 |                         h_rgb(x / scale, y / scale);
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:151:42
    |
151 |                         h_rgb(x / scale, y / scale);
    |                                          ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `i64` may wrap around the value
   --> src/main.rs:157:27
    |
157 |                     len = (1u64 << d) as i64;
    |                           ^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:157:27
    |
157 |                     len = (1u64 << d) as i64;
    |                           ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:165:25
    |
165 |                         clen;
    |                         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:166:31
    |
166 |                         h_rgb(x / scale, y / scale);
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:166:42
    |
166 |                         h_rgb(x / scale, y / scale);
    |                                          ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `i64` may wrap around the value
   --> src/main.rs:171:27
    |
171 |                     len = (1u64 << d) as i64;
    |                           ^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:171:27
    |
171 |                     len = (1u64 << d) as i64;
    |                           ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:179:25
    |
179 |                         clen;
    |                         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:180:31
    |
180 |                         h_rgb(x / scale, y / scale);
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:180:42
    |
180 |                         h_rgb(x / scale, y / scale);
    |                                          ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:199:31
    |
199 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:199:31
    |
199 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:200:31
    |
200 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:200:31
    |
200 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:202:79
    |
202 |         pix = malloc((::core::mem::size_of::<*mut rgb>() as u64).wrapping_mul(h as u64)).cast::<*mut rgb>();
    |                                                                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:202:79
    |
202 |         pix = malloc((::core::mem::size_of::<*mut rgb>() as u64).wrapping_mul(h as u64)).cast::<*mut rgb>();
    |                                                                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:205:44
    |
205 |             let fresh3 = &mut (*pix.offset(i as isize));
    |                                            ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
205 |             let fresh3 = &mut (*pix.offset(isize::try_from(i)));
    |                                            ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:205:44
    |
205 |             let fresh3 = &mut (*pix.offset(i as isize));
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:206:34
    |
206 |             *fresh3 = buf.offset((w.wrapping_mul(i)) as isize);
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
206 |             *fresh3 = buf.offset(isize::try_from((w.wrapping_mul(i))));
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:206:34
    |
206 |             *fresh3 = buf.offset((w.wrapping_mul(i)) as isize);
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:208:13
    |
208 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:214:31
    |
214 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:214:31
    |
214 |                 .wrapping_mul(w as u64)
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:215:31
    |
215 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:215:31
    |
215 |                 .wrapping_mul(h as u64),
    |                               ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:228:13
    |
228 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:230:21
    |
230 |         iter_string((b"VXH\0" as *const u8).cast::<i8>(), depth);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:231:40
    |
231 |         let mut fpix: *mut u8 = malloc((w * h.wrapping_mul(3i64)) as u64).cast::<u8>();
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:231:40
    |
231 |         let mut fpix: *mut u8 = malloc((w * h.wrapping_mul(3i64)) as u64).cast::<u8>();
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:231:40
    |
231 |         let mut fpix: *mut u8 = malloc((w * h.wrapping_mul(3i64)) as u64).cast::<u8>();
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:234:13
    |
234 |         i = 3 * w * h.wrapping_sub(1);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:236:29
    |
236 |             if *dbuf.offset(i as isize) > maxv {
    |                             ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
236 |             if *dbuf.offset(isize::try_from(i)) > maxv {
    |                             ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:236:29
    |
236 |             if *dbuf.offset(i as isize) > maxv {
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:237:37
    |
237 |                 maxv = *dbuf.offset(i as isize);
    |                                     ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
237 |                 maxv = *dbuf.offset(isize::try_from(i));
    |                                     ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:237:37
    |
237 |                 maxv = *dbuf.offset(i as isize);
    |                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:240:13
    |
240 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:242:13
    |
242 |         i = 3 * h * w.wrapping_sub(1);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `f64` to `u8` may truncate the value
   --> src/main.rs:244:40
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `f64` to `u8` may lose the sign of the value
   --> src/main.rs:244:40
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:244:40
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
   --> src/main.rs:244:40
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:244:64
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                                                ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(isize::try_from(i)) / maxv) as u8;
    |                                                                ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:244:64
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/main.rs:244:26
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                          ^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
244 |             *fpix.offset(isize::try_from(i)) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                          ~~~~~~~~~~~~~~~~~~

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:244:26
    |
244 |             *fpix.offset(i as isize) = (255_f64 * *dbuf.offset(i as isize) / maxv) as u8;
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:246:13
    |
246 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:251:13
    |
251 |             fpix as *const libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/main.rs:252:13
    |
252 |             (h * w.wrapping_mul(3i64)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:252:13
    |
252 |             (h * w.wrapping_mul(3i64)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:252:13
    |
252 |             (h * w.wrapping_mul(3i64)) as u64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:272:13
    |
272 |             (b"size: %d depth: %d\n\0" as *const u8).cast::<i8>(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function which may panic missing `# Panics` section
   --> src/main.rs:281:1
    |
281 | pub fn main() {
    | ^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/main.rs:285:13
    |
285 | /             (::std::ffi::CString::new(arg))
286 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: requested on the command line with `-W clippy::missing-panics-doc`

warning: used `expect()` on a `Result` value
   --> src/main.rs:285:13
    |
285 | /             (::std::ffi::CString::new(arg))
286 | |                 .expect("Failed to convert argument into CString.")
    | |___________________________________________________________________^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
   --> src/main.rs:291:33
    |
291 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
291 |     ::std::process::exit(main_0(i32::try_from(args.len() - 1), args.as_mut_ptr()));
    |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
   --> src/main.rs:291:33
    |
291 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:291:33
    |
291 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:291:33
    |
291 |     ::std::process::exit(main_0((args.len() - 1) as i32, args.as_mut_ptr()));
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: path statement with no effect
   --> src/main.rs:150:25
    |
150 |                         clen;
    |                         ^^^^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:165:25
    |
165 |                         clen;
    |                         ^^^^^

warning: path statement with no effect
   --> src/main.rs:179:25
    |
179 |                         clen;
    |                         ^^^^^

warning: path statement with no effect
   --> src/main.rs:208:13
    |
208 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:228:13
    |
228 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:240:13
    |
240 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:246:13
    |
246 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 102 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 101 warnings (101 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.95s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/sieve_of_eratosthenes)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (25 fixes)
warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:28:10
   |
28 |         *c = n.wrapping_sub(1);
   |          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref
   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:43:26
   |
43 |                         *c -= 1_i32;
   |                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:44:26
   |
44 |                         *c;
   |                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: casting `f64` to `i32` may truncate the value
  --> src/main.rs:29:13
   |
29 |         m = sqrt(f64::from(n)) as i32;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:29:13
   |
29 |         m = sqrt(f64::from(n)) as i32;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:31:13
   |
31 |             (n.wrapping_add(1i32)) as u64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:31:13
   |
31 |             (n.wrapping_add(1i32)) as u64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:38:32
   |
38 |             if *sieve_0.offset(i as isize) == 0 {
   |                                ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:40
   |
41 |                     if *sieve_0.offset(j as isize) == 0 {
   |                                        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:42:41
   |
42 |                         *sieve_0.offset(j as isize) = 1;
   |                                         ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:43:25
   |
43 |                         *c -= 1_i32;
   |                         ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: statement with no effect
  --> src/main.rs:44:25
   |
44 |                         *c;
   |                         ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:62:13
   |
62 |             ((n.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:13
   |
62 |             ((n.wrapping_add(1i32)) as u64).wrapping_mul(::core::mem::size_of::<i32>() as u64),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:77:14
   |
77 |             *a.offset(i as isize) = 1_i32;
   |              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:84:17
   |
84 |             if *a.offset(i as isize) == 1_i32 {
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:92:26
   |
92 |                         *a.offset((i.wrapping_mul(j)) as isize),
   |                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:94:22
   |
94 |                     *a.offset((i.wrapping_mul(j)) as isize) = 0_i32;
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/main.rs:99:26
   |
99 |                         *a.offset((i.wrapping_mul(j)) as isize),
   |                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/main.rs:111:17
    |
111 |             if *a.offset(i as isize) == 1_i32 {
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:77:23
   |
77 |             *a.offset(i as isize) = 1_i32;
   |                       ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:79:13
   |
79 |             i;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:26
   |
84 |             if *a.offset(i as isize) == 1_i32 {
   |                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:86:23
   |
86 |                 while i * j <= n {
   |                       ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:89:25
   |
89 |                         (b"\nBefore a[%d*%d]: %d\0" as *const u8).cast::<i8>(),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:35
   |
92 |                         *a.offset((i.wrapping_mul(j)) as isize),
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:94:31
   |
94 |                     *a.offset((i.wrapping_mul(j)) as isize) = 0_i32;
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:25
   |
96 |                         (b"\nAfter a[%d*%d]: %d\0" as *const u8).cast::<i8>(),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:35
   |
99 |                         *a.offset((i.wrapping_mul(j)) as isize),
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:102:21
    |
102 |                     j;
    |                     ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/main.rs:106:13
    |
106 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:26
    |
111 |             if *a.offset(i as isize) == 1_i32 {
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:115:13
    |
115 |             i;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unused unary operation that must be used
  --> src/main.rs:44:25
   |
44 |                         *c;
   |                         ^^ the unary operation produces a value
   |
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
44 |                         let _ = *c;
   |                         +++++++

warning: path statement with no effect
  --> src/main.rs:50:13
   |
50 |             i;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:79:13
   |
79 |             i;
   |             ^^

warning: path statement with no effect
   --> src/main.rs:102:21
    |
102 |                     j;
    |                     ^^

warning: path statement with no effect
   --> src/main.rs:106:13
    |
106 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:115:13
    |
115 |             i;
    |             ^^

warning: `c2rust_out` (bin "main") generated 41 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 41 warnings (41 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.70s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/simple_moving_average)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
       Fixed src/main.rs (31 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:20:1
   |
20 | / pub struct __va_list_tag {
21 | |     pub gp_offset: u32,
22 | |     pub fp_offset: u32,
23 | |     pub overflow_arg_area: *mut libc::c_void,
24 | |     pub reg_save_area: *mut libc::c_void,
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
20 + #[non_exhaustive]
21 | pub struct __va_list_tag {
   |

warning: exported structs should not be exhaustive
  --> src/main.rs:30:1
   |
30 | / pub struct sma_obj {
31 | |     pub sma: f64,
32 | |     pub sum: f64,
33 | |     pub period: i32,
34 | |     pub values: *mut f64,
35 | |     pub lv: i32,
36 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
30 + #[non_exhaustive]
31 | pub struct sma_obj {
   |

warning: unsafe function's docs miss `# Safety` section
  --> src/main.rs:53:1
   |
53 | pub unsafe extern "C" fn sma(mut action: u32, mut args: ...) -> sma_result_t {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc
   = note: `#[warn(clippy::missing_safety_doc)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/main.rs:67:17
   |
67 |                 ((*r.handle).period as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:67:17
   |
67 |                 ((*r.handle).period as u64).wrapping_mul(::core::mem::size_of::<f64>() as u64),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:91:17
   |
91 |                 (*o).lv += 1_i32;
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:92:39
   |
92 |                 *((*o).values).offset(fresh0 as isize) = v_0;
   |                                       ^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: floating-point arithmetic detected
  --> src/main.rs:93:17
   |
93 |                 (*o).sum += v_0;
   |                 ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: requested on the command line with `-W clippy::float-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:94:28
   |
94 |                 (*o).sma = (*o).sum / f64::from((*o).lv);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:96:17
   |
96 |                 (*o).sum -= *((*o).values).offset(((*o).lv % (*o).period) as isize);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:96:51
   |
96 |                 (*o).sum -= *((*o).values).offset(((*o).lv % (*o).period) as isize);
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:96:51
   |
96 |                 (*o).sum -= *((*o).values).offset(((*o).lv % (*o).period) as isize);
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:96:51
   |
96 |                 (*o).sum -= *((*o).values).offset(((*o).lv % (*o).period) as isize);
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: floating-point arithmetic detected
  --> src/main.rs:97:17
   |
97 |                 (*o).sum += v_0;
   |                 ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: floating-point arithmetic detected
  --> src/main.rs:98:28
   |
98 |                 (*o).sma = (*o).sum / f64::from((*o).period);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:99:39
   |
99 |                 *((*o).values).offset(((*o).lv % (*o).period) as isize) = v_0;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:99:39
   |
99 |                 *((*o).values).offset(((*o).lv % (*o).period) as isize) = v_0;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:99:39
   |
99 |                 *((*o).values).offset(((*o).lv % (*o).period) as isize) = v_0;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/main.rs:100:17
    |
100 |                 (*o).lv += 1_i32;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: statement with no effect
   --> src/main.rs:101:17
    |
101 |                 (*o).lv;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
    = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/main.rs:122:15
    |
122 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:122:15
    |
122 |         while (i as u64)
    |               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:128:19
    |
128 |                 v[i as usize],
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:128:19
    |
128 |                 v[i as usize],
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:129:37
    |
129 |                 (sma(SMA_ADD, h3, v[i as usize])).sma,
    |                                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:129:37
    |
129 |                 (sma(SMA_ADD, h3, v[i as usize])).sma,
    |                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:130:37
    |
130 |                 (sma(SMA_ADD, h5, v[i as usize])).sma
    |                                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:130:37
    |
130 |                 (sma(SMA_ADD, h5, v[i as usize])).sma
    |                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:133:13
    |
133 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
   --> src/main.rs:133:13
    |
133 |             i;
    |             ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `c2rust_out` (bin "main") generated 31 warnings (1 duplicate)
warning: `c2rust_out` (bin "main" test) generated 31 warnings (31 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 1.72s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/value_capture)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (16 fixes)
warning: unnecessary `unsafe` block
   --> src/main.rs:123:5
    |
123 |     unsafe {
    |     ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: casting `isize` to `u64` may lose the sign of the value
  --> src/main.rs:36:28
   |
36 |           let mut len: u64 = (::core::mem::transmute::<
   |  ____________________________^
37 | | // SAFETY: machine generated unsafe code
38 | |             Option<unsafe extern "C" fn(i32) -> f_int>,
39 | |             *mut libc::c_void,
...  |
50 | |             unsafe extern "C" fn() -> i32,
51 | |         >(_tmpl)))) as u64;
   | |__________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:41:16
   |
41 |         >(Some(dupf as unsafe extern "C" fn(i32) -> f_int)))
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: transmute from a type (`unsafe extern "C" fn() -> i32`) to itself
  --> src/main.rs:46:16
   |
46 |           >(Some(::core::mem::transmute::<
   |  ________________^
47 | | // SAFETY: machine generated unsafe code
48 | |             unsafe extern "C" fn() -> i32,
49 | | // SAFETY: machine generated unsafe code
50 | |             unsafe extern "C" fn() -> i32,
51 | |         >(_tmpl)))) as u64;
   | |________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute
   = note: `#[warn(clippy::useless_transmute)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:61:70
   |
61 |         if ret == ::core::mem::transmute::<*mut libc::c_void, f_int>(-1i32 as *mut libc::c_void) {
   |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:62:20
   |
62 |             perror((b"mmap\0" as *const u8).cast::<i8>());
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: transmute from a type (`unsafe extern "C" fn() -> i32`) to itself
  --> src/main.rs:69:22
   |
69 |                   Some(::core::mem::transmute::<
   |  ______________________^
70 | | // SAFETY: machine generated unsafe code
71 | |                     unsafe extern "C" fn() -> i32,
72 | | // SAFETY: machine generated unsafe code
73 | |                     unsafe extern "C" fn() -> i32,
74 | |                 >(_tmpl)),
   | |________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:81:25
   |
81 |                 .offset(len as isize)
   |                         ^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
81 |                 .offset(isize::try_from(len))
   |                         ~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:81:25
   |
81 |                 .offset(len as isize)
   |                         ^^^^^^^^^^^^
   |
   = note: requested on the command line with `-W clippy::cast-possible-wrap`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:25
   |
81 |                 .offset(len as isize)
   |                         ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:82:25
   |
82 |                 .offset(-(::core::mem::size_of::<i32>() as u64 as isize))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
  --> src/main.rs:82:26
   |
82 |                 .offset(-(::core::mem::size_of::<i32>() as u64 as isize))
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
82 |                 .offset(-isize::try_from(::core::mem::size_of::<i32>() as u64))
   |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
  --> src/main.rs:82:26
   |
82 |                 .offset(-(::core::mem::size_of::<i32>() as u64 as isize))
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/main.rs:84:16
   |
84 |             if *p.cast::<i32>() as u32 == 0xdeadbeef {
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:84:16
   |
84 |             if *p.cast::<i32>() as u32 == 0xdeadbeef {
   |                ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:88:13
   |
88 |             p;
   |             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:101:19
    |
101 |             funcs[i as usize] = dupf(i);
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:101:19
    |
101 |             funcs[i as usize] = dupf(i);
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:103:13
    |
103 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: used `expect()` on an `Option` value
   --> src/main.rs:111:21
    |
111 |                     (funcs[i as usize]).expect("non-null function pointer"),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: requested on the command line with `-W clippy::expect-used`

warning: casting `i32` to `usize` may lose the sign of the value
   --> src/main.rs:111:28
    |
111 |                     (funcs[i as usize]).expect("non-null function pointer"),
    |                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
   --> src/main.rs:111:28
    |
111 |                     (funcs[i as usize]).expect("non-null function pointer"),
    |                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
   --> src/main.rs:115:13
    |
115 |             i;
    |             -^
    |             |
    |             help: did you mean to return it?: `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: literal out of range for `i32`
  --> src/main.rs:28:22
   |
28 |     let mut x: i32 = 0xdeadbeef;
   |                      ^^^^^^^^^^
   |
   = note: the literal `0xdeadbeef` (decimal `3735928559`) does not fit into the type `i32` and will become `-559038737i32`
   = help: consider using the type `u32` instead
   = note: `#[warn(overflowing_literals)]` on by default
help: to use as a negative number (decimal `-559038737`), consider using the type `u32` for the literal and cast it to `i32`
   |
28 |     let mut x: i32 = 0xdeadbeefu32 as i32;
   |                      ~~~~~~~~~~~~~~~~~~~~

warning: path statement with no effect
  --> src/main.rs:88:13
   |
88 |             p;
   |             ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/main.rs:103:13
    |
103 |             i;
    |             ^^

warning: path statement with no effect
   --> src/main.rs:115:13
    |
115 |             i;
    |             ^^

warning: `c2rust_out` (bin "main" test) generated 28 warnings (9 duplicates)
warning: `c2rust_out` (bin "main") generated 28 warnings (20 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.11s
    Updating crates.io index
   Compiling libc v0.2.147
   Compiling c2rust_out v0.0.0 (/home/c00834010/dev/crusts-benchmarks/latest/write_a_ppm_file)
warning: lint `clippy::integer_arithmetic` has been renamed to `clippy::arithmetic_side_effects`
  |
  = note: requested on the command line with `-W clippy::integer_arithmetic`

warning: `c2rust_out` (build script) generated 1 warning
warning: `c2rust_out` (lib) generated 1 warning (1 duplicate)
warning: `c2rust_out` (lib test) generated 1 warning (1 duplicate)
       Fixed src/main.rs (12 fixes)
warning: exported structs should not be exhaustive
  --> src/main.rs:24:1
   |
24 | / pub struct _IO_FILE {
25 | |     pub _flags: i32,
26 | |     pub _IO_read_ptr: *mut i8,
27 | |     pub _IO_read_end: *mut i8,
...  |
53 | |     pub _unused2: [i8; 20],
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: requested on the command line with `-W clippy::exhaustive-structs`
help: try adding #[non_exhaustive]
   |
24 + #[non_exhaustive]
25 | pub struct _IO_FILE {
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:65:13
   |
65 |             (b"first.ppm\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: requested on the command line with `-W clippy::as-conversions`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:66:13
   |
66 |             (b"wb\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:70:13
   |
70 |             (b"P6\n%d %d\n255\n\0" as *const u8).cast::<i8>(),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:79:34
   |
79 |                 color[0_usize] = (i % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: requested on the command line with `-W clippy::cast-possible-truncation`
help: ... or use `try_from` and handle the error accordingly
   |
79 |                 color[0_usize] = u8::try_from(i % 256i32);
   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:79:34
   |
79 |                 color[0_usize] = (i % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: requested on the command line with `-W clippy::cast-sign-loss`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:79:34
   |
79 |                 color[0_usize] = (i % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:79:34
   |
79 |                 color[0_usize] = (i % 256i32) as u8;
   |                                  ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic
   = note: requested on the command line with `-W clippy::modulo-arithmetic`

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:80:34
   |
80 |                 color[1_usize] = (j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
80 |                 color[1_usize] = u8::try_from(j % 256i32);
   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:80:34
   |
80 |                 color[1_usize] = (j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:80:34
   |
80 |                 color[1_usize] = (j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:80:34
   |
80 |                 color[1_usize] = (j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i32` to `u8` may truncate the value
  --> src/main.rs:81:34
   |
81 |                 color[2_usize] = (i * j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
81 |                 color[2_usize] = u8::try_from(i * j % 256i32);
   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/main.rs:81:34
   |
81 |                 color[2_usize] = (i * j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:81:34
   |
81 |                 color[2_usize] = (i * j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: you are using modulo operator on types that might have different signs
  --> src/main.rs:81:34
   |
81 |                 color[2_usize] = (i * j % 256i32) as u8;
   |                                  ^^^^^^^^^^^^^^^^
   |
   = note: double check for expected result especially when interoperating with different languages
   = note: or consider using `rem_euclid` or similar function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/main.rs:81:35
   |
81 |                 color[2_usize] = (i * j % 256i32) as u8;
   |                                   ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::integer-arithmetic`

warning: using a potentially dangerous silent `as` conversion
  --> src/main.rs:82:24
   |
82 |                 fwrite(color.as_mut_ptr() as *const libc::c_void, 1, 3, fp);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: statement with no effect
  --> src/main.rs:84:17
   |
84 |                 i;
   |                 -^
   |                 |
   |                 help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect
   = note: `#[warn(clippy::no_effect)]` on by default

warning: statement with no effect
  --> src/main.rs:87:13
   |
87 |             j;
   |             -^
   |             |
   |             help: did you mean to return it?: `return`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: path statement with no effect
  --> src/main.rs:84:17
   |
84 |                 i;
   |                 ^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/main.rs:87:13
   |
87 |             j;
   |             ^^

warning: `c2rust_out` (bin "main" test) generated 23 warnings (1 duplicate)
warning: `c2rust_out` (bin "main") generated 23 warnings (23 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 2.32s
